{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["/**\n * Loader logic\n */\nconst loader = document.querySelector<HTMLElement>('#loader');\nconst load = (pct: number) => {\n  if (loader) loader.style.width = `${pct}%`;\n};\n\n/**\n * Main Menu\n */\nconst menuItems = document.querySelectorAll('#main-menu li') as unknown as HTMLElement[];\nconst sections = document.querySelectorAll('main section') as unknown as HTMLElement[];\nmenuItems.forEach((item) => item.addEventListener('click', (event) => {\n  menuItems.forEach(i => i.classList.remove('active'));\n  sections.forEach(i => i.classList.remove('active'));\n  item.classList.add('active');\n  if (item.dataset.target) document.querySelector(item.dataset.target)?.classList.add('active');\n  hideResult();\n}));\n\n/**\n * Result Logic\n */\n\nconst showResult = (value: string) => {\n  load(100);\n  const result = document.querySelector<HTMLElement>('#result');\n  if (result) {\n    const content = result.querySelector('.content');\n    if (content) content.textContent = value;\n    setCopyText();\n    result.style.opacity = '100%';\n  }\n};\n\nconst hideResult = () => {\n  const result = document.querySelector<HTMLElement>('#result');\n  if (result) result.style.opacity = '0';\n};\n\nconst setCopyText = (value: string = 'Copy') => {\n  const copyText = document.querySelector('#result .copy span');\n  if (copyText) copyText.textContent = value;\n};\n\nconst copyAnchor = document.querySelector('#result > a.copy');\ncopyAnchor?.addEventListener('click', async (event) => {\n  event.preventDefault();\n  const parent = (event.currentTarget as HTMLElement).parentElement;\n  const content = parent?.querySelector('.content')?.textContent;\n  if (content) {\n    try {\n      await navigator.clipboard.writeText(content);\n      setCopyText('Copied!');\n    } catch (e) {\n      setCopyText('Error: You will have to copy manually :(');\n    }\n  }\n});\n\n/**\n * Character count\n */\nconst input = document.querySelector('textarea');\ninput?.addEventListener('input', () => {\n  const characterCount = document.querySelector('#digest .character-count');\n  if (characterCount) {\n    const count = input.value.length;\n    if (count === 1) characterCount.textContent = '1 character';\n    else characterCount.textContent = `${count} characters`;\n  }\n});\n\n/**\n * Digest Generation\n */\nasync function digestMessage(message: string, algorithm: string) {\n  const msgUint8 = new TextEncoder().encode(message); // encode as (utf-8) Uint8Array\n  const hashBuffer = await crypto.subtle.digest(algorithm, msgUint8); // hash the message\n  const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\n  const hashHex = hashArray\n    .map((b) => b.toString(16).padStart(2, '0'))\n    .join(''); // convert bytes to hex string\n  return hashHex;\n}\n\nconst button = document.querySelector('button');\nbutton?.addEventListener('click', () => {\n  load(0);\n  const text = input?.value;\n  if (text && selected.alg) {\n    digestMessage(text, selected.alg).then((digestHex) => {\n      showResult(digestHex);\n    });\n  }\n});\n\nlet selected: DOMStringMap;\n\nconst digestSelect = document.querySelector('#digest-select') as HTMLSelectElement;\ndigestSelect?.addEventListener('change', (event) => {\n  const menu = document.querySelector('#digest menu');\n  const outputLength = menu?.querySelector('#digest-output-length span');\n  const blockSize = menu?.querySelector('#digest-block-size span');\n  const method = menu?.querySelector('#digest-method span');\n  const specification = menu?.querySelector('#digest-specification span');\n  \n  selected = digestSelect.selectedOptions[0].dataset;\n  if (outputLength) outputLength.textContent = selected.ol || '';\n  if (blockSize) blockSize.textContent = selected.bs || '';\n  if (method) method.textContent = selected.method || '';\n  if (specification) specification.textContent = selected.spec || '';\n\n  hideResult();\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  digestSelect.dispatchEvent(new Event('change'));\n});\n\n/**\n * Pseudo Random Number Generator Logic\n */\n\nconst prngOperation = document.querySelector('#random .operation') as HTMLSelectElement;\nconst prngOptions = document.querySelector('#random .prng-options') as HTMLElement;\nconst prngByteLength = document.querySelector('#random .byte-length') as HTMLInputElement;\nconst prngOutput = document.querySelector('#random .output') as HTMLSelectElement;\nconst prngOutputEncodingControl = document.querySelector('#random .output-encoding-control') as HTMLElement;\nconst prngOutputEncoding = document.querySelector('#random .output-encoding') as HTMLSelectElement;\nconst prngGenerateButton = document.querySelector('#random button') as HTMLButtonElement;\n\nprngOperation?.addEventListener('change', () => {\n  switch (prngOperation.selectedOptions[0].value) {\n    case 'random':\n      prngOptions.classList.add('active');\n      break;\n    case 'uuid':\n      prngOptions.classList.remove('active');\n      break;\n    default:\n  }\n});\n\nprngOutput?.addEventListener('change', () => {\n  switch (prngOutput.selectedOptions[0].value) {\n    case 'display':\n      prngOutputEncodingControl.classList.add('active');\n      break;\n    case 'download':\n      prngOutputEncodingControl.classList.remove('active');\n      break;\n    default:\n  }\n});\n\nconst encode = (array: Uint8Array, radix: number): string => {\n  let padding: number = 0;\n  if (radix === 2) padding = 8;\n  if (radix === 8) padding = 3;\n  if (radix === 16) padding = 2;\n  if (!padding) throw new Error(`Radix ${radix} is not supported`);\n\n  return array.reduce<string>((str, byte) => str + byte.toString(radix).padStart(padding, '0'), '');\n};\n\nprngGenerateButton.addEventListener('click', () => {\n  switch (prngOperation.selectedOptions[0].value) {\n    case 'random':\n      const bytes = parseInt(prngByteLength.value, 10);\n      const array = new Uint8Array(bytes);\n      self.crypto.getRandomValues(array);\n\n      switch (prngOutput.selectedOptions[0].value) {\n        case 'download':\n          const blob = new Blob([array], { type: 'application/octet-stream' });\n          const uri = window.URL.createObjectURL(blob);\n\n          const a = document.createElement('a');\n          a.href = uri;\n          a.download = `prng-${bytes}-bytes.bin`;\n          document.body.appendChild(a);\n          a.click();\n\n          // Cleanup\n          document.body.removeChild(a);\n          window.URL.revokeObjectURL(uri);\n          break;\n        case 'display':\n          const radix = parseInt(prngOutputEncoding.selectedOptions[0].value, 10);\n          showResult(encode(array, radix));\n          break;\n        default:\n      }\n      break;\n    case 'uuid':\n      showResult(self.crypto.randomUUID());\n      break;\n    default:\n  }\n});\n"],
  "mappings": "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",
  "names": ["require_src", "__commonJSMin", "exports", "loader", "load", "pct", "menuItems", "sections", "item", "event", "_a", "i", "hideResult", "showResult", "value", "result", "content", "setCopyText", "copyText", "copyAnchor", "__async", "parent", "e", "input", "characterCount", "count", "digestMessage", "message", "algorithm", "msgUint8", "hashBuffer", "b", "button", "text", "selected", "digestHex", "digestSelect", "menu", "outputLength", "blockSize", "method", "specification", "prngOperation", "prngOptions", "prngByteLength", "prngOutput", "prngOutputEncodingControl", "prngOutputEncoding", "prngGenerateButton", "encode", "array", "radix", "padding", "str", "byte", "bytes", "blob", "uri", "a"]
}
