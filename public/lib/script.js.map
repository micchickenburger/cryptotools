{
  "version": 3,
  "sources": ["../../src/node_modules/bcryptjs/dist/bcrypt.js", "../../src/node_modules/tssrp6a/src/crossEnvCrypto.ts", "../../src/node_modules/tssrp6a/src/parameters.ts", "../../src/node_modules/tssrp6a/src/utils.ts", "../../src/node_modules/tssrp6a/src/routines.ts", "../../src/node_modules/tssrp6a/src/session-client.ts", "../../src/node_modules/tssrp6a/src/session-server.ts", "../../src/node_modules/tssrp6a/src/index.ts", "../../src/lib/loader.ts", "../../src/lib/error.ts", "../../src/lib/encode.ts", "../../src/lib/svg.ts", "../../src/lib/result.ts", "../../src/components/mainMenu.ts", "../../src/components/digest.ts", "../../src/components/prng.ts", "../../src/lib/modal.ts", "../../src/components/encryption/database.ts", "../../src/components/encryption/operationArea.ts", "../../src/components/encryption/keys.ts", "../../src/components/encryption/generate.ts", "../../src/components/encryption/encrypt.ts", "../../src/components/passwords/bcrypt.ts", "../../src/components/passwords/pbkdf2.ts", "../../src/components/passwords/srp.ts", "../../src/components/passwords/index.ts", "../../src/lib/form.ts", "../../src/lib/operationAreas.ts", "../../src/lib/tabs.ts"],
  "sourcesContent": ["/*\r\n Copyright (c) 2012 Nevins Bartolomeo <nevins.bartolomeo@gmail.com>\r\n Copyright (c) 2012 Shane Girish <shaneGirish@gmail.com>\r\n Copyright (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Redistribution and use in source and binary forms, with or without\r\n modification, are permitted provided that the following conditions\r\n are met:\r\n 1. Redistributions of source code must retain the above copyright\r\n notice, this list of conditions and the following disclaimer.\r\n 2. Redistributions in binary form must reproduce the above copyright\r\n notice, this list of conditions and the following disclaimer in the\r\n documentation and/or other materials provided with the distribution.\r\n 3. The name of the author may not be used to endorse or promote products\r\n derived from this software without specific prior written permission.\r\n\r\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\r\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @license bcrypt.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bcrypt.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"bcrypt\"] = factory();\r\n\r\n}(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * bcrypt namespace.\r\n     * @type {Object.<string,*>}\r\n     */\r\n    var bcrypt = {};\r\n\r\n    /**\r\n     * The random implementation to use as a fallback.\r\n     * @type {?function(number):!Array.<number>}\r\n     * @inner\r\n     */\r\n    var randomFallback = null;\r\n\r\n    /**\r\n     * Generates cryptographically secure random bytes.\r\n     * @function\r\n     * @param {number} len Bytes length\r\n     * @returns {!Array.<number>} Random bytes\r\n     * @throws {Error} If no random implementation is available\r\n     * @inner\r\n     */\r\n    function random(len) {\r\n        /* node */ if (typeof module !== 'undefined' && module && module['exports'])\r\n            try {\r\n                return require(\"crypto\")['randomBytes'](len);\r\n            } catch (e) {}\r\n        /* WCA */ try {\r\n            var a; (self['crypto']||self['msCrypto'])['getRandomValues'](a = new Uint32Array(len));\r\n            return Array.prototype.slice.call(a);\r\n        } catch (e) {}\r\n        /* fallback */ if (!randomFallback)\r\n            throw Error(\"Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative\");\r\n        return randomFallback(len);\r\n    }\r\n\r\n    // Test if any secure randomness source is available\r\n    var randomAvailable = false;\r\n    try {\r\n        random(1);\r\n        randomAvailable = true;\r\n    } catch (e) {}\r\n\r\n    // Default fallback, if any\r\n    randomFallback = null;\r\n    /**\r\n     * Sets the pseudo random number generator to use as a fallback if neither node's `crypto` module nor the Web Crypto\r\n     *  API is available. Please note: It is highly important that the PRNG used is cryptographically secure and that it\r\n     *  is seeded properly!\r\n     * @param {?function(number):!Array.<number>} random Function taking the number of bytes to generate as its\r\n     *  sole argument, returning the corresponding array of cryptographically secure random byte values.\r\n     * @see http://nodejs.org/api/crypto.html\r\n     * @see http://www.w3.org/TR/WebCryptoAPI/\r\n     */\r\n    bcrypt.setRandomFallback = function(random) {\r\n        randomFallback = random;\r\n    };\r\n\r\n    /**\r\n     * Synchronously generates a salt.\r\n     * @param {number=} rounds Number of rounds to use, defaults to 10 if omitted\r\n     * @param {number=} seed_length Not supported.\r\n     * @returns {string} Resulting salt\r\n     * @throws {Error} If a random fallback is required but not set\r\n     * @expose\r\n     */\r\n    bcrypt.genSaltSync = function(rounds, seed_length) {\r\n        rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;\r\n        if (typeof rounds !== 'number')\r\n            throw Error(\"Illegal arguments: \"+(typeof rounds)+\", \"+(typeof seed_length));\r\n        if (rounds < 4)\r\n            rounds = 4;\r\n        else if (rounds > 31)\r\n            rounds = 31;\r\n        var salt = [];\r\n        salt.push(\"$2a$\");\r\n        if (rounds < 10)\r\n            salt.push(\"0\");\r\n        salt.push(rounds.toString());\r\n        salt.push('$');\r\n        salt.push(base64_encode(random(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN)); // May throw\r\n        return salt.join('');\r\n    };\r\n\r\n    /**\r\n     * Asynchronously generates a salt.\r\n     * @param {(number|function(Error, string=))=} rounds Number of rounds to use, defaults to 10 if omitted\r\n     * @param {(number|function(Error, string=))=} seed_length Not supported.\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting salt\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */\r\n    bcrypt.genSalt = function(rounds, seed_length, callback) {\r\n        if (typeof seed_length === 'function')\r\n            callback = seed_length,\r\n            seed_length = undefined; // Not supported.\r\n        if (typeof rounds === 'function')\r\n            callback = rounds,\r\n            rounds = undefined;\r\n        if (typeof rounds === 'undefined')\r\n            rounds = GENSALT_DEFAULT_LOG2_ROUNDS;\r\n        else if (typeof rounds !== 'number')\r\n            throw Error(\"illegal arguments: \"+(typeof rounds));\r\n\r\n        function _async(callback) {\r\n            nextTick(function() { // Pretty thin, but salting is fast enough\r\n                try {\r\n                    callback(null, bcrypt.genSaltSync(rounds));\r\n                } catch (err) {\r\n                    callback(err);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (callback) {\r\n            if (typeof callback !== 'function')\r\n                throw Error(\"Illegal callback: \"+typeof(callback));\r\n            _async(callback);\r\n        } else\r\n            return new Promise(function(resolve, reject) {\r\n                _async(function(err, res) {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Synchronously generates a hash for the given string.\r\n     * @param {string} s String to hash\r\n     * @param {(number|string)=} salt Salt length to generate or salt to use, default to 10\r\n     * @returns {string} Resulting hash\r\n     * @expose\r\n     */\r\n    bcrypt.hashSync = function(s, salt) {\r\n        if (typeof salt === 'undefined')\r\n            salt = GENSALT_DEFAULT_LOG2_ROUNDS;\r\n        if (typeof salt === 'number')\r\n            salt = bcrypt.genSaltSync(salt);\r\n        if (typeof s !== 'string' || typeof salt !== 'string')\r\n            throw Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof salt));\r\n        return _hash(s, salt);\r\n    };\r\n\r\n    /**\r\n     * Asynchronously generates a hash for the given string.\r\n     * @param {string} s String to hash\r\n     * @param {number|string} salt Salt length to generate or salt to use\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash\r\n     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\r\n     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */\r\n    bcrypt.hash = function(s, salt, callback, progressCallback) {\r\n\r\n        function _async(callback) {\r\n            if (typeof s === 'string' && typeof salt === 'number')\r\n                bcrypt.genSalt(salt, function(err, salt) {\r\n                    _hash(s, salt, callback, progressCallback);\r\n                });\r\n            else if (typeof s === 'string' && typeof salt === 'string')\r\n                _hash(s, salt, callback, progressCallback);\r\n            else\r\n                nextTick(callback.bind(this, Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof salt))));\r\n        }\r\n\r\n        if (callback) {\r\n            if (typeof callback !== 'function')\r\n                throw Error(\"Illegal callback: \"+typeof(callback));\r\n            _async(callback);\r\n        } else\r\n            return new Promise(function(resolve, reject) {\r\n                _async(function(err, res) {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Compares two strings of the same length in constant time.\r\n     * @param {string} known Must be of the correct length\r\n     * @param {string} unknown Must be the same length as `known`\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function safeStringCompare(known, unknown) {\r\n        var right = 0,\r\n            wrong = 0;\r\n        for (var i=0, k=known.length; i<k; ++i) {\r\n            if (known.charCodeAt(i) === unknown.charCodeAt(i))\r\n                ++right;\r\n            else\r\n                ++wrong;\r\n        }\r\n        // Prevent removal of unused variables (never true, actually)\r\n        if (right < 0)\r\n            return false;\r\n        return wrong === 0;\r\n    }\r\n\r\n    /**\r\n     * Synchronously tests a string against a hash.\r\n     * @param {string} s String to compare\r\n     * @param {string} hash Hash to test against\r\n     * @returns {boolean} true if matching, otherwise false\r\n     * @throws {Error} If an argument is illegal\r\n     * @expose\r\n     */\r\n    bcrypt.compareSync = function(s, hash) {\r\n        if (typeof s !== \"string\" || typeof hash !== \"string\")\r\n            throw Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof hash));\r\n        if (hash.length !== 60)\r\n            return false;\r\n        return safeStringCompare(bcrypt.hashSync(s, hash.substr(0, hash.length-31)), hash);\r\n    };\r\n\r\n    /**\r\n     * Asynchronously compares the given data against the given hash.\r\n     * @param {string} s Data to compare\r\n     * @param {string} hash Data to be compared to\r\n     * @param {function(Error, boolean)=} callback Callback receiving the error, if any, otherwise the result\r\n     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\r\n     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */\r\n    bcrypt.compare = function(s, hash, callback, progressCallback) {\r\n\r\n        function _async(callback) {\r\n            if (typeof s !== \"string\" || typeof hash !== \"string\") {\r\n                nextTick(callback.bind(this, Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof hash))));\r\n                return;\r\n            }\r\n            if (hash.length !== 60) {\r\n                nextTick(callback.bind(this, null, false));\r\n                return;\r\n            }\r\n            bcrypt.hash(s, hash.substr(0, 29), function(err, comp) {\r\n                if (err)\r\n                    callback(err);\r\n                else\r\n                    callback(null, safeStringCompare(comp, hash));\r\n            }, progressCallback);\r\n        }\r\n\r\n        if (callback) {\r\n            if (typeof callback !== 'function')\r\n                throw Error(\"Illegal callback: \"+typeof(callback));\r\n            _async(callback);\r\n        } else\r\n            return new Promise(function(resolve, reject) {\r\n                _async(function(err, res) {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Gets the number of rounds used to encrypt the specified hash.\r\n     * @param {string} hash Hash to extract the used number of rounds from\r\n     * @returns {number} Number of rounds used\r\n     * @throws {Error} If `hash` is not a string\r\n     * @expose\r\n     */\r\n    bcrypt.getRounds = function(hash) {\r\n        if (typeof hash !== \"string\")\r\n            throw Error(\"Illegal arguments: \"+(typeof hash));\r\n        return parseInt(hash.split(\"$\")[2], 10);\r\n    };\r\n\r\n    /**\r\n     * Gets the salt portion from a hash. Does not validate the hash.\r\n     * @param {string} hash Hash to extract the salt from\r\n     * @returns {string} Extracted salt part\r\n     * @throws {Error} If `hash` is not a string or otherwise invalid\r\n     * @expose\r\n     */\r\n    bcrypt.getSalt = function(hash) {\r\n        if (typeof hash !== 'string')\r\n            throw Error(\"Illegal arguments: \"+(typeof hash));\r\n        if (hash.length !== 60)\r\n            throw Error(\"Illegal hash length: \"+hash.length+\" != 60\");\r\n        return hash.substring(0, 29);\r\n    };\r\n\r\n    /**\r\n     * Continues with the callback on the next tick.\r\n     * @function\r\n     * @param {function(...[*])} callback Callback to execute\r\n     * @inner\r\n     */\r\n    var nextTick = typeof process !== 'undefined' && process && typeof process.nextTick === 'function'\r\n        ? (typeof setImmediate === 'function' ? setImmediate : process.nextTick)\r\n        : setTimeout;\r\n\r\n    /**\r\n     * Converts a JavaScript string to UTF8 bytes.\r\n     * @param {string} str String\r\n     * @returns {!Array.<number>} UTF8 bytes\r\n     * @inner\r\n     */\r\n    function stringToBytes(str) {\r\n        var out = [],\r\n            i = 0;\r\n        utfx.encodeUTF16toUTF8(function() {\r\n            if (i >= str.length) return null;\r\n            return str.charCodeAt(i++);\r\n        }, function(b) {\r\n            out.push(b);\r\n        });\r\n        return out;\r\n    }\r\n\r\n    // A base64 implementation for the bcrypt algorithm. This is partly non-standard.\r\n\r\n    /**\r\n     * bcrypt's own non-standard base64 dictionary.\r\n     * @type {!Array.<string>}\r\n     * @const\r\n     * @inner\r\n     **/\r\n    var BASE64_CODE = \"./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split('');\r\n\r\n    /**\r\n     * @type {!Array.<number>}\r\n     * @const\r\n     * @inner\r\n     **/\r\n    var BASE64_INDEX = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,\r\n        1, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, -1, -1, -1, -1, -1, -1,\r\n        -1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\r\n        20, 21, 22, 23, 24, 25, 26, 27, -1, -1, -1, -1, -1, -1, 28, 29, 30,\r\n        31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\r\n        48, 49, 50, 51, 52, 53, -1, -1, -1, -1, -1];\r\n\r\n    /**\r\n     * @type {!function(...number):string}\r\n     * @inner\r\n     */\r\n    var stringFromCharCode = String.fromCharCode;\r\n\r\n    /**\r\n     * Encodes a byte array to base64 with up to len bytes of input.\r\n     * @param {!Array.<number>} b Byte array\r\n     * @param {number} len Maximum input length\r\n     * @returns {string}\r\n     * @inner\r\n     */\r\n    function base64_encode(b, len) {\r\n        var off = 0,\r\n            rs = [],\r\n            c1, c2;\r\n        if (len <= 0 || len > b.length)\r\n            throw Error(\"Illegal len: \"+len);\r\n        while (off < len) {\r\n            c1 = b[off++] & 0xff;\r\n            rs.push(BASE64_CODE[(c1 >> 2) & 0x3f]);\r\n            c1 = (c1 & 0x03) << 4;\r\n            if (off >= len) {\r\n                rs.push(BASE64_CODE[c1 & 0x3f]);\r\n                break;\r\n            }\r\n            c2 = b[off++] & 0xff;\r\n            c1 |= (c2 >> 4) & 0x0f;\r\n            rs.push(BASE64_CODE[c1 & 0x3f]);\r\n            c1 = (c2 & 0x0f) << 2;\r\n            if (off >= len) {\r\n                rs.push(BASE64_CODE[c1 & 0x3f]);\r\n                break;\r\n            }\r\n            c2 = b[off++] & 0xff;\r\n            c1 |= (c2 >> 6) & 0x03;\r\n            rs.push(BASE64_CODE[c1 & 0x3f]);\r\n            rs.push(BASE64_CODE[c2 & 0x3f]);\r\n        }\r\n        return rs.join('');\r\n    }\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to up to len bytes of output.\r\n     * @param {string} s String to decode\r\n     * @param {number} len Maximum output length\r\n     * @returns {!Array.<number>}\r\n     * @inner\r\n     */\r\n    function base64_decode(s, len) {\r\n        var off = 0,\r\n            slen = s.length,\r\n            olen = 0,\r\n            rs = [],\r\n            c1, c2, c3, c4, o, code;\r\n        if (len <= 0)\r\n            throw Error(\"Illegal len: \"+len);\r\n        while (off < slen - 1 && olen < len) {\r\n            code = s.charCodeAt(off++);\r\n            c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            code = s.charCodeAt(off++);\r\n            c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            if (c1 == -1 || c2 == -1)\r\n                break;\r\n            o = (c1 << 2) >>> 0;\r\n            o |= (c2 & 0x30) >> 4;\r\n            rs.push(stringFromCharCode(o));\r\n            if (++olen >= len || off >= slen)\r\n                break;\r\n            code = s.charCodeAt(off++);\r\n            c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            if (c3 == -1)\r\n                break;\r\n            o = ((c2 & 0x0f) << 4) >>> 0;\r\n            o |= (c3 & 0x3c) >> 2;\r\n            rs.push(stringFromCharCode(o));\r\n            if (++olen >= len || off >= slen)\r\n                break;\r\n            code = s.charCodeAt(off++);\r\n            c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            o = ((c3 & 0x03) << 6) >>> 0;\r\n            o |= c4;\r\n            rs.push(stringFromCharCode(o));\r\n            ++olen;\r\n        }\r\n        var res = [];\r\n        for (off = 0; off<olen; off++)\r\n            res.push(rs[off].charCodeAt(0));\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */\r\n    var utfx = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */\r\n        var utfx = {};\r\n\r\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */\r\n        utfx.MAX_CODEPOINT = 0x10FFFF;\r\n\r\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */\r\n        utfx.encodeUTF8 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src,\r\n                src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp < 0x80)\r\n                    dst(cp&0x7F);\r\n                else if (cp < 0x800)\r\n                    dst(((cp>>6)&0x1F)|0xC0),\r\n                    dst((cp&0x3F)|0x80);\r\n                else if (cp < 0x10000)\r\n                    dst(((cp>>12)&0x0F)|0xE0),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                else\r\n                    dst(((cp>>18)&0x07)|0xF0),\r\n                    dst(((cp>>12)&0x3F)|0x80),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */\r\n        utfx.decodeUTF8 = function(src, dst) {\r\n            var a, b, c, d, fail = function(b) {\r\n                b = b.slice(0, b.indexOf(null));\r\n                var err = Error(b.toString());\r\n                err.name = \"TruncatedError\";\r\n                err['bytes'] = b;\r\n                throw err;\r\n            };\r\n            while ((a = src()) !== null) {\r\n                if ((a&0x80) === 0)\r\n                    dst(a);\r\n                else if ((a&0xE0) === 0xC0)\r\n                    ((b = src()) === null) && fail([a, b]),\r\n                    dst(((a&0x1F)<<6) | (b&0x3F));\r\n                else if ((a&0xF0) === 0xE0)\r\n                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),\r\n                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));\r\n                else if ((a&0xF8) === 0xF0)\r\n                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),\r\n                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));\r\n                else throw RangeError(\"Illegal starting byte: \"+a);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */\r\n        utfx.UTF16toUTF8 = function(src, dst) {\r\n            var c1, c2 = null;\r\n            while (true) {\r\n                if ((c1 = c2 !== null ? c2 : src()) === null)\r\n                    break;\r\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\r\n                    if ((c2 = src()) !== null) {\r\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);\r\n                            c2 = null; continue;\r\n                        }\r\n                    }\r\n                }\r\n                dst(c1);\r\n            }\r\n            if (c2 !== null) dst(c2);\r\n        };\r\n\r\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */\r\n        utfx.UTF8toUTF16 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src, src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp <= 0xFFFF)\r\n                    dst(cp);\r\n                else\r\n                    cp -= 0x10000,\r\n                    dst((cp>>10)+0xD800),\r\n                    dst((cp%0x400)+0xDC00);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */\r\n        utfx.encodeUTF16toUTF8 = function(src, dst) {\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                utfx.encodeUTF8(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */\r\n        utfx.decodeUTF8toUTF16 = function(src, dst) {\r\n            utfx.decodeUTF8(src, function(cp) {\r\n                utfx.UTF8toUTF16(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */\r\n        utfx.calculateCodePoint = function(cp) {\r\n            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */\r\n        utfx.calculateUTF8 = function(src) {\r\n            var cp, l=0;\r\n            while ((cp = src()) !== null)\r\n                l += utfx.calculateCodePoint(cp);\r\n            return l;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */\r\n        utfx.calculateUTF16asUTF8 = function(src) {\r\n            var n=0, l=0;\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                ++n; l += utfx.calculateCodePoint(cp);\r\n            });\r\n            return [n,l];\r\n        };\r\n\r\n        return utfx;\r\n    }();\r\n\r\n    Date.now = Date.now || function() { return +new Date; };\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var BCRYPT_SALT_LEN = 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var GENSALT_DEFAULT_LOG2_ROUNDS = 10;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var BLOWFISH_NUM_ROUNDS = 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var MAX_EXECUTION_TIME = 100;\r\n\r\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var P_ORIG = [\r\n        0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822,\r\n        0x299f31d0, 0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377,\r\n        0xbe5466cf, 0x34e90c6c, 0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5,\r\n        0xb5470917, 0x9216d5d9, 0x8979fb1b\r\n    ];\r\n\r\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var S_ORIG = [\r\n        0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed,\r\n        0x6a267e96, 0xba7c9045, 0xf12c7f99, 0x24a19947, 0xb3916cf7,\r\n        0x0801f2e2, 0x858efc16, 0x636920d8, 0x71574e69, 0xa458fea3,\r\n        0xf4933d7e, 0x0d95748f, 0x728eb658, 0x718bcd58, 0x82154aee,\r\n        0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013, 0xc5d1b023,\r\n        0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e,\r\n        0x6c9e0e8b, 0xb01e8a3e, 0xd71577c1, 0xbd314b27, 0x78af2fda,\r\n        0x55605c60, 0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440,\r\n        0x55ca396a, 0x2aab10b6, 0xb4cc5c34, 0x1141e8ce, 0xa15486af,\r\n        0x7c72e993, 0xb3ee1411, 0x636fbc2a, 0x2ba9c55d, 0x741831f6,\r\n        0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c, 0x7a325381,\r\n        0x28958677, 0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,\r\n        0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032, 0xef845d5d,\r\n        0xe98575b1, 0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5,\r\n        0x0f6d6ff3, 0x83f44239, 0x2e0b4482, 0xa4842004, 0x69c8f04a,\r\n        0x9e1f9b5e, 0x21c66842, 0xf6e96c9a, 0x670c9c61, 0xabd388f0,\r\n        0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3, 0x6eef0b6c,\r\n        0x137a3be4, 0xba3bf050, 0x7efb2a98, 0xa1f1651d, 0x39af0176,\r\n        0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3,\r\n        0x3b8b5ebe, 0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6,\r\n        0x4ed3aa62, 0x363f7706, 0x1bfedf72, 0x429b023d, 0x37d0d724,\r\n        0xd00a1248, 0xdb0fead3, 0x49f1c09b, 0x075372c9, 0x80991b7b,\r\n        0x25d479d8, 0xf6e8def7, 0xe3fe501a, 0xb6794c3b, 0x976ce0bd,\r\n        0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\r\n        0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f,\r\n        0x9b30952c, 0xcc814544, 0xaf5ebd09, 0xbee3d004, 0xde334afd,\r\n        0x660f2807, 0x192e4bb3, 0xc0cba857, 0x45c8740f, 0xd20b5f39,\r\n        0xb9d3fbdb, 0x5579c0bd, 0x1a60320a, 0xd6a100c6, 0x402c7279,\r\n        0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8, 0x3c7516df,\r\n        0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760,\r\n        0x53317b48, 0x3e00df82, 0x9e5c57bb, 0xca6f8ca0, 0x1a87562e,\r\n        0xdf1769db, 0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573,\r\n        0x695b27b0, 0xbbca58c8, 0xe1ffa35d, 0xb8f011a0, 0x10fa3d98,\r\n        0xfd2183b8, 0x4afcb56c, 0x2dd1d35b, 0x9a53e479, 0xb6f84565,\r\n        0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33, 0x62fb1341,\r\n        0xcee4c6e8, 0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,\r\n        0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0, 0xd08ed1d0,\r\n        0xafc725e0, 0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64,\r\n        0x8888b812, 0x900df01c, 0x4fad5ea0, 0x688fc31c, 0xd1cff191,\r\n        0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777, 0xea752dfe, 0x8b021fa1,\r\n        0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299, 0xb4a84fe0,\r\n        0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9, 0x165fa266, 0x80957705,\r\n        0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5,\r\n        0xfb9d35cf, 0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49,\r\n        0x00250e2d, 0x2071b35e, 0x226800bb, 0x57b8e0af, 0x2464369b,\r\n        0xf009b91e, 0x5563911d, 0x59dfa6aa, 0x78c14389, 0xd95a537f,\r\n        0x207d5ba2, 0x02e5b9c5, 0x83260376, 0x6295cfa9, 0x11c81968,\r\n        0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\r\n        0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5,\r\n        0x571be91f, 0xf296ec6b, 0x2a0dd915, 0xb6636521, 0xe7b9f9b6,\r\n        0xff34052e, 0xc5855664, 0x53b02d5d, 0xa99f8fa1, 0x08ba4799,\r\n        0x6e85076a, 0x4b7a70e9, 0xb5b32944, 0xdb75092e, 0xc4192623,\r\n        0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266, 0xecaa8c71,\r\n        0x699a17ff, 0x5664526c, 0xc2b19ee1, 0x193602a5, 0x75094c29,\r\n        0xa0591340, 0xe4183a3e, 0x3f54989a, 0x5b429d65, 0x6b8fe4d6,\r\n        0x99f73fd6, 0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1,\r\n        0x4cdd2086, 0x8470eb26, 0x6382e9c6, 0x021ecc5e, 0x09686b3f,\r\n        0x3ebaefc9, 0x3c971814, 0x6b6a70a1, 0x687f3584, 0x52a0e286,\r\n        0xb79c5305, 0xaa500737, 0x3e07841c, 0x7fdeae5c, 0x8e7d44ec,\r\n        0x5716f2b8, 0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,\r\n        0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd, 0xd19113f9,\r\n        0x7ca92ff6, 0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc,\r\n        0xc8b57634, 0x9af3dda7, 0xa9446146, 0x0fd0030e, 0xecc8c73e,\r\n        0xa4751e41, 0xe238cd99, 0x3bea0e2f, 0x3280bba1, 0x183eb331,\r\n        0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf, 0x2cb81290,\r\n        0x24977c79, 0x5679b072, 0xbcaf89af, 0xde9a771f, 0xd9930810,\r\n        0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124, 0x501adde6,\r\n        0x9f84cd87, 0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c,\r\n        0xec7aec3a, 0xdb851dfa, 0x63094366, 0xc464c3d2, 0xef1c1847,\r\n        0x3215d908, 0xdd433b37, 0x24c2ba16, 0x12a14d43, 0x2a65c451,\r\n        0x50940002, 0x133ae4dd, 0x71dff89e, 0x10314e55, 0x81ac77d6,\r\n        0x5f11199b, 0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,\r\n        0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e, 0x86e34570,\r\n        0xeae96fb1, 0x860e5e0a, 0x5a3e2ab3, 0x771fe71c, 0x4e3d06fa,\r\n        0x2965dcb9, 0x99e71d0f, 0x803e89d6, 0x5266c825, 0x2e4cc978,\r\n        0x9c10b36a, 0xc6150eba, 0x94e2ea78, 0xa5fc3c53, 0x1e0a2df4,\r\n        0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960, 0x5223a708,\r\n        0xf71312b6, 0xebadfe6e, 0xeac31f66, 0xe3bc4595, 0xa67bc883,\r\n        0xb17f37d1, 0x018cff28, 0xc332ddef, 0xbe6c5aa5, 0x65582185,\r\n        0x68ab9802, 0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84,\r\n        0x1521b628, 0x29076170, 0xecdd4775, 0x619f1510, 0x13cca830,\r\n        0xeb61bd96, 0x0334fe1e, 0xaa0363cf, 0xb5735c90, 0x4c70a239,\r\n        0xd59e9e0b, 0xcbaade14, 0xeecc86bc, 0x60622ca7, 0x9cab5cab,\r\n        0xb2f3846e, 0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,\r\n        0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7, 0x9b540b19,\r\n        0x875fa099, 0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77,\r\n        0x11ed935f, 0x16681281, 0x0e358829, 0xc7e61fd6, 0x96dedfa1,\r\n        0x7858ba99, 0x57f584a5, 0x1b227263, 0x9b83c3ff, 0x1ac24696,\r\n        0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128, 0x58ebf2ef,\r\n        0x34c6ffea, 0xfe28ed61, 0xee7c3c73, 0x5d4a14d9, 0xe864b7e3,\r\n        0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea, 0xdb6c4f15,\r\n        0xfacb4fd0, 0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105,\r\n        0xd81e799e, 0x86854dc7, 0xe44b476a, 0x3d816250, 0xcf62a1f2,\r\n        0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3, 0x7f1524c3, 0x69cb7492,\r\n        0x47848a0b, 0x5692b285, 0x095bbf00, 0xad19489d, 0x1462b174,\r\n        0x23820e00, 0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,\r\n        0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb, 0x7cde3759,\r\n        0xcbee7460, 0x4085f2a7, 0xce77326e, 0xa6078084, 0x19f8509e,\r\n        0xe8efd855, 0x61d99735, 0xa969a7aa, 0xc50c06c2, 0x5a04abfc,\r\n        0x800bcadc, 0x9e447a2e, 0xc3453484, 0xfdd56705, 0x0e1e9ec9,\r\n        0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340, 0xc5c43465,\r\n        0x713e38d8, 0x3d28f89e, 0xf16dff20, 0x153e21e7, 0x8fb03d4a,\r\n        0xe6e39f2b, 0xdb83adf7, 0xe93d5a68, 0x948140f7, 0xf64c261c,\r\n        0x94692934, 0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068,\r\n        0xd4082471, 0x3320f46a, 0x43b7d4b7, 0x500061af, 0x1e39f62e,\r\n        0x97244546, 0x14214f74, 0xbf8b8840, 0x4d95fc1d, 0x96b591af,\r\n        0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785, 0x7fac6dd0,\r\n        0x31cb8504, 0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,\r\n        0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb, 0x68dc1462,\r\n        0xd7486900, 0x680ec0a4, 0x27a18dee, 0x4f3ffea2, 0xe887ad8c,\r\n        0xb58ce006, 0x7af4d6b6, 0xaace1e7c, 0xd3375fec, 0xce78a399,\r\n        0x406b2a42, 0x20fe9e35, 0xd9f385b9, 0xee39d7ab, 0x3b124e8b,\r\n        0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2, 0x3a6efa74,\r\n        0xdd5b4332, 0x6841e7f7, 0xca7820fb, 0xfb0af54e, 0xd8feb397,\r\n        0x454056ac, 0xba489527, 0x55533a3a, 0x20838d87, 0xfe6ba9b7,\r\n        0xd096954b, 0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33,\r\n        0xa62a4a56, 0x3f3125f9, 0x5ef47e1c, 0x9029317c, 0xfdf8e802,\r\n        0x04272f70, 0x80bb155c, 0x05282ce3, 0x95c11548, 0xe4c66d22,\r\n        0x48c1133f, 0xc70f86dc, 0x07f9c9ee, 0x41041f0f, 0x404779a4,\r\n        0x5d886e17, 0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,\r\n        0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2,\r\n        0x02e1329e, 0xaf664fd1, 0xcad18115, 0x6b2395e0, 0x333e92e1,\r\n        0x3b240b62, 0xeebeb922, 0x85b2a20e, 0xe6ba0d99, 0xde720c8c,\r\n        0x2da2f728, 0xd0127845, 0x95b794fd, 0x647d0862, 0xe7ccf5f0,\r\n        0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e, 0x0a476341,\r\n        0x992eff74, 0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8,\r\n        0x991be14c, 0xdb6e6b0d, 0xc67b5510, 0x6d672c37, 0x2765d43b,\r\n        0xdcd0e804, 0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b,\r\n        0x667b9ffb, 0xcedb7d9c, 0xa091cf0b, 0xd9155ea3, 0xbb132f88,\r\n        0x515bad24, 0x7b9479bf, 0x763bd6eb, 0x37392eb3, 0xcc115979,\r\n        0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b, 0x12754ccc,\r\n        0x782ef11c, 0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,\r\n        0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9, 0x44421659,\r\n        0x0a121386, 0xd90cec6e, 0xd5abea2a, 0x64af674e, 0xda86a85f,\r\n        0xbebfe988, 0x64e4c3fe, 0x9dbc8057, 0xf0f7c086, 0x60787bf8,\r\n        0x6003604d, 0xd1fd8346, 0xf6381fb0, 0x7745ae04, 0xd736fccc,\r\n        0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f, 0x77a057be,\r\n        0xbde8ae24, 0x55464299, 0xbf582e61, 0x4e58f48f, 0xf2ddfda2,\r\n        0xf474ef38, 0x8789bdc2, 0x5366f9c3, 0xc8b38e74, 0xb475f255,\r\n        0x46fcd9b9, 0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2,\r\n        0x466e598e, 0x20b45770, 0x8cd55591, 0xc902de4c, 0xb90bace1,\r\n        0xbb8205d0, 0x11a86248, 0x7574a99e, 0xb77f19b6, 0xe0a9dc09,\r\n        0x662d09a1, 0xc4324633, 0xe85a1f02, 0x09f0be8c, 0x4a99a025,\r\n        0x1d6efe10, 0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,\r\n        0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52, 0x50115e01,\r\n        0xa70683fa, 0xa002b5c4, 0x0de6d027, 0x9af88c27, 0x773f8641,\r\n        0xc3604c06, 0x61a806b5, 0xf0177a28, 0xc0f586e0, 0x006058aa,\r\n        0x30dc7d62, 0x11e69ed7, 0x2338ea63, 0x53c2dd94, 0xc2c21634,\r\n        0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76, 0x6f05e409,\r\n        0x4b7c0188, 0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9,\r\n        0x1ac15bb4, 0xd39eb8fc, 0xed545578, 0x08fca5b5, 0xd83d7cd3,\r\n        0x4dad0fc4, 0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c,\r\n        0x6fd5c7e7, 0x56e14ec4, 0x362abfce, 0xddc6c837, 0xd79a3234,\r\n        0x92638212, 0x670efa8e, 0x406000e0, 0x3a39ce37, 0xd3faf5cf,\r\n        0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742, 0xd3822740,\r\n        0x99bc9bbe, 0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,\r\n        0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4, 0x5748ab2f,\r\n        0xbc946e79, 0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d,\r\n        0xd5730a1d, 0x4cd04dc6, 0x2939bbdb, 0xa9ba4650, 0xac9526e8,\r\n        0xbe5ee304, 0xa1fad5f0, 0x6a2d519a, 0x63ef8ce2, 0x9a86ee22,\r\n        0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4, 0x83c061ba,\r\n        0x9be96a4d, 0x8fe51550, 0xba645bd6, 0x2826a2f9, 0xa73a3ae1,\r\n        0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69,\r\n        0x77fa0a59, 0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593,\r\n        0xe990fd5a, 0x9e34d797, 0x2cf0b7d9, 0x022b8b51, 0x96d5ac3a,\r\n        0x017da67d, 0xd1cf3ed6, 0x7c7d2d28, 0x1f9f25cf, 0xadf2b89b,\r\n        0x5ad6b472, 0x5a88f54c, 0xe029ac71, 0xe019a5e6, 0x47b0acfd,\r\n        0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,\r\n        0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4,\r\n        0x88f46dba, 0x03a16125, 0x0564f0bd, 0xc3eb9e15, 0x3c9057a2,\r\n        0x97271aec, 0xa93a072a, 0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb,\r\n        0x26dcf319, 0x7533d928, 0xb155fdf5, 0x03563482, 0x8aba3cbb,\r\n        0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f, 0x4de81751,\r\n        0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce,\r\n        0x5121ce64, 0x774fbe32, 0xa8b6e37e, 0xc3293d46, 0x48de5369,\r\n        0x6413e680, 0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166,\r\n        0xb39a460a, 0x6445c0dd, 0x586cdecf, 0x1c20c8ae, 0x5bbef7dd,\r\n        0x1b588d40, 0xccd2017f, 0x6bb4e3bb, 0xdda26a7e, 0x3a59ff45,\r\n        0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb, 0x8d6612ae,\r\n        0xbf3c6f47, 0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,\r\n        0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d, 0x4040cb08,\r\n        0x4eb4e2cc, 0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d,\r\n        0x06b89fb4, 0xce6ea048, 0x6f3f3b82, 0x3520ab82, 0x011a1d4b,\r\n        0x277227f8, 0x611560b1, 0xe7933fdc, 0xbb3a792b, 0x344525bd,\r\n        0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9, 0xe01cc87e,\r\n        0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7, 0x1a908749, 0xd44fbd9a,\r\n        0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c,\r\n        0xe0b12b4f, 0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c,\r\n        0xbf97222c, 0x15e6fc2a, 0x0f91fc71, 0x9b941525, 0xfae59361,\r\n        0xceb69ceb, 0xc2a86459, 0x12baa8d1, 0xb6c1075e, 0xe3056a0c,\r\n        0x10d25065, 0xcb03a442, 0xe0ec6e0e, 0x1698db3b, 0x4c98a0be,\r\n        0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,\r\n        0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d,\r\n        0x9b992f2e, 0xe60b6f47, 0x0fe3f11d, 0xe54cda54, 0x1edad891,\r\n        0xce6279cf, 0xcd3e7e6f, 0x1618b166, 0xfd2c1d05, 0x848fd2c5,\r\n        0xf6fb2299, 0xf523f357, 0xa6327623, 0x93a83531, 0x56cccd02,\r\n        0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc, 0xde966292,\r\n        0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a,\r\n        0x45e1d006, 0xc3f27b9a, 0xc9aa53fd, 0x62a80f00, 0xbb25bfe2,\r\n        0x35bdd2f6, 0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b,\r\n        0x53113ec0, 0x1640e3d3, 0x38abbd60, 0x2547adf0, 0xba38209c,\r\n        0xf746ce76, 0x77afa1c5, 0x20756060, 0x85cbfe4e, 0x8ae88dd8,\r\n        0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c, 0x01c36ae4,\r\n        0xd6ebe1f9, 0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,\r\n        0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6\r\n    ];\r\n\r\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var C_ORIG = [\r\n        0x4f727068, 0x65616e42, 0x65686f6c, 0x64657253, 0x63727944,\r\n        0x6f756274\r\n    ];\r\n\r\n    /**\r\n     * @param {Array.<number>} lr\r\n     * @param {number} off\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @returns {Array.<number>}\r\n     * @inner\r\n     */\r\n    function _encipher(lr, off, P, S) { // This is our bottleneck: 1714/1905 ticks / 90% - see profile.txt\r\n        var n,\r\n            l = lr[off],\r\n            r = lr[off + 1];\r\n\r\n        l ^= P[0];\r\n\r\n        /*\r\n        for (var i=0, k=BLOWFISH_NUM_ROUNDS-2; i<=k;)\r\n            // Feistel substitution on left word\r\n            n  = S[l >>> 24],\r\n            n += S[0x100 | ((l >> 16) & 0xff)],\r\n            n ^= S[0x200 | ((l >> 8) & 0xff)],\r\n            n += S[0x300 | (l & 0xff)],\r\n            r ^= n ^ P[++i],\r\n            // Feistel substitution on right word\r\n            n  = S[r >>> 24],\r\n            n += S[0x100 | ((r >> 16) & 0xff)],\r\n            n ^= S[0x200 | ((r >> 8) & 0xff)],\r\n            n += S[0x300 | (r & 0xff)],\r\n            l ^= n ^ P[++i];\r\n        */\r\n\r\n        //The following is an unrolled version of the above loop.\r\n        //Iteration 0\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[1];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[2];\r\n        //Iteration 1\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[3];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[4];\r\n        //Iteration 2\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[5];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[6];\r\n        //Iteration 3\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[7];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[8];\r\n        //Iteration 4\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[9];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[10];\r\n        //Iteration 5\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[11];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[12];\r\n        //Iteration 6\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[13];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[14];\r\n        //Iteration 7\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[15];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[16];\r\n\r\n        lr[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];\r\n        lr[off + 1] = l;\r\n        return lr;\r\n    }\r\n\r\n    /**\r\n     * @param {Array.<number>} data\r\n     * @param {number} offp\r\n     * @returns {{key: number, offp: number}}\r\n     * @inner\r\n     */\r\n    function _streamtoword(data, offp) {\r\n        for (var i = 0, word = 0; i < 4; ++i)\r\n            word = (word << 8) | (data[offp] & 0xff),\r\n            offp = (offp + 1) % data.length;\r\n        return { key: word, offp: offp };\r\n    }\r\n\r\n    /**\r\n     * @param {Array.<number>} key\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @inner\r\n     */\r\n    function _key(key, P, S) {\r\n        var offset = 0,\r\n            lr = [0, 0],\r\n            plen = P.length,\r\n            slen = S.length,\r\n            sw;\r\n        for (var i = 0; i < plen; i++)\r\n            sw = _streamtoword(key, offset),\r\n            offset = sw.offp,\r\n            P[i] = P[i] ^ sw.key;\r\n        for (i = 0; i < plen; i += 2)\r\n            lr = _encipher(lr, 0, P, S),\r\n            P[i] = lr[0],\r\n            P[i + 1] = lr[1];\r\n        for (i = 0; i < slen; i += 2)\r\n            lr = _encipher(lr, 0, P, S),\r\n            S[i] = lr[0],\r\n            S[i + 1] = lr[1];\r\n    }\r\n\r\n    /**\r\n     * Expensive key schedule Blowfish.\r\n     * @param {Array.<number>} data\r\n     * @param {Array.<number>} key\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @inner\r\n     */\r\n    function _ekskey(data, key, P, S) {\r\n        var offp = 0,\r\n            lr = [0, 0],\r\n            plen = P.length,\r\n            slen = S.length,\r\n            sw;\r\n        for (var i = 0; i < plen; i++)\r\n            sw = _streamtoword(key, offp),\r\n            offp = sw.offp,\r\n            P[i] = P[i] ^ sw.key;\r\n        offp = 0;\r\n        for (i = 0; i < plen; i += 2)\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[0] ^= sw.key,\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[1] ^= sw.key,\r\n            lr = _encipher(lr, 0, P, S),\r\n            P[i] = lr[0],\r\n            P[i + 1] = lr[1];\r\n        for (i = 0; i < slen; i += 2)\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[0] ^= sw.key,\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[1] ^= sw.key,\r\n            lr = _encipher(lr, 0, P, S),\r\n            S[i] = lr[0],\r\n            S[i + 1] = lr[1];\r\n    }\r\n\r\n    /**\r\n     * Internaly crypts a string.\r\n     * @param {Array.<number>} b Bytes to crypt\r\n     * @param {Array.<number>} salt Salt bytes to use\r\n     * @param {number} rounds Number of rounds\r\n     * @param {function(Error, Array.<number>=)=} callback Callback receiving the error, if any, and the resulting bytes. If\r\n     *  omitted, the operation will be performed synchronously.\r\n     *  @param {function(number)=} progressCallback Callback called with the current progress\r\n     * @returns {!Array.<number>|undefined} Resulting bytes if callback has been omitted, otherwise `undefined`\r\n     * @inner\r\n     */\r\n    function _crypt(b, salt, rounds, callback, progressCallback) {\r\n        var cdata = C_ORIG.slice(),\r\n            clen = cdata.length,\r\n            err;\r\n\r\n        // Validate\r\n        if (rounds < 4 || rounds > 31) {\r\n            err = Error(\"Illegal number of rounds (4-31): \"+rounds);\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            } else\r\n                throw err;\r\n        }\r\n        if (salt.length !== BCRYPT_SALT_LEN) {\r\n            err =Error(\"Illegal salt length: \"+salt.length+\" != \"+BCRYPT_SALT_LEN);\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            } else\r\n                throw err;\r\n        }\r\n        rounds = (1 << rounds) >>> 0;\r\n\r\n        var P, S, i = 0, j;\r\n\r\n        //Use typed arrays when available - huge speedup!\r\n        if (Int32Array) {\r\n            P = new Int32Array(P_ORIG);\r\n            S = new Int32Array(S_ORIG);\r\n        } else {\r\n            P = P_ORIG.slice();\r\n            S = S_ORIG.slice();\r\n        }\r\n\r\n        _ekskey(salt, b, P, S);\r\n\r\n        /**\r\n         * Calcualtes the next round.\r\n         * @returns {Array.<number>|undefined} Resulting array if callback has been omitted, otherwise `undefined`\r\n         * @inner\r\n         */\r\n        function next() {\r\n            if (progressCallback)\r\n                progressCallback(i / rounds);\r\n            if (i < rounds) {\r\n                var start = Date.now();\r\n                for (; i < rounds;) {\r\n                    i = i + 1;\r\n                    _key(b, P, S);\r\n                    _key(salt, P, S);\r\n                    if (Date.now() - start > MAX_EXECUTION_TIME)\r\n                        break;\r\n                }\r\n            } else {\r\n                for (i = 0; i < 64; i++)\r\n                    for (j = 0; j < (clen >> 1); j++)\r\n                        _encipher(cdata, j << 1, P, S);\r\n                var ret = [];\r\n                for (i = 0; i < clen; i++)\r\n                    ret.push(((cdata[i] >> 24) & 0xff) >>> 0),\r\n                    ret.push(((cdata[i] >> 16) & 0xff) >>> 0),\r\n                    ret.push(((cdata[i] >> 8) & 0xff) >>> 0),\r\n                    ret.push((cdata[i] & 0xff) >>> 0);\r\n                if (callback) {\r\n                    callback(null, ret);\r\n                    return;\r\n                } else\r\n                    return ret;\r\n            }\r\n            if (callback)\r\n                nextTick(next);\r\n        }\r\n\r\n        // Async\r\n        if (typeof callback !== 'undefined') {\r\n            next();\r\n\r\n            // Sync\r\n        } else {\r\n            var res;\r\n            while (true)\r\n                if (typeof(res = next()) !== 'undefined')\r\n                    return res || [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internally hashes a string.\r\n     * @param {string} s String to hash\r\n     * @param {?string} salt Salt to use, actually never null\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash. If omitted,\r\n     *  hashing is perormed synchronously.\r\n     *  @param {function(number)=} progressCallback Callback called with the current progress\r\n     * @returns {string|undefined} Resulting hash if callback has been omitted, otherwise `undefined`\r\n     * @inner\r\n     */\r\n    function _hash(s, salt, callback, progressCallback) {\r\n        var err;\r\n        if (typeof s !== 'string' || typeof salt !== 'string') {\r\n            err = Error(\"Invalid string / salt: Not a string\");\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            }\r\n            else\r\n                throw err;\r\n        }\r\n\r\n        // Validate the salt\r\n        var minor, offset;\r\n        if (salt.charAt(0) !== '$' || salt.charAt(1) !== '2') {\r\n            err = Error(\"Invalid salt version: \"+salt.substring(0,2));\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            }\r\n            else\r\n                throw err;\r\n        }\r\n        if (salt.charAt(2) === '$')\r\n            minor = String.fromCharCode(0),\r\n            offset = 3;\r\n        else {\r\n            minor = salt.charAt(2);\r\n            if ((minor !== 'a' && minor !== 'b' && minor !== 'y') || salt.charAt(3) !== '$') {\r\n                err = Error(\"Invalid salt revision: \"+salt.substring(2,4));\r\n                if (callback) {\r\n                    nextTick(callback.bind(this, err));\r\n                    return;\r\n                } else\r\n                    throw err;\r\n            }\r\n            offset = 4;\r\n        }\r\n\r\n        // Extract number of rounds\r\n        if (salt.charAt(offset + 2) > '$') {\r\n            err = Error(\"Missing salt rounds\");\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            } else\r\n                throw err;\r\n        }\r\n        var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10,\r\n            r2 = parseInt(salt.substring(offset + 1, offset + 2), 10),\r\n            rounds = r1 + r2,\r\n            real_salt = salt.substring(offset + 3, offset + 25);\r\n        s += minor >= 'a' ? \"\\x00\" : \"\";\r\n\r\n        var passwordb = stringToBytes(s),\r\n            saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);\r\n\r\n        /**\r\n         * Finishes hashing.\r\n         * @param {Array.<number>} bytes Byte array\r\n         * @returns {string}\r\n         * @inner\r\n         */\r\n        function finish(bytes) {\r\n            var res = [];\r\n            res.push(\"$2\");\r\n            if (minor >= 'a')\r\n                res.push(minor);\r\n            res.push(\"$\");\r\n            if (rounds < 10)\r\n                res.push(\"0\");\r\n            res.push(rounds.toString());\r\n            res.push(\"$\");\r\n            res.push(base64_encode(saltb, saltb.length));\r\n            res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));\r\n            return res.join('');\r\n        }\r\n\r\n        // Sync\r\n        if (typeof callback == 'undefined')\r\n            return finish(_crypt(passwordb, saltb, rounds));\r\n\r\n        // Async\r\n        else {\r\n            _crypt(passwordb, saltb, rounds, function(err, bytes) {\r\n                if (err)\r\n                    callback(err, null);\r\n                else\r\n                    callback(null, finish(bytes));\r\n            }, progressCallback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Encodes a byte array to base64 with up to len bytes of input, using the custom bcrypt alphabet.\r\n     * @function\r\n     * @param {!Array.<number>} b Byte array\r\n     * @param {number} len Maximum input length\r\n     * @returns {string}\r\n     * @expose\r\n     */\r\n    bcrypt.encodeBase64 = base64_encode;\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to up to len bytes of output, using the custom bcrypt alphabet.\r\n     * @function\r\n     * @param {string} s String to decode\r\n     * @param {number} len Maximum output length\r\n     * @returns {!Array.<number>}\r\n     * @expose\r\n     */\r\n    bcrypt.decodeBase64 = base64_decode;\r\n\r\n    return bcrypt;\r\n}));\r\n", null, null, null, null, null, null, null, "/**\n * @file Contains functionality for the animated loader\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * The loader is a 1 rem thick bar at the top of the page which\n * means to convey a sense of progress for long operations.\n */\n\nconst loader = document.querySelector<HTMLElement>('#loader');\n\n/**\n * Fill the progress bar at the top of the page\n * @param pct Percentage to fill (0 to 100)\n */\nconst load = (pct: number) => {\n  if (loader && pct >= 0 && pct <= 100) loader.style.width = `${pct}%`;\n  if (pct === 0) loader?.classList.remove('animate');\n  else loader?.classList.add('animate');\n};\n\nexport default load;\n", "/**\n * @file Contains functionality for handling and conveying errors to user\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport load from './loader';\n\nconst errorElement = document.querySelector('#error')!;\nconst content = errorElement.querySelector('.content')!;\n\nconst handleError = (error: unknown) => {\n  let err;\n  if (!(error instanceof Error)) err = new Error(String(error));\n  else err = error;\n  errorElement.classList.add('active');\n  content.textContent = err.message;\n  load(100);\n};\n\nconst clearError = () => {\n  content.textContent = '';\n  errorElement.classList.remove('active');\n};\n\nexport { handleError, clearError };\n", "/**\n * @file Contains functionality for encoding and decoding raw data\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport * as bcrypt from 'bcryptjs';\n\nenum ENCODING {\n  // Non-transformable encodings\n  BOOLEAN = -1,\n  BIGINT = -2,\n  INTEGER = -3,\n  UUID = -4,\n  JSON = -5,\n  UNKNOWN = 0,\n\n  // Transformable encodings\n  BINARY = 2,\n  OCTAL = 8,\n  'UTF-8' = 100,\n  HEXADECIMAL = 16,\n  BASE64 = 64, // RFC 4648\n  BASE64_CRYPT = 640, // Nonstandard OpenBSD alphabet used by crypt, bcrypt\n\n  // Password Hashing Formats\n  PHC_STRING = -100,\n  MODULAR_CRYPT_FORMAT = -200,\n}\n\n/**\n * Encode raw binary data into a string\n *\n * @param rawData Source data to encode\n * @param radix The base representation of the encoding\n * @returns string\n */\nconst encode = (rawData: ArrayBuffer, radix: ENCODING): string => {\n  const array = new Uint8Array(rawData);\n\n  if (radix === ENCODING.BASE64) {\n    return btoa(array.reduce((str, byte) => str + String.fromCharCode(byte), ''));\n  }\n\n  if (radix === ENCODING.BASE64_CRYPT) {\n    return bcrypt.encodeBase64(array, array.length);\n  }\n\n  if (radix === ENCODING['UTF-8']) return (new TextDecoder()).decode(rawData);\n\n  let padding: number = 0;\n  if (radix === ENCODING.BINARY) padding = 8;\n  if (radix === ENCODING.OCTAL) padding = 3;\n  if (radix === ENCODING.HEXADECIMAL) padding = 2;\n  if (!padding) throw new Error(`Radix ${radix} is not supported`);\n\n  return array.reduce<string>((str, byte) => str + byte.toString(radix).padStart(padding, '0'), '');\n};\n\n/**\n * Decode a string into raw binary data\n *\n * @param encodedData Source data to decode\n * @param radix The base representation of the encoding\n * @returns ArrayBuffer\n */\nconst decode = (encodedData: string, radix: ENCODING): ArrayBuffer => {\n  let array: Uint8Array;\n\n  if (radix === ENCODING.BOOLEAN) {\n    // This operation will always return a length of 1 byte, which is the\n    // minimum length of a boolean value since 1 byte is the standard\n    // minimum addressable memory size in modern CPU architectures\n    array = new Uint8Array(1);\n\n    // we want an exception if the encoded data is not stringified boolean\n    array[0] = Number(JSON.parse(encodedData)); // 1 or 0\n    return array.buffer;\n  }\n\n  if (radix === ENCODING.BASE64) {\n    const str = atob(encodedData);\n    array = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i += 1) {\n      array[i] = str.charCodeAt(i);\n    }\n    return array.buffer;\n  }\n\n  if (radix === ENCODING.BASE64_CRYPT) {\n    const arr = bcrypt.decodeBase64(encodedData, Infinity);\n    return Uint8Array.from(arr).buffer;\n  }\n\n  if (radix === ENCODING.BIGINT) {\n    // Assumes big endian byte order\n    let int = BigInt(encodedData);\n    const bytes = [];\n    while (int > 0) {\n      // eslint-disable-next-line no-bitwise\n      bytes.push(Number(int & 0xffn));\n      // eslint-disable-next-line no-bitwise\n      int >>= 8n;\n    }\n    return Uint8Array.from(bytes.reverse()).buffer;\n  }\n\n  if (radix === ENCODING.UUID) {\n    const data = encodedData.replace(/-/g, '');\n    array = new Uint8Array(data.length / 2);\n    data.match(/.{1,2}/g)?.forEach((byte, i) => { array[i] = parseInt(byte, 16); });\n    return array.buffer;\n  }\n\n  if (radix === ENCODING['UTF-8']) return (new TextEncoder()).encode(encodedData);\n\n  let separator: number = 0;\n  if (radix === ENCODING.BINARY) separator = 8;\n  if (radix === ENCODING.OCTAL) separator = 3;\n  if (radix === ENCODING.HEXADECIMAL) separator = 2;\n  if (!separator) throw new Error(`Radix ${radix} is not supported`);\n\n  const length = encodedData.length / separator;\n  array = new Uint8Array(length);\n\n  encodedData.match(new RegExp(`.{1,${separator}}`, 'g'))\n    ?.forEach((byte, i) => { array[i] = parseInt(byte, radix); });\n\n  return array.buffer;\n};\n\n/**\n * Guess the encoding of a string based on character groupings\n *\n * @param encodedData Source data\n * @returns encoding radix\n */\nconst guessEncoding = (encodedData: string): ENCODING => {\n  // Start with more restrictive/confident character sets and work our way down\n  if (encodedData.toLowerCase() === 'true' || encodedData.toLowerCase() === 'false') return ENCODING.BOOLEAN;\n\n  if (/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i.test(encodedData)) return ENCODING.UUID;\n  if (/^([01]{8})+$/.test(encodedData)) return ENCODING.BINARY;\n  if (/^([0-7]{3})+$/.test(encodedData)) return ENCODING.OCTAL;\n  if (/^([0-9a-f]{2})+$|^([0-9A-F]{2})+$/.test(encodedData)) return ENCODING.HEXADECIMAL;\n  if (/^([0-9a-zA-Z+/]{4})*[0-9a-zA-Z+/]{2}[0-9a-zA-Z+/=]{2}$/.test(encodedData)) return ENCODING.BASE64;\n\n  // Base64 crypt uses a dot instead of a plus, and has no padding or groupings\n  if (/^[0-9a-zA-Z./]+$/.test(encodedData)) return ENCODING.BASE64_CRYPT;\n\n  // Since any javascript primitive in a string is valid JSON, let's be more restrictive\n  if (/{/.test(encodedData)) {\n    try {\n      JSON.parse(encodedData);\n      return ENCODING.JSON;\n    } catch (e) { /* do nothing */ }\n  }\n\n  //\n  // Password Hashing Formats\n  //\n\n  // PHC String Format\n  // @link https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md\n  // Note: I made the regexp look for identifiers more than three characters in\n  //   length to reduce occasional PHC String matches from clearly Modular Crypt\n  //   format strings.\n  if (/^\\$[a-z0-9-]{4,32}(\\$v=[0-9]+)?(\\$[a-z0-9-]{1,32}=[a-zA-Z0-9/+.-]+(,[a-z0-9-]{1,32}=[a-zA-Z0-9/+.-]+)*)?(\\$[a-zA-Z0-9/+.-]+(\\$[a-zA-Z0-9/+]{2,})?)?$/.test(encodedData)) {\n    return ENCODING.PHC_STRING;\n  }\n\n  // Modular Crypt Format (deprecated in 2016 in favor of PHC)\n  // @link https://passlib.readthedocs.io/en/stable/modular_crypt_format.html\n  if (/^\\$[a-zA-Z0-9]+(\\$[a-zA-Z0-9./]+)+$/.test(encodedData)) return ENCODING.MODULAR_CRYPT_FORMAT;\n\n  return ENCODING.UNKNOWN;\n};\n\nexport {\n  ENCODING, decode, encode, guessEncoding,\n};\n", "/**\n * @file Contains HTML SVG elements for dynamical element creation\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * All icons are from Phosphor, except the chevrons which are from\n * Material Design.\n */\n\nconst CHEVRON_SVG = '<svg viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M7.41 8.58L12 13.17l4.59-4.59L18 10l-6 6l-6-6z\"></path></svg>';\nconst CODE_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M240 128c-64 0 0 88-64 88H80c-64 0 0-88-64-88c64 0 0-88 64-88h96c64 0 0 88 64 88\" opacity=\".2\"/><path d=\"M43.18 128a29.78 29.78 0 0 1 8 10.26c4.8 9.9 4.8 22 4.8 33.74c0 24.31 1 36 24 36a8 8 0 0 1 0 16c-17.48 0-29.32-6.14-35.2-18.26c-4.8-9.9-4.8-22-4.8-33.74c0-24.31-1-36-24-36a8 8 0 0 1 0-16c23 0 24-11.69 24-36c0-11.72 0-23.84 4.8-33.74C50.68 38.14 62.52 32 80 32a8 8 0 0 1 0 16c-23 0-24 11.69-24 36c0 11.72 0 23.84-4.8 33.74A29.78 29.78 0 0 1 43.18 128M240 120c-23 0-24-11.69-24-36c0-11.72 0-23.84-4.8-33.74C205.32 38.14 193.48 32 176 32a8 8 0 0 0 0 16c23 0 24 11.69 24 36c0 11.72 0 23.84 4.8 33.74a29.78 29.78 0 0 0 8 10.26a29.78 29.78 0 0 0-8 10.26c-4.8 9.9-4.8 22-4.8 33.74c0 24.31-1 36-24 36a8 8 0 0 0 0 16c17.48 0 29.32-6.14 35.2-18.26c4.8-9.9 4.8-22 4.8-33.74c0-24.31 1-36 24-36a8 8 0 0 0 0-16\"/></g></svg>';\nconst COPY_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M184 72v144H40V72Z\" opacity=\".2\"/><path d=\"M184 64H40a8 8 0 0 0-8 8v144a8 8 0 0 0 8 8h144a8 8 0 0 0 8-8V72a8 8 0 0 0-8-8m-8 144H48V80h128Zm48-168v144a8 8 0 0 1-16 0V48H72a8 8 0 0 1 0-16h144a8 8 0 0 1 8 8\"/></g></svg>';\nconst DISK_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M216 91.31V208a8 8 0 0 1-8 8h-32v-64a8 8 0 0 0-8-8H88a8 8 0 0 0-8 8v64H48a8 8 0 0 1-8-8V48a8 8 0 0 1 8-8h116.69a8 8 0 0 1 5.65 2.34l43.32 43.31a8 8 0 0 1 2.34 5.66\" opacity=\".2\"/><path d=\"M219.31 80L176 36.69A15.86 15.86 0 0 0 164.69 32H48a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16V91.31A15.86 15.86 0 0 0 219.31 80M168 208H88v-56h80Zm40 0h-24v-56a16 16 0 0 0-16-16H88a16 16 0 0 0-16 16v56H48V48h116.69L208 91.31ZM160 72a8 8 0 0 1-8 8H96a8 8 0 0 1 0-16h56a8 8 0 0 1 8 8\"/></g></svg>';\nconst DONE_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M232 56v144a16 16 0 0 1-16 16H40a16 16 0 0 1-16-16V56a16 16 0 0 1 16-16h176a16 16 0 0 1 16 16\" opacity=\".2\"/><path d=\"m205.66 85.66l-96 96a8 8 0 0 1-11.32 0l-40-40a8 8 0 0 1 11.32-11.32L104 164.69l90.34-90.35a8 8 0 0 1 11.32 11.32\"/></g></svg>';\nconst DOUBLE_CHEVRON_SVG = '<svg viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"m17.16 7.59l-5.66 5.66l-5.66-5.66l.71-.7l4.95 4.95l4.95-4.95zm0 4l-5.66 5.66l-5.66-5.66l.71-.7l4.95 4.95l4.95-4.95z\"/></svg>';\nconst DOWNLOAD_BINARY_SVG = '<svg viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"m10.57 1.14l3.28 3.3l.15.36v9.7l-.5.5h-11l-.5-.5v-13l.5-.5h7.72zM3 2v12h10V5l-3-3zm1.46 4.052c0 1.287.458 1.93 1.374 1.93c.457 0 .807-.173 1.05-.52c.246-.348.368-.847.368-1.499C7.252 4.654 6.805 4 5.91 4c-.471 0-.831.175-1.08.526c-.247.35-.37.858-.37 1.526m.862-.022c0-.922.183-1.383.55-1.383c.344 0 .516.448.516 1.343s-.176 1.343-.527 1.343c-.36 0-.54-.434-.54-1.303zm3.187 1.886h2.435v-.672h-.792V4l-1.665.336v.687l.82-.177v2.398h-.798zm-1.337 5H4.736v-.672h.798V9.846l-.82.177v-.687L6.38 9v3.244h.792v.671zm1.035-1.931c0 1.287.458 1.93 1.375 1.93c.457 0 .807-.173 1.05-.52c.245-.348.368-.847.368-1.499c0-1.309-.448-1.963-1.343-1.963c-.47 0-.83.175-1.08.526c-.246.35-.37.858-.37 1.526m.862-.022c0-.922.184-1.383.55-1.383c.344 0 .516.448.516 1.343s-.175 1.343-.526 1.343c-.36 0-.54-.434-.54-1.303\" clip-rule=\"evenodd\"/></svg>';\nconst DOWNLOAD_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M232 136v64a8 8 0 0 1-8 8H32a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8h192a8 8 0 0 1 8 8\" opacity=\".2\"/><path d=\"M240 136v64a16 16 0 0 1-16 16H32a16 16 0 0 1-16-16v-64a16 16 0 0 1 16-16h40a8 8 0 0 1 0 16H32v64h192v-64h-40a8 8 0 0 1 0-16h40a16 16 0 0 1 16 16m-117.66-2.34a8 8 0 0 0 11.32 0l48-48a8 8 0 0 0-11.32-11.32L136 108.69V24a8 8 0 0 0-16 0v84.69L85.66 74.34a8 8 0 0 0-11.32 11.32ZM200 168a12 12 0 1 0-12 12a12 12 0 0 0 12-12\"/></g></svg>';\nconst KEY_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M232 96a72 72 0 0 1-98.83 66.83L120 176H96v24H72v24H32v-40l61.17-61.17A72 72 0 1 1 232 96\" opacity=\".2\"/><path d=\"M160 16a80.07 80.07 0 0 0-76.09 104.78l-57.57 57.56A8 8 0 0 0 24 184v40a8 8 0 0 0 8 8h40a8 8 0 0 0 8-8v-16h16a8 8 0 0 0 8-8v-16h16a8 8 0 0 0 5.66-2.34l9.56-9.57A80 80 0 1 0 160 16m0 144a63.7 63.7 0 0 1-23.65-4.51a8 8 0 0 0-8.84 1.68L116.69 168H96a8 8 0 0 0-8 8v16H72a8 8 0 0 0-8 8v16H40v-28.69l58.83-58.82a8 8 0 0 0 1.68-8.84A64 64 0 1 1 160 160m32-84a12 12 0 1 1-12-12a12 12 0 0 1 12 12\"/></g></svg>';\nconst KEYS_SVG = '<svg viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M261.1 24.8c-6.3 0-12.7.43-19.2 1.18c-34.6 4.01-64.8 17.59-86.1 37.06c-21.4 19.48-34.2 45.56-31 73.16c2.8 24.6 17.8 45.2 39.1 59.4c2.6-6.2 5.9-11.9 9.2-16.5c-17.6-11.6-28.4-27.3-30.4-45c-2.3-19.7 6.7-39.58 24.8-56.14c18.2-16.57 45.3-29.06 76.6-32.68c31.3-3.63 60.6 2.33 82.1 14.3c21.4 11.98 34.7 29.31 37 48.92c2.2 19.3-6.2 38.8-23.4 55a69.91 69.91 0 0 0-35.4-10.6h-2.2c-5.1.1-10.1.7-15.3 1.8c-37.5 8.7-60.8 45.5-52.2 82.7c5.3 23 21.6 40.6 42.2 48.5l39.7 172.2l47 29.1l29.5-46.7l-23.5-14.5l14.8-23.4l-23.5-14.6l14.7-23.3l-23.5-14.6l14.8-23.4l-13.5-58.4c15.1-16.1 22-39.1 16.7-62.2c-2.7-11.7-8.2-22-15.8-30.4c18.9-19 29.8-43.5 26.8-69.2c-3.2-27.55-21.6-50.04-46.9-64.11c-20.5-11.45-45.8-17.77-73.1-17.59m-20.2 135.5c-25.9 1.1-49.9 16.8-60.4 42.2c-9.1 21.9-6 45.7 6.2 64.2l-67.8 163l21.3 51l51.2-20.9l-10.7-25.5l25.6-10.4l-10.6-25.5l25.6-10.4l-10.7-25.5l25.6-10.5l22.8-54.8c-20.5-11.5-36.2-31.2-41.9-55.8c-6.9-30.3 3.1-60.6 23.8-81.1m58 7.2c8.9-.1 17.3 3.5 23.4 9.4c-5.5 3.5-11.6 6.6-18 9.4c-1.6-.6-3.3-.8-5.1-.8c-.6 0-1.1 0-1.6.1c-7 .8-12.2 6.1-13.1 12.7c-.2 1-.2 2-.2 2.9c.1.3.1.7.1 1c1 8.4 8.3 14.2 16.7 13.2c6.8-.8 12-5.9 13-12.3c6.2-2.8 12-5.9 17.5-9.4c.2 1 .4 2 .5 3c2.1 18-11 34.5-29 36.6c-17.9 2.1-34.5-11-36.5-29c-2.1-18 11-34.5 29-36.6c1.1-.1 2.2-.2 3.3-.2\"/></svg>';\nconst RULER_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M229.66 90.34L90.34 229.66a8 8 0 0 1-11.31 0L26.34 177a8 8 0 0 1 0-11.31L165.66 26.34a8 8 0 0 1 11.31 0L229.66 79a8 8 0 0 1 0 11.34\" opacity=\".2\"/><path d=\"m235.32 73.37l-52.69-52.68a16 16 0 0 0-22.63 0L20.68 160a16 16 0 0 0 0 22.63l52.69 52.68a16 16 0 0 0 22.63 0L235.32 96a16 16 0 0 0 0-22.63M84.68 224L32 171.31l32-32l26.34 26.35a8 8 0 0 0 11.32-11.32L75.31 128L96 107.31l26.34 26.35a8 8 0 0 0 11.32-11.32L107.31 96L128 75.31l26.34 26.35a8 8 0 0 0 11.32-11.32L139.31 64l32-32L224 84.69Z\"/></g></svg>';\nconst TEXT_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M200 56v136a8 8 0 0 1-8 8H64a8 8 0 0 1-8-8V56Z\" opacity=\".2\"/><path d=\"M208 56v32a8 8 0 0 1-16 0V64h-56v128h24a8 8 0 0 1 0 16H96a8 8 0 0 1 0-16h24V64H64v24a8 8 0 0 1-16 0V56a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8\"/></g></svg>';\nconst TRASH_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M200 56v152a8 8 0 0 1-8 8H64a8 8 0 0 1-8-8V56Z\" opacity=\".2\"/><path d=\"M216 48h-40v-8a24 24 0 0 0-24-24h-48a24 24 0 0 0-24 24v8H40a8 8 0 0 0 0 16h8v144a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16V64h8a8 8 0 0 0 0-16M96 40a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v8H96Zm96 168H64V64h128Zm-80-104v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0m48 0v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0\"/></g></svg>';\n\nexport {\n  CHEVRON_SVG,\n  CODE_SVG,\n  COPY_SVG,\n  DISK_SVG,\n  DONE_SVG,\n  DOUBLE_CHEVRON_SVG,\n  DOWNLOAD_BINARY_SVG,\n  DOWNLOAD_SVG,\n  KEY_SVG,\n  KEYS_SVG,\n  RULER_SVG,\n  TEXT_SVG,\n  TRASH_SVG,\n};\n", "/**\n * @file Contains functionality for showing operation results\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * The result element is separate from functionality-specific sections\n * and intends to display the output of some operation in a fixed-width\n * font face, while providing common UX elements, like copy.\n */\n\nimport { clearError, handleError } from './error';\nimport load from './loader';\nimport {\n  ENCODING, decode, encode, guessEncoding,\n} from './encode';\nimport {\n  DONE_SVG, COPY_SVG, TEXT_SVG, RULER_SVG, CODE_SVG, DOUBLE_CHEVRON_SVG,\n  DOWNLOAD_SVG, DOWNLOAD_BINARY_SVG, CHEVRON_SVG,\n} from './svg';\n\nconst resultElement = document.querySelector<HTMLElement>('#results')!;\n\nconst downloadEvent = (data: string | ArrayBuffer) => async () => {\n  let array: ArrayBuffer;\n  let extension = 'bin';\n\n  if (typeof data === 'string') {\n    array = (new TextEncoder()).encode(data);\n    extension = 'txt';\n  } else array = data;\n\n  const blob = new Blob([array], { type: 'application/octet-stream' });\n  const uri = window.URL.createObjectURL(blob);\n\n  const a = document.createElement('a');\n  a.href = uri;\n  a.download = `cryptotools-result.${extension}`;\n  document.body.appendChild(a);\n  a.click();\n\n  // Cleanup\n  document.body.removeChild(a);\n  window.URL.revokeObjectURL(uri);\n};\n\nconst buildResultElement = (\n  label: string,\n  value: string,\n  encoding: ENCODING,\n  bitLength: number,\n  rawData: string | ArrayBuffer,\n) => {\n  const container = document.createElement('div');\n  container.classList.add('result');\n\n  const h2 = document.createElement('h2');\n  h2.textContent = label;\n  container.appendChild(h2);\n\n  const content = document.createElement('div');\n  content.classList.add('content');\n  content.textContent = `${value.substring(0, 1000)}${value.length > 1000 ? '\u2026' : ''}`;\n  container.appendChild(content);\n\n  const stats = document.createElement('div');\n  stats.classList.add('stats');\n\n  const statsItems = [{\n    icon: TEXT_SVG,\n    tooltip: 'Character length',\n    statValue: `${value.length.toLocaleString()} characters`,\n  }, {\n    icon: RULER_SVG,\n    tooltip: 'Output length',\n    statValue: `${bitLength.toLocaleString()} bits`,\n  }];\n\n  const actionItems = [{\n    tooltip: 'Download Text',\n    tooltipAfter: 'Downloaded!',\n    icon: DOWNLOAD_SVG,\n    callback: downloadEvent(value),\n  }, {\n    tooltip: 'Copy',\n    tooltipAfter: 'Copied!',\n    icon: COPY_SVG,\n    callback: () => navigator.clipboard.writeText(content.textContent!),\n  }];\n\n  // Positive radixes are safe to encode and decode\n  if (encoding > 0 && typeof rawData === 'object') {\n    // First, add the Download Raw Data action button\n    actionItems.unshift({\n      tooltip: 'Download Raw Data',\n      tooltipAfter: 'Downloaded!',\n      icon: DOWNLOAD_BINARY_SVG,\n      callback: downloadEvent(rawData),\n    });\n\n    // Then add encoding transformation control\n    const formLabel = document.createElement('label');\n    const fieldLabel = document.createElement('span');\n    formLabel.classList.add('control');\n    fieldLabel.classList.add('label');\n    fieldLabel.textContent = 'Encoding';\n    formLabel.innerHTML = CODE_SVG;\n    formLabel.insertBefore(fieldLabel, formLabel.firstChild);\n\n    const select = document.createElement('select');\n\n    // Changing the encoding requires a rerender of the section to ensure\n    // stats and event handlers are referencing the correct data\n    select.addEventListener('change', () => {\n      const radix = Number(select.selectedOptions[0].value);\n\n      try {\n        const newValue = encode(rawData, radix);\n        const result = buildResultElement(label, newValue, radix, bitLength, rawData);\n        container.replaceWith(result);\n      } catch (e) { handleError(e); }\n    });\n\n    Object.entries(ENCODING).forEach(([labelContent, radix]) => {\n      if (typeof radix === 'number' && radix > 0) {\n        const option = document.createElement('option');\n        option.textContent = labelContent.toLowerCase();\n        option.value = String(radix);\n        if (radix === encoding) option.selected = true;\n        select.appendChild(option);\n      }\n    });\n\n    formLabel.appendChild(select);\n\n    // Chevron dropdown\n    const chevron = document.createElement('span');\n    chevron.innerHTML = CHEVRON_SVG;\n    formLabel.appendChild(chevron.firstChild!);\n\n    stats.appendChild(formLabel);\n  } else {\n    statsItems.unshift({\n      icon: CODE_SVG,\n      tooltip: 'Encoding',\n      statValue: ENCODING[encoding].toLowerCase(),\n    });\n  }\n\n  statsItems.forEach(({ icon, tooltip, statValue }) => {\n    const stat = document.createElement('div');\n    stat.classList.add('datum');\n    if (tooltip) stat.dataset.tooltip = tooltip;\n    stat.innerHTML = icon;\n\n    const span = document.createElement('span');\n    span.textContent = statValue;\n\n    stat.appendChild(span);\n    stats.appendChild(stat);\n  });\n  container.appendChild(stats);\n\n  const actions = document.createElement('div');\n  actions.classList.add('links');\n  stats.appendChild(actions);\n\n  actionItems.forEach(({\n    tooltip, tooltipAfter, icon, callback,\n  }) => {\n    const a = document.createElement('a');\n    a.dataset.tooltip = tooltip;\n    a.href = '#';\n    a.addEventListener('click', async (event) => {\n      event.preventDefault();\n\n      try {\n        await callback();\n\n        a.innerHTML = DONE_SVG;\n        a.dataset.tooltip = tooltipAfter;\n        setTimeout(() => {\n          a.innerHTML = icon;\n          a.dataset.tooltip = tooltip;\n        }, 5000); // revert icon after five seconds\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n      }\n    });\n\n    a.innerHTML = icon;\n    actions.appendChild(a);\n  });\n\n  return container;\n};\n\ninterface Result {\n  label: string;\n  defaultEncoding?: ENCODING;\n  value: ArrayBuffer | string;\n}\n\nconst showResults = (results: Result[]) => {\n  resultElement.innerHTML = DOUBLE_CHEVRON_SVG; // remove any previous results\n  clearError(); // as well as any previous error\n  resultElement.scrollIntoView({\n    block: 'start',\n    behavior: 'smooth',\n  });\n\n  results.forEach(({ label, value, defaultEncoding }) => {\n    let encoding: ENCODING;\n    let content: string;\n    let byteLength: number;\n\n    if (value instanceof ArrayBuffer) {\n      encoding = defaultEncoding || ENCODING.HEXADECIMAL;\n      content = encode(value, encoding);\n      byteLength = value.byteLength;\n    } else {\n      content = value;\n\n      // Try determining byte length\n      encoding = defaultEncoding || guessEncoding(value);\n      try {\n        byteLength = decode(value, encoding).byteLength;\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn(`Cannot calculate raw data byte length for \"${label}\" because no decoder has been implemented for \\`${ENCODING[encoding].toLowerCase()}\\`. Assuming utf-8 encoded text instead.`);\n        byteLength = (new TextEncoder()).encode(value).byteLength; // assume utf-8 encoded text\n      }\n    }\n\n    try {\n      const result = buildResultElement(label, content, encoding, byteLength * 8, value);\n      resultElement.appendChild(result);\n    } catch (e) { handleError(e); }\n  });\n\n  resultElement.style.opacity = '100%';\n  load(100);\n};\n\nconst hideResults = () => {\n  resultElement.style.opacity = '0';\n  resultElement.textContent = '';\n  clearError();\n};\n\nexport { showResults, hideResults, Result };\n", "/**\n * @file Contains functionality for the main menu\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport { hideResults } from '../lib/result';\n\nconst menuItems = document.querySelectorAll<HTMLElement>('#main-menu li');\nconst sections = document.querySelectorAll<HTMLElement>('main > section');\n\nmenuItems.forEach((item) => item.addEventListener('click', () => {\n  menuItems.forEach((i) => i.classList.remove('active'));\n  sections.forEach((i) => i.classList.remove('active'));\n  item.classList.add('active');\n  if (item.dataset.target) document.querySelector(item.dataset.target)?.classList.add('active');\n  hideResults();\n}));\n", "/**\n * @file Contains functionality for cryptographic digests\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * Input data of aribtrary length can be passed through a one-way\n * cryptographic function to produce a digest, or hash of the data.\n * Such digest can be used to verify the integrity of the data when\n * the expected hash is previously known.\n *\n * We use the Web Crypto API to perform all hashing functions in the\n * browser with native code.\n */\n\nimport { handleError } from '../lib/error';\nimport { ENCODING, decode, encode } from '../lib/encode';\nimport load from '../lib/loader';\nimport { Result, hideResults, showResults } from '../lib/result';\n\nconst digestSection = document.querySelector('#digest')!;\nconst digestSelect = digestSection.querySelector<HTMLSelectElement>('.digest-select')!;\nconst textarea = digestSection.querySelector('textarea')!;\nconst details = digestSection.querySelector('details');\nconst button = digestSection.querySelector('button')!;\n\n/**\n * Digest Verification UI changes\n */\ndetails?.addEventListener('toggle', () => {\n  if (details.open) button.textContent = 'Verify Digest';\n  else button.textContent = 'Generate Digest';\n});\n\n/**\n * Digest Generation\n */\nasync function digestMessage(message: string, algorithm: string) {\n  const encoding = Number(digestSection.querySelector<HTMLSelectElement>('.encoding select')?.selectedOptions[0].value);\n  const data = decode(message, encoding);\n  const digest = await crypto.subtle.digest(algorithm, data); // hash the message\n  return digest;\n}\n\nbutton.addEventListener('click', async () => {\n  load(0);\n\n  const algorithm = digestSelect.selectedOptions[0].dataset.alg!;\n  const text = textarea.value;\n\n  try {\n    const digest = await digestMessage(text, algorithm);\n\n    // If the details element is open, we are verifying a digest\n    if (details?.open) {\n      const encoding = Number(details.querySelector<HTMLSelectElement>('select.input-encoding')?.selectedOptions[0].value);\n      const value = details.querySelector<HTMLInputElement>('input.hash')?.value || '';\n      const comparedDigest = decode(value, encoding);\n      showResults([{\n        label: `${algorithm} Digest Verified?`,\n        value: String(\n          encode(digest, ENCODING.HEXADECIMAL) === encode(comparedDigest, ENCODING.HEXADECIMAL),\n        ),\n      }]);\n    } else {\n      showResults([{ label: `${algorithm} Digest`, value: digest, defaultEncoding: ENCODING.HEXADECIMAL }]);\n    }\n  } catch (e) { handleError(e); }\n});\n\ndigestSelect.addEventListener('change', () => {\n  const menu = digestSection.querySelector('menu')!;\n  const blockSize = menu.querySelector('.block-size span')!;\n  const method = menu.querySelector('.method span')!;\n  const specification = menu.querySelector('.specification span')!;\n\n  const selected = digestSelect.selectedOptions[0].dataset;\n  blockSize.textContent = selected.bs || '';\n  method.textContent = selected.method || '';\n  specification.textContent = selected.spec || '';\n\n  hideResults();\n});\n\n/**\n * File Uploads\n */\n\n/**\n * Produce digests of a list of files\n *\n * @param files List of File - ArrayBuffer pairs\n * @param checksums Text file of hashes to verify\n * @param algorithm Algoithm to use for digest and verification\n */\nconst digestFiles = async (\n  files: [File, ArrayBuffer][],\n  checksums: string,\n  algorithm: string,\n) => {\n  const results: Result[] = [];\n\n  try {\n    const sums: { [k: string]: string } = {};\n    if (checksums) {\n      checksums.split(/\\r?\\n/).forEach((line) => {\n        const [checksum, filename] = line.split(/\\s[\\s*]/);\n        sums[filename] = checksum;\n      });\n    }\n\n    await Promise.all(files.map(async ([file, data]) => {\n      const checksum = sums[file.name];\n      const digest = await crypto.subtle.digest(algorithm, data);\n\n      let label: string;\n      let value: string | ArrayBuffer;\n      if (checksum) {\n        label = `${algorithm} Digest of ${file.name} Verifies Checksum? \u2022 ${file.size.toLocaleString()} bytes \u2022 ${file.type || 'Unknown type'}`;\n        value = String(checksum === encode(digest, ENCODING.HEXADECIMAL));\n      } else {\n        label = `${algorithm} Digest of ${file.name} \u2022 ${file.size.toLocaleString()} bytes \u2022 ${file.type || 'Unknown type'}`;\n        value = digest;\n      }\n\n      results.push({ label, value });\n    }));\n  } catch (e) { handleError(e); }\n\n  showResults(results);\n};\n\nconst readFiles = (files?: FileList | null) => {\n  if (!files || !files.length) return;\n  load(0);\n\n  const list = Array.from(files);\n  const totalSize = list.reduce((size, file) => size + file.size, 0);\n  const currentSizes: number[] = [];\n  const digests: [File, ArrayBuffer][] = [];\n  let algorithm = digestSelect.selectedOptions[0].dataset.alg!;\n  let checksums: string;\n\n  list.forEach((file, i) => {\n    const reader = new FileReader();\n\n    reader.onprogress = (event) => {\n      currentSizes[i] = event.loaded;\n      load((currentSizes.reduce((p, c) => p + c, 0) / totalSize) * 100);\n    };\n\n    reader.onload = async (event) => {\n      if (!event.target?.result || !(event.target.result instanceof ArrayBuffer)) {\n        handleError(new Error(`File [${file.name}] of type [${file.type}] failed to load.`));\n        return;\n      }\n\n      // Look for checksum files\n      try {\n        const checksumExistsError = new Error('More than one checksum file exists in the file list.');\n        switch (true) {\n          case /^.*\\.sha1$|^sha1sums?(\\.txt)?$/i.test(file.name):\n            algorithm = 'SHA-1';\n            if (checksums) throw checksumExistsError;\n            checksums = (new TextDecoder()).decode(event.target.result);\n            break;\n          case /^.*\\.sha256$|^sha256sums?(\\.txt)?$/i.test(file.name):\n            algorithm = 'SHA-256';\n            if (checksums) throw checksumExistsError;\n            checksums = (new TextDecoder()).decode(event.target.result);\n            break;\n          case /^.*\\.sha384$|^sha384sums?(\\.txt)?$/i.test(file.name):\n            algorithm = 'SHA-384';\n            if (checksums) throw checksumExistsError;\n            checksums = (new TextDecoder()).decode(event.target.result);\n            break;\n          case /^.*\\.sha512$|^sha512sums?(\\.txt)?$/i.test(file.name):\n            algorithm = 'SHA-512';\n            if (checksums) throw checksumExistsError;\n            checksums = (new TextDecoder()).decode(event.target.result);\n            break;\n          default:\n            digests.push([file, event.target.result]);\n        }\n      } catch (e) { handleError(e); }\n\n      const done = digests.length === (checksums ? files.length - 1 : files.length);\n      if (done) digestFiles(digests, checksums, algorithm);\n    };\n\n    reader.readAsArrayBuffer(file);\n  });\n};\n\nconst upload = digestSection.querySelector<HTMLInputElement>('.upload input');\nupload?.addEventListener('change', () => readFiles(upload.files));\n\n/**\n * Drag-and-Drop File Uploads\n */\n\ntextarea.addEventListener('drop', (event) => {\n  readFiles(event.dataTransfer?.files);\n});\n", "/**\n * @file Contains functionality for secure generation of random data\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * The Web Crypto API lets us generate random data suitable for cryptographic\n * operations using a native Pseudo Random Number Generator.  We enable\n * generation of artibtrary length random data for display or download.  For\n * display, we support binary, octal, and hexadecimal encodings.  We also\n * enable production of random UUIDv4 values.\n */\n\nimport { handleError } from '../lib/error';\nimport load from '../lib/loader';\nimport { hideResults, showResults } from '../lib/result';\n\nconst randomElement = document.querySelector<HTMLElement>('#random')!;\nconst menuItems = randomElement.querySelectorAll<HTMLLIElement>('menu li');\nconst sections = randomElement.querySelectorAll<HTMLDivElement>('.settings');\n\nmenuItems.forEach((item) => item.addEventListener('click', () => {\n  menuItems.forEach((i) => i.classList.remove('active'));\n  sections.forEach((i) => i.classList.remove('active'));\n  item.classList.add('active');\n  if (item.dataset.target) document.querySelector(`.${item.dataset.target}`)?.classList.add('active');\n  hideResults();\n}));\n\nconst prngGenerateButton = randomElement.querySelector<HTMLButtonElement>('button')!;\nprngGenerateButton.addEventListener('click', () => {\n  load(0);\n\n  try {\n    const prngByteLength = randomElement.querySelector<HTMLInputElement>('.byte-length')!;\n    const prngOutput = randomElement.querySelector<HTMLSelectElement>('.output')!;\n    const op = randomElement.querySelector<HTMLElement>('menu li.active')!.dataset.target;\n\n    if (op === 'uuid') {\n      showResults([{ label: 'UUID', value: window.crypto.randomUUID() }]);\n      return;\n    }\n\n    // If not 'uuid', then 'random-values'\n    const bytes = Number(prngByteLength.value.length ? prngByteLength.value : 64);\n    const array = new Uint8Array(bytes);\n    window.crypto.getRandomValues(array);\n\n    const out = prngOutput.selectedOptions[0].value;\n\n    if (out === 'display') {\n      showResults([{ label: 'Random Values', value: array.buffer }]);\n      return;\n    }\n\n    // If not 'display', then 'download'\n    const blob = new Blob([array], { type: 'application/octet-stream' });\n    const uri = window.URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = uri;\n    a.download = `prng-${bytes}-bytes.bin`;\n    document.body.appendChild(a);\n    a.click();\n\n    // Cleanup\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(uri);\n  } catch (e) { handleError(e); }\n\n  load(100);\n});\n", "/**\n * @file Contains features for confirmation modals\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nconst removeModal = (background: HTMLElement) => (event: Event) => {\n  event.preventDefault();\n  background.remove();\n};\n\n/**\n * Create Modal\n * @param iconSvg A string containing SVG markup for the modal icon\n * @param title The modal title, e.g.: \"Are you sure?\"\n * @param prompt A larger description of the impact\n * @param confirmationText The confirmation button text\n * @param callback The function to execute upon confirmation\n */\nconst showModal = (\n  iconSvg: string,\n  title: string,\n  prompt: string,\n  confirmationText: string,\n  callback: Function,\n) => {\n  const background = document.createElement('div');\n  background.classList.add('modal-background');\n\n  const modal = document.createElement('aside');\n  modal.classList.add('modal');\n  background.appendChild(modal);\n\n  const container = document.createElement('div');\n  container.classList.add('container');\n  modal.appendChild(container);\n\n  const icon = document.createElement('span');\n  icon.innerHTML = iconSvg;\n  container.appendChild(icon);\n\n  const content = document.createElement('div');\n  content.classList.add('content');\n  container.appendChild(content);\n\n  const titleElement = document.createElement('span');\n  titleElement.textContent = title;\n  content.appendChild(titleElement);\n\n  const p = document.createElement('p');\n  p.textContent = prompt;\n  content.appendChild(p);\n\n  const actions = document.createElement('div');\n  actions.classList.add('actions');\n  modal.appendChild(actions);\n\n  const cancel = document.createElement('button');\n  cancel.classList.add('cancel');\n  cancel.textContent = 'Cancel';\n  cancel.addEventListener('click', removeModal(background));\n  actions.appendChild(cancel);\n\n  const confirm = document.createElement('button');\n  confirm.classList.add('confirm');\n  confirm.textContent = confirmationText;\n  confirm.addEventListener('click', removeModal(background));\n  confirm.addEventListener('click', () => callback());\n  actions.appendChild(confirm);\n\n  document.body.appendChild(background);\n};\n\nexport default showModal;\n", "/**\n * @file Establishes a persistent key storage via IndexedDB\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nconst DATABASE_NAME = 'cryptotools';\nconst KEY_STORE_NAME = 'keys';\nconst CURRENT_VERSION = 1;\n\nlet db: IDBDatabase;\n\n/**\n * Open the database\n */\nconst openDatabase = () => new Promise<boolean>((resolve, reject) => {\n  const request = window.indexedDB.open(DATABASE_NAME, CURRENT_VERSION);\n\n  request.onerror = () => {\n    reject(new Error('Cannot open database.'));\n  };\n\n  request.onupgradeneeded = () => {\n    db = request.result;\n\n    // Create an objectStore for this database\n    db.createObjectStore(KEY_STORE_NAME, { keyPath: 'name' });\n  };\n\n  request.onsuccess = () => {\n    db = request.result;\n    db.onerror = (event) => console.error(new Error(`A database error ocurred: ${JSON.stringify(event.target)}`));\n    resolve(true);\n  };\n});\n\n/**\n * Store a cryptographic key to the database\n */\nconst storeKey = (\n  keyName: string,\n  key: CryptoKey | CryptoKeyPair,\n) => new Promise<boolean>((resolve, reject) => {\n  const transaction = db.transaction([KEY_STORE_NAME], 'readwrite');\n  const store = transaction.objectStore(KEY_STORE_NAME);\n  const request = store.add({\n    name: keyName,\n    key,\n  });\n\n  request.onerror = (event) => reject(new Error(JSON.stringify(event)));\n  request.onsuccess = () => resolve(true);\n});\n\n/**\n * Delete a cryptographic key from the database\n */\nconst deleteKey = (keyName: string) => new Promise<boolean>((resolve, reject) => {\n  const transaction = db.transaction([KEY_STORE_NAME], 'readwrite');\n  const store = transaction.objectStore(KEY_STORE_NAME);\n  const request = store.delete(keyName);\n\n  request.onerror = (event) => reject(new Error(JSON.stringify(event)));\n  request.onsuccess = () => resolve(true);\n});\n\ntype KeyStoreObject = { name: string, key: CryptoKey | CryptoKeyPair };\n\n/**\n * Retrieve all keys from the database\n */\nconst getKeys = () => new Promise<KeyStoreObject[]>((resolve, reject) => {\n  const transaction = db.transaction([KEY_STORE_NAME], 'readonly');\n  const store = transaction.objectStore(KEY_STORE_NAME);\n  const request = store.getAll();\n\n  request.onerror = (event) => reject(new Error(JSON.stringify(event)));\n  request.onsuccess = (event) => resolve((event.target as any).result); // TODO: proper typing\n});\n\nexport {\n  openDatabase, getKeys, storeKey, deleteKey,\n};\n", "/**\n * @file Handles UI changes to Encryption Operation Area\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport { KEY_SVG } from '../../lib/svg';\n// eslint-disable-next-line import/no-cycle\nimport { getKey } from './keys';\n\nconst encryptionSection = document.querySelector<HTMLElement>('#encryption')!;\nconst opArea = encryptionSection.querySelector<HTMLElement>('.operation-area');\nconst tabs = opArea?.querySelectorAll<HTMLLIElement>('menu li');\n\n// Hide operation area when switching main tabs\nencryptionSection.querySelectorAll<HTMLLIElement>('.keys menu li')\n  .forEach((li) => li.addEventListener('click', () => opArea?.classList.remove('active')));\n\n/**\n * Update operation area textarea placeholder and button text\n * @param op Requested key usage\n * @param alg Algorithm for displaying algorithm-specific settings\n */\nconst updateLowerArea = (op: KeyUsage, alg: string) => {\n  const textarea = opArea?.querySelector<HTMLTextAreaElement>('textarea');\n  const signature = opArea?.querySelector<HTMLElement>('.signature');\n  const button = opArea?.querySelector<HTMLButtonElement>('button');\n\n  let placeholder: string = '';\n  switch (op) {\n    // TODO: Support multiple files\n    case 'encrypt': placeholder = 'Paste plain text or drop a file...'; break;\n    case 'decrypt': placeholder = 'Paste ciphertext or drop a file...'; break;\n    case 'sign': placeholder = 'Paste plain text or drop a file...'; break;\n    case 'verify': placeholder = 'Paste plain text or drop a file...'; break;\n    default:\n  }\n  if (textarea) textarea.placeholder = placeholder;\n\n  // Display appropriate encryption/signature settings\n  opArea?.querySelectorAll<HTMLElement>('.input > .settings').forEach((elem) => elem.classList.remove('active'));\n  opArea?.querySelector<HTMLElement>(`.settings.${alg}.${op}`)?.classList.add('active');\n  if (op === 'verify') signature?.classList.add('active');\n  else signature?.classList.remove('active');\n\n  // Capitalize operation for button text\n  if (button) button.textContent = `${op.charAt(0).toUpperCase()}${op.slice(1)}`;\n};\n\n/**\n * Handle Key List item button clicks and update operation area\n * @param keyName Key Dictionary key\n * @param key The Crypto Key\n * @returns function Event Handler\n */\nconst updateOpArea = (\n  keyName: string,\n  cryptoKey: CryptoKey | CryptoKeyPair,\n  operation?: KeyUsage,\n) => () => {\n  opArea?.classList.add('active');\n  opArea?.scrollIntoView({\n    block: 'center',\n    behavior: 'smooth',\n  });\n\n  const isSymmetric = cryptoKey instanceof CryptoKey;\n  let op = operation;\n\n  let friendlyName = keyName;\n  let key: CryptoKey;\n  let usages: KeyUsage[];\n\n  if (isSymmetric) {\n    key = cryptoKey;\n    usages = key.usages;\n\n    // Prefer \"Encrypt\" and \"Sign\" tabs\n    if (!op) {\n      if (usages.includes('encrypt')) op = 'encrypt';\n      else if (usages.includes('sign')) op = 'sign';\n      else [op] = usages;\n    }\n  } else {\n    usages = cryptoKey.privateKey.usages.concat(cryptoKey.publicKey.usages);\n\n    // Prefer \"Encrypt\" and \"Sign\" tabs\n    if (!op) {\n      if (usages.includes('encrypt')) op = 'encrypt';\n      else if (usages.includes('sign')) op = 'sign';\n      else [op] = usages;\n    }\n\n    let whichKey: string = '';\n    switch (op) {\n      case 'verify':\n      case 'encrypt':\n        whichKey = 'Public Key';\n        key = cryptoKey.publicKey;\n        break;\n      case 'sign':\n      case 'decrypt':\n        whichKey = 'Private Key';\n        key = cryptoKey.privateKey;\n        break;\n      default:\n        throw new Error(`Operation ${op} is not implemented for key \"${keyName}\".`);\n    }\n    friendlyName = `${keyName} (${whichKey})`;\n  }\n\n  const alg = key.algorithm.name.toLowerCase();\n  if (opArea) {\n    opArea.dataset.key = keyName;\n    opArea.dataset.alg = alg;\n  }\n\n  tabs?.forEach((tab) => tab.classList.remove('active', 'show'));\n  opArea?.querySelector<HTMLElement>(`menu li[data-op=\"${op}\"]`)?.classList.add('active');\n  usages.forEach((usage) => opArea?.querySelector<HTMLElement>(`menu li[data-op=\"${usage}\"]`)?.classList.add('show'));\n\n  // Display key name in footer\n  const keyNameElement = opArea?.querySelector<HTMLLIElement>('.footer .key');\n  if (keyNameElement) {\n    keyNameElement.innerHTML = KEY_SVG;\n    const span = document.createElement('span');\n    span.textContent = friendlyName;\n    keyNameElement.appendChild(span);\n  }\n\n  updateLowerArea(op, alg);\n};\n\n// Also update operation area on tab change\ntabs?.forEach((tab) => {\n  const op = tab.dataset.op as KeyUsage;\n  tab.addEventListener('click', () => {\n    const keyName = opArea!.dataset.key || '';\n    const { key } = getKey(keyName);\n    updateOpArea(keyName, key, op)();\n  });\n});\n\nexport default updateOpArea;\n", "/**\n * @file Key Management\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport { handleError } from '../../lib/error';\nimport load from '../../lib/loader';\nimport showModal from '../../lib/modal';\nimport { hideResults } from '../../lib/result';\nimport {\n  DISK_SVG, KEYS_SVG, KEY_SVG, TRASH_SVG,\n} from '../../lib/svg';\nimport {\n  deleteKey, getKeys, openDatabase, storeKey,\n} from './database';\n// eslint-disable-next-line import/no-cycle\nimport updateOpArea from './operationArea';\n\ntype Key = {\n  saved: boolean,\n  key: CryptoKey | CryptoKeyPair,\n};\n\n/**\n * Dictionary of keys in ephemeral state\n */\nconst keys: { [keyName: string]: Key } = {};\n\n/**\n * Update Key List\n */\nconst updateKeyList = () => {\n  // Hide Operation Area\n  const opArea = document.querySelector<HTMLElement>('#encryption .operation-area');\n  opArea?.classList.remove('active');\n  hideResults();\n\n  const list = document.querySelector<HTMLElement>('#encryption .list-keys ul')!;\n  list.textContent = ''; // reset list\n\n  const array = Object.entries(keys);\n  if (!array.length) {\n    const li = document.createElement('li');\n    li.textContent = 'No Keys.  Generate a key to get started.';\n    list.appendChild(li);\n  }\n\n  array.forEach(([k, v]) => {\n    const { key } = v;\n\n    const li = document.createElement('li');\n    li.addEventListener('click', updateOpArea(k, key));\n\n    const container = document.createElement('div');\n    container.classList.add('container');\n    li.appendChild(container);\n\n    const icon = document.createElement('span');\n    container.appendChild(icon);\n\n    const meta = document.createElement('div');\n    meta.classList.add('meta');\n    container.appendChild(meta);\n\n    const name = document.createElement('span');\n    name.textContent = k;\n    meta.appendChild(name);\n\n    if (v.saved) {\n      const disk = document.createElement('span');\n      disk.classList.add('saved');\n      disk.dataset.tooltip = 'Persists after page refresh';\n      disk.innerHTML = DISK_SVG;\n      name.appendChild(disk);\n    }\n\n    const isSymmetric = key instanceof CryptoKey;\n\n    const attributes = document.createElement('span');\n    let type: string;\n    let alg: string;\n    let usages: KeyUsage[];\n\n    if (isSymmetric) {\n      icon.innerHTML = KEY_SVG;\n      type = 'Symmetric Key';\n      alg = key.algorithm.name;\n      usages = key.usages;\n    } else {\n      icon.innerHTML = KEYS_SVG;\n      type = 'Asymmetric Key Pair';\n      alg = key.privateKey.algorithm.name;\n      usages = key.privateKey.usages.concat(key.publicKey.usages);\n    }\n\n    attributes.textContent = `${type} \u2022 ${alg} \u2022 ${usages.join(', ')}`;\n    meta.appendChild(attributes);\n\n    const actions = document.createElement('div');\n    actions.classList.add('actions');\n    li.appendChild(actions);\n\n    const a = document.createElement('a');\n    a.href = '#';\n    a.innerHTML = TRASH_SVG;\n    a.dataset.tooltip = 'Delete key';\n    a.addEventListener('click', (event) => {\n      event.preventDefault();\n      event.stopPropagation(); // prevent li click from registering\n\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      showModal(TRASH_SVG, 'Are you sure?', 'This is an unrecoverable operation.', 'Delete', removeKey(k));\n    });\n    actions.appendChild(a);\n\n    list.appendChild(li);\n  });\n};\n\n/**\n * Show key list\n */\nconst showKeys = () => document.querySelector<HTMLElement>('#encryption li[data-target=\"list-keys\"]')?.click();\n\n/**\n * Add keys to dictionary\n */\nconst addKey = (name: string, key: CryptoKey | CryptoKeyPair, save: boolean = false) => {\n  if (keys[name]) throw new Error(`A key by the name of \"${name}\" already exists.`);\n  keys[name] = { saved: save, key };\n\n  if (save) storeKey(name, key);\n\n  updateKeyList();\n  showKeys();\n  load(100);\n};\n\n/**\n * Retrieve keys from dictionary\n */\nconst getKey = (name: string) => {\n  if (!keys[name]) throw new Error(`A key by the name of \"${name}\" does not exist.`);\n  return keys[name];\n};\n\n/**\n * Delete key from dictionary and database\n */\nconst removeKey = (name: string) => async () => {\n  try {\n    await deleteKey(name);\n    delete keys[name];\n    updateKeyList();\n  } catch (e) { handleError(e); }\n};\n\n// Start by opening the Keys database\n(async () => {\n  try {\n    await openDatabase();\n\n    // Populate the keys dictionary\n    const k = await getKeys();\n    k.forEach(({ name, key }) => { keys[name] = { saved: true, key }; });\n    updateKeyList();\n  } catch (e) { handleError(e); }\n})();\n\nexport { addKey, getKey, updateKeyList };\n", "/**\n * @file Key Generation\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport load from '../../lib/loader';\nimport { handleError } from '../../lib/error';\nimport { addKey } from './keys';\n\nconst generateElement = document.querySelector('#encryption .generate-key')!;\nconst purposeElement = generateElement.querySelector<HTMLSelectElement>('.control.purpose select')!;\n\n/**\n * Update footer stats\n */\nconst updateStats = () => {\n  const algorithmSelect = generateElement.querySelector<HTMLSelectElement>('.settings.algorithm.active select')!;\n  const currentAglorithm = algorithmSelect.selectedOptions[0];\n  const type = generateElement.querySelector<HTMLSpanElement>('.stats .type span')!;\n  const method = generateElement.querySelector<HTMLSpanElement>('.stats .method span')!;\n  const spec = generateElement.querySelector<HTMLSpanElement>('.stats .specification span')!;\n  const confidentiality = generateElement.querySelector<HTMLSpanElement>('.stats .confidentiality')!;\n  const integrity = generateElement.querySelector<HTMLSpanElement>('.stats .integrity')!;\n\n  // Show appropriate settings for current algorithm\n  const sections = generateElement.querySelectorAll<HTMLElement>('div.settings');\n  sections.forEach((section) => {\n    if (!section.classList.contains('algorithm')) {\n      section.classList.remove('active');\n    }\n  });\n  generateElement.querySelector(`.settings.${currentAglorithm.dataset.target}`)?.classList.add('active');\n\n  // Update statistics\n  algorithmSelect.parentElement!.querySelector('.label')!.textContent = `Algorithm \u2022 ${currentAglorithm.dataset.mode}`;\n  type.textContent = currentAglorithm.dataset.type || '';\n  method.textContent = currentAglorithm.dataset.method || '';\n  spec.textContent = currentAglorithm.dataset.spec || '';\n\n  if (currentAglorithm.dataset.confidentiality === 'true') {\n    confidentiality.classList.remove('no');\n    confidentiality.dataset.tooltip = 'Provides Confidentiality';\n  } else {\n    confidentiality.classList.add('no');\n    confidentiality.dataset.tooltip = 'Provides NO Confidentiality';\n  }\n\n  if (currentAglorithm.dataset.integrity === 'true') {\n    integrity.classList.remove('no');\n    integrity.dataset.tooltip = 'Provides Integrity Protection';\n  } else {\n    integrity.classList.add('no');\n    integrity.dataset.tooltip = 'Provides NO Integrity Protection';\n  }\n};\n\n/**\n * Update controls based on selected key generation purpose\n */\npurposeElement.addEventListener('change', () => {\n  const target = purposeElement.selectedOptions[0].value;\n  const sections = generateElement.querySelectorAll('.settings.algorithm');\n\n  sections.forEach((section) => section.classList.remove('active'));\n  generateElement.querySelector(`.settings.${target}`)?.classList.add('active');\n\n  updateStats();\n});\ngenerateElement.querySelectorAll('.settings.algorithm').forEach((alg) => alg.addEventListener('change', () => updateStats()));\n\n/**\n * Convert a decimal integer to Uint8Array\n */\nconst intToArray = (num: number): Uint8Array => {\n  let n = num;\n  const bytes = [];\n\n  while (n > 0) {\n    // eslint-disable-next-line no-bitwise\n    bytes.unshift(n & 0xFF); // Get the lowest 8 bits\n    // eslint-disable-next-line no-bitwise\n    n >>= 8; // Shift right by 8 bits\n  }\n  return new Uint8Array(bytes);\n};\n\n/**\n * Handle key generation trigger\n */\nconst button = generateElement.querySelector('button');\nbutton?.addEventListener('click', async () => {\n  button.disabled = true;\n  load(0);\n\n  const nameElement = generateElement.querySelector<HTMLInputElement>('.name input')!;\n  const name = nameElement.value;\n  const algorithmSelect = generateElement.querySelector<HTMLSelectElement>('.settings.algorithm.active select')!;\n  const currentAglorithm = algorithmSelect.selectedOptions[0];\n\n  try {\n    if (!name) throw new Error('A key name is required.');\n\n    let params: RsaHashedKeyGenParams | EcKeyGenParams | HmacKeyGenParams | AesKeyGenParams;\n    const keyUsage: KeyUsage[] = purposeElement.value === 'encryption'\n      ? ['encrypt', 'decrypt']\n      : ['sign', 'verify'];\n\n    switch (currentAglorithm.dataset.target) {\n      case 'rsa': {\n        const modulusLength = Number(generateElement.querySelector<HTMLOptionElement>('.settings.rsa input.modulus-length')?.value) || 2048;\n        const exponent = Number(generateElement.querySelector<HTMLOptionElement>('.settings.rsa input.public-exponent')?.value) || 65537;\n        const hash = generateElement.querySelector<HTMLSelectElement>('.settings.rsa select.hash')?.value || 'SHA-256';\n\n        params = {\n          name: currentAglorithm.dataset.alg || '',\n          modulusLength,\n          publicExponent: intToArray(exponent),\n          hash,\n        };\n        break;\n      }\n\n      case 'ec': {\n        const curve = generateElement.querySelector<HTMLSelectElement>('.settings.ec select.curve')?.value || 'P-256';\n        params = {\n          name: currentAglorithm.dataset.alg || '',\n          namedCurve: curve,\n        };\n        break;\n      }\n\n      case 'hmac': {\n        const hash = generateElement.querySelector<HTMLSelectElement>('.settings.hmac select.hash')?.value || 'SHA-256';\n        params = {\n          name: currentAglorithm.dataset.alg || '',\n          hash,\n        };\n        break;\n      }\n\n      case 'aes': {\n        const length = Number(generateElement.querySelector<HTMLSelectElement>('.settings.aes select.key-length')?.value) || 256;\n        params = {\n          name: currentAglorithm.dataset.alg || '',\n          length,\n        };\n        break;\n      }\n\n      default:\n        throw new Error('No algorithm selected.');\n    }\n\n    const key = await window.crypto.subtle.generateKey(params, false, keyUsage);\n    const persist = generateElement.querySelector<HTMLInputElement>('.save input')?.checked;\n    addKey(name, key, persist);\n  } catch (e) {\n    handleError(e);\n    button.disabled = false;\n    return;\n  }\n\n  // Reset form\n  generateElement.querySelector<HTMLFormElement>('form')?.reset();\n  const event = new Event('change');\n  purposeElement.dispatchEvent(event);\n  button.disabled = false;\n});\n", "/**\n * @file Handles encryption, decryption, signing, and verifying\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport { getKey } from './keys';\nimport { ENCODING, decode } from '../../lib/encode';\nimport { handleError } from '../../lib/error';\nimport load from '../../lib/loader';\nimport { Result, showResults } from '../../lib/result';\n\nconst encryptionSection = document.querySelector<HTMLElement>('#encryption')!;\nconst opArea = encryptionSection.querySelector<HTMLElement>('.encrypt.operation-area')!;\nconst textarea = opArea.querySelector<HTMLTextAreaElement>('.input textarea')!;\n\n/**\n * Perform a cryptographic operation\n * @param operation One of encrypt, decrypt, sign, or verify\n * @param data Data upon which to operate\n * @param labelSuffix Whether to append any additional information to the result title\n * @returns A set of results for display\n */\nconst encrypt = async (\n  operation: string,\n  data: ArrayBuffer,\n  labelSuffix: string = '',\n): Promise<Result[]> => {\n  const results: Result[] = [];\n  const suffix = labelSuffix ? ` \u2022 ${labelSuffix}` : '';\n\n  const cryptoKey = getKey(opArea.dataset.key || '').key;\n  const isSymmetric = cryptoKey instanceof CryptoKey;\n\n  switch (operation) {\n    case 'verify': {\n      const signatureTextarea = opArea.querySelector<HTMLTextAreaElement>('.signature textarea')!;\n      if (!signatureTextarea.value) throw new Error('A signature is required to verify the plaintext.');\n      const signatureEncoding = Number(opArea.querySelector<HTMLSelectElement>('.signature .encoding select')?.selectedOptions[0].value);\n      const signature = decode(signatureTextarea.value, signatureEncoding);\n\n      const key = isSymmetric ? cryptoKey : cryptoKey.publicKey;\n      const algorithm: any = { // TODO: typing this properly throw errors when adding params\n        name: key.algorithm.name,\n      };\n\n      if (key.algorithm.name === 'RSA-PSS') {\n        const saltLength = opArea.querySelector<HTMLInputElement>('.rsa-pss.verify input.salt-length')?.value;\n        algorithm.saltLength = saltLength ? Number(saltLength) : 32;\n      }\n\n      if (key.algorithm.name === 'ECDSA') {\n        const hashAlgorithm = opArea.querySelector<HTMLSelectElement>('.ecdsa.verify select')?.selectedOptions[0].value;\n        algorithm.hash = hashAlgorithm;\n      }\n\n      const verification = await window.crypto.subtle.verify(algorithm, key, signature, data);\n      results.unshift({\n        label: 'Signature verifies data?',\n        value: String(verification),\n      });\n      break;\n    }\n    case 'encrypt': {\n      const key = isSymmetric ? cryptoKey : cryptoKey.publicKey;\n      const algorithm: any = { // TODO: typing this properly throw errors when adding params\n        name: key.algorithm.name,\n      };\n\n      if (key.algorithm.name === 'AES-CTR') {\n        const counterValue = opArea.querySelector<HTMLInputElement>('.aes-ctr.encrypt input.counter')?.value;\n        const counterRadix = opArea.querySelector<HTMLSelectElement>('.aes-ctr.encrypt select')?.selectedOptions[0].value;\n\n        // Counter must be exactly 16 bytes long, the AES block size.  Here we let the\n        // implementation handle throwing the error for a counter of wrong size.\n        //\n        // The length is the number of bits in the counter block used for the counter\n        // (as opposed to the nonce).  The total number of blocks in the message must be\n        // less than or equal to 2^n, where n is this counter length in bits.\n\n        let counter: ArrayBuffer;\n        if (counterValue) {\n          const radix = Number(counterRadix);\n          counter = decode(counterValue, radix);\n          if (counter.byteLength !== 16) throw new Error('Counter length must be exactly 16 bytes.');\n        } else counter = crypto.getRandomValues(new Uint8Array(16)).buffer; // per SP800-38A\n\n        algorithm.counter = counter;\n        algorithm.length = 64; // NIST recommends length half of the counter block size (bits)\n\n        results.push({\n          label: 'Counter \u2022 Needed to decrypt',\n          value: counter,\n          defaultEncoding: ENCODING.BASE64,\n        }, {\n          label: 'Counter Length \u2022 Needed to decrypt',\n          value: algorithm.length,\n          defaultEncoding: ENCODING.INTEGER,\n        });\n      }\n\n      if (key.algorithm.name === 'AES-CBC') {\n        const cbcIv = opArea.querySelector<HTMLInputElement>('.aes-cbc.encrypt .iv input')?.value;\n        const cbcIvRadix = opArea.querySelector<HTMLSelectElement>('.aes-cbc.encrypt .iv select')?.selectedOptions[0].value;\n\n        // Initialization Vector must be random and unique for every encryption operation\n        let iv: ArrayBuffer;\n        if (cbcIv) {\n          const radix = Number(cbcIvRadix);\n          iv = decode(cbcIv, radix);\n          if (iv.byteLength !== 16) throw new Error('IV length must be exactly 16 bytes.');\n        } else iv = crypto.getRandomValues(new Uint8Array(16)).buffer; // MUST be 16 bytes\n\n        algorithm.iv = iv;\n\n        results.push({\n          label: 'Initialization Vector (IV) \u2022 Needed to decrypt \u2022 Not Secret',\n          value: iv,\n          defaultEncoding: ENCODING.BASE64,\n        });\n      }\n\n      if (key.algorithm.name === 'AES-GCM') {\n        const gcmIv = opArea.querySelector<HTMLInputElement>('.aes-gcm.encrypt .iv input')?.value;\n        const gcmIvRadix = opArea.querySelector<HTMLSelectElement>('.aes-gcm.encrypt .iv select')?.selectedOptions[0].value;\n        const authenticatedDataTextArea = opArea.querySelector<HTMLTextAreaElement>('.aes-gcm.encrypt textarea');\n        const tagLength = opArea.querySelector<HTMLSelectElement>('.aes-gcm.encrypt .tag-length select')?.selectedOptions[0].value;\n\n        algorithm.tagLength = Number(tagLength) || 128; // 128 bits is implementation default\n\n        // Initialization Vector must be random and unique for every encryption operation\n        let iv: ArrayBuffer;\n        if (gcmIv) {\n          const radix = Number(gcmIvRadix);\n          iv = decode(gcmIv, radix);\n        } else iv = crypto.getRandomValues(new Uint8Array(12)).buffer; // NIST recommends 96 bits\n\n        algorithm.iv = iv;\n\n        results.unshift({\n          label: 'Initialization Vector (IV) \u2022 Needed to decrypt \u2022 Not Secret',\n          value: iv,\n          defaultEncoding: ENCODING.BASE64,\n        });\n\n        // Additional data can be authenticated and not encrypted\n        if (authenticatedDataTextArea?.value.length) {\n          const additionalData = (new TextEncoder()).encode(authenticatedDataTextArea?.value);\n          algorithm.additionalData = additionalData;\n          results.push({\n            label: 'Authenticated but Unencrypted Data \u2022 Needed to decrypt',\n            value: authenticatedDataTextArea.value,\n            defaultEncoding: ENCODING['UTF-8'],\n          });\n        }\n      }\n\n      const ciphertext = await window.crypto.subtle.encrypt(algorithm, key, data);\n      results.unshift({\n        label: `Ciphertext${suffix}`,\n        value: ciphertext,\n        defaultEncoding: ENCODING.BASE64,\n      });\n      break;\n    }\n    case 'sign': {\n      const key = isSymmetric ? cryptoKey : cryptoKey.privateKey;\n      const algorithm: any = { // TODO: typing this properly throw errors when adding params\n        name: key.algorithm.name,\n      };\n\n      if (key.algorithm.name === 'RSA-PSS') {\n        const saltLength = opArea.querySelector<HTMLInputElement>('.rsa-pss.sign input.salt-length')?.value;\n\n        let byteLength: number;\n        switch ((key.algorithm as any).hash.name) { // TODO: hash doesn't exist in type\n          case 'SHA-1': byteLength = 160 / 8; break;\n          case 'SHA-256': byteLength = 256 / 8; break;\n          case 'SHA-384': byteLength = 384 / 8; break;\n          case 'SHA-512': byteLength = 512 / 8; break;\n          default: byteLength = 0;\n        }\n        algorithm.saltLength = saltLength === '' ? byteLength : Number(saltLength);\n\n        results.push({\n          label: 'RSA-PSS Salt Length \u2022 Needed for signature verification',\n          value: String(algorithm.saltLength),\n          defaultEncoding: ENCODING.INTEGER,\n        });\n\n        // TODO: MDN reports the following as the ceiling for salt length.  However,\n        // the ceiling seems to actually be the SHA output size in bytes, at least in Safari.\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/RsaPssParams#saltlength\n        const keySizeInBits = (key.algorithm as any).modulusLength;\n        console.debug('Limit', Math.ceil((keySizeInBits - 1) / 8) - byteLength - 2);\n      }\n\n      if (key.algorithm.name === 'ECDSA') {\n        const hashAlgorithm = opArea.querySelector<HTMLSelectElement>('.ecdsa.sign select')?.selectedOptions[0].value;\n        algorithm.hash = hashAlgorithm;\n\n        results.push({\n          label: 'Hash Function \u2022 Needed for signature verification',\n          value: String(hashAlgorithm),\n          defaultEncoding: ENCODING['UTF-8'],\n        });\n      }\n\n      const sig = await window.crypto.subtle.sign(algorithm, key, data);\n      results.unshift({\n        label: `Signature${suffix}`,\n        value: sig,\n        defaultEncoding: ENCODING.BASE64,\n      });\n      break;\n    }\n    case 'decrypt': {\n      const key = isSymmetric ? cryptoKey : cryptoKey.privateKey;\n      const algorithm: any = { // TODO: typing this properly throw errors when adding params\n        name: key.algorithm.name,\n      };\n\n      if (key.algorithm.name === 'AES-CTR') {\n        const counterValue = opArea.querySelector<HTMLInputElement>('.aes-ctr.decrypt input.counter')?.value;\n        const counterRadix = opArea.querySelector<HTMLSelectElement>('.aes-ctr.decrypt select')?.selectedOptions[0].value;\n\n        // Counter must be exactly 16 bytes long, the AES block size.  Here we let the\n        // implementation handle throwing the error for a counter of wrong size.\n        //\n        // The length is the number of bits in the counter block used for the counter\n        // (as opposed to the nonce).  The total number of blocks in the message must be\n        // less than or equal to 2^n, where n is this counter length in bits.\n\n        let counter: ArrayBuffer;\n        if (counterValue) {\n          const radix = Number(counterRadix);\n          counter = decode(counterValue, radix);\n          if (counter.byteLength !== 16) throw new Error('Counter length must be exactly 16 bytes.');\n        } else throw new Error('AES-CTR requires the initial counter value in order to decrypt the ciphertext.');\n\n        algorithm.counter = counter;\n        algorithm.length = 64; // NIST recommends length half of the counter block size (bits)\n      }\n\n      if (key.algorithm.name === 'AES-CBC') {\n        const cbcIv = opArea.querySelector<HTMLInputElement>('.aes-cbc.decrypt .iv input')?.value;\n        const cbcIvRadix = opArea.querySelector<HTMLSelectElement>('.aes-cbc.decrypt .iv select')?.selectedOptions[0].value;\n\n        // Initialization Vector must be the same used for encryption\n        let iv: ArrayBuffer;\n        if (cbcIv) {\n          const radix = Number(cbcIvRadix);\n          iv = decode(cbcIv, radix);\n          if (iv.byteLength !== 16) throw new Error('IV length must be exactly 16 bytes.');\n        } else throw new Error('AES-CBC requires the Initialization Vector (IV) in order to decrypt the ciphertext.');\n\n        algorithm.iv = iv;\n      }\n\n      if (key.algorithm.name === 'AES-GCM') {\n        const gcmIv = opArea.querySelector<HTMLInputElement>('.aes-gcm.decrypt .iv input')?.value;\n        const gcmIvRadix = opArea.querySelector<HTMLSelectElement>('.aes-gcm.decrypt .iv select')?.selectedOptions[0].value;\n        const authenticatedDataTextArea = opArea.querySelector<HTMLTextAreaElement>('.aes-gcm.decrypt textarea');\n        const tagLength = opArea.querySelector<HTMLSelectElement>('.aes-gcm.decrypt .tag-length select')?.selectedOptions[0].value;\n\n        algorithm.tagLength = Number(tagLength) || 128; // 128 bits is implementation default\n\n        // Initialization Vector must be random and unique for every encryption operation\n        let iv: ArrayBuffer;\n        if (gcmIv) {\n          const radix = Number(gcmIvRadix);\n          iv = decode(gcmIv, radix);\n        } else throw new Error('AES-GCM requires the Initialization Vector (IV) in order to decrypt the ciphertext.');\n\n        algorithm.iv = iv;\n\n        // Additional data can be authenticated and not encrypted\n        if (authenticatedDataTextArea?.value.length) {\n          const additionalData = (new TextEncoder()).encode(authenticatedDataTextArea?.value);\n          algorithm.additionalData = additionalData;\n        }\n      }\n\n      const plaintext = await window.crypto.subtle.decrypt(algorithm, key, data);\n      results.unshift({\n        label: `Plaintext${suffix}`,\n        value: plaintext,\n        defaultEncoding: ENCODING['UTF-8'],\n      });\n      break;\n    }\n    default:\n      throw new Error(`Operation ${operation} is not implemented.`);\n  }\n\n  return results;\n};\n\n/**\n * Text input\n */\n\nconst button = opArea.querySelector<HTMLButtonElement>('button');\nbutton?.addEventListener('click', async () => {\n  load(0);\n\n  try {\n    const operation = opArea.querySelector<HTMLLIElement>('menu li.active')?.dataset.op;\n    if (!operation) throw new Error('An operation must be defined.');\n\n    const encoding = Number(opArea.querySelector<HTMLSelectElement>('.input .encoding select')?.selectedOptions[0].value);\n    const data = decode(textarea.value, encoding);\n\n    const results = await encrypt(operation, data);\n    showResults(results);\n  } catch (error) { handleError(error); }\n});\n\n/**\n * File Uploads\n */\n\nconst encryptFiles = (files?: FileList | null) => {\n  // TODO: Support multiple files.  This is tricky without some standard concatenation feature\n  // for encryption schemes that have specific, required decryption or verification values (i.e. IV)\n  if (!files || !files.length) return;\n  load(0);\n\n  try {\n    const operation = opArea.querySelector<HTMLLIElement>('menu li.active')?.dataset.op;\n    if (!operation) throw new Error('An operation must be defined.');\n\n    const list = Array.from(files);\n    const totalSize = list.reduce((size, file) => size + file.size, 0);\n    const currentSizes: number[] = [];\n    const results: Result[][] = [];\n\n    list.forEach((file, i) => {\n      const reader = new FileReader();\n\n      reader.onprogress = (event) => {\n        currentSizes[i] = event.loaded;\n        load((currentSizes.reduce((p, c) => p + c, 0) / totalSize) * 100);\n      };\n\n      reader.onload = async (event) => {\n        if (!event.target?.result || !(event.target.result instanceof ArrayBuffer)) {\n          handleError(new Error(`File [${file.name}] of type [${file.type}] failed to load.`));\n          return;\n        }\n\n        const label = `${file.name} \u2022 ${file.size.toLocaleString()} bytes \u2022 ${file.type || 'Unknown type'}`;\n\n        try {\n          results.push(await encrypt(operation, event.target.result, label));\n        } catch (error) { handleError(error); }\n\n        if (results.length === files.length) showResults(results.flat());\n      };\n\n      reader.readAsArrayBuffer(file);\n    });\n  } catch (error) { handleError(error); }\n};\n\nconst upload = opArea.querySelector<HTMLInputElement>('.upload input');\nupload?.addEventListener('change', () => encryptFiles(upload.files));\n\n/**\n * Drag-and-Drop File Uploads\n */\n\ntextarea.addEventListener('drop', (event) => {\n  encryptFiles(event.dataTransfer?.files);\n});\n", "/**\n * @file Contains functionality for bcrypt hashing and verification\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * Web Crypto API does not include bcrypt support; however, the bcrypt.js\n * library runs in the browser and uses Web Crypto API's PRNG for secure\n * random data to use in its salt generation function.  The JS implementation\n * of bcrypt is around 30% slower than native implementations, so the progress\n * bar really comes in handy here.\n */\n\nimport * as bcrypt from 'bcryptjs';\nimport { showResults } from '../../lib/result';\nimport load from '../../lib/loader';\nimport { handleError } from '../../lib/error';\n\n// Update bcrypt cost iterations count\nconst bcryptControl = document.querySelector<HTMLDivElement>('#hash-bcrypt .control.cost span:first-child')!;\nconst bcryptCost = document.querySelector<HTMLInputElement>('#hash-bcrypt input.cost')!;\n\nbcryptCost.addEventListener('change', () => {\n  const value = parseInt(bcryptCost.value, 10);\n  bcryptControl.textContent = `Cost \u2022 ${(2 ** value).toLocaleString()} iterations`;\n});\n\n// Bcrypt finish and progress functions\nconst bcryptComplete = (\n  button: HTMLButtonElement,\n  text: string | null,\n) => (error: Error | null, result: string | boolean) => {\n  // TODO: Determine whether we should return or throw here; execution continues\n  if (error) handleError(error);\n\n  if (typeof result === 'boolean') {\n    showResults([{ label: 'Bcrypt Verification Result', value: String(result) }]);\n  } else {\n    const sansHash = bcrypt.getSalt(result); // Like $2a$10$uTzw7mkyaPz.6Kb.H0d/sO\n    const salt = sansHash.replace(/^.+\\$/, '');\n    const hash = result.substring(sansHash.length);\n\n    showResults([\n      { label: 'Bcrypt String', value: result },\n      { label: 'Salt', value: salt },\n      { label: 'Hash', value: hash },\n    ]);\n  }\n\n  const btn = button;\n  btn.textContent = text;\n  btn.disabled = false;\n};\n\nconst bcryptProgress = (button: HTMLButtonElement) => (num: number) => {\n  load(num * 100);\n  const btn = button;\n  btn.textContent = `${String(num * 100).substring(0, 4)}%`;\n};\n\n// Generate bcrypt\nconst bcryptHashButton = document.querySelector<HTMLButtonElement>('#hash-bcrypt button');\nbcryptHashButton?.addEventListener('click', () => {\n  load(0);\n  bcryptHashButton.disabled = true;\n\n  try {\n    const cost = parseInt(bcryptCost.value, 10) || 10;\n    const password = document.querySelector<HTMLInputElement>('#hash-bcrypt .password input')!;\n\n    bcrypt.hash(\n      password.value,\n      cost,\n      bcryptComplete(bcryptHashButton, bcryptHashButton.textContent),\n      bcryptProgress(bcryptHashButton),\n    );\n  } catch (e) { handleError(e); }\n});\n\n// Verify bcrypt\nconst bcryptVerifyButton = document.querySelector<HTMLButtonElement>('#verify-bcrypt button');\nbcryptVerifyButton?.addEventListener('click', async () => {\n  load(0);\n  bcryptVerifyButton.disabled = true;\n\n  const password = document.querySelector<HTMLInputElement>('#verify-bcrypt .password input')!;\n  const hash = document.querySelector<HTMLInputElement>('#verify-bcrypt .hash input')!;\n\n  try {\n    bcrypt.compare(\n      password.value,\n      hash.value,\n      bcryptComplete(bcryptVerifyButton, bcryptVerifyButton.textContent),\n      bcryptProgress(bcryptVerifyButton),\n    );\n  } catch (e) { handleError(e); }\n});\n", "/**\n * @file Contains functionality for PBKDF2 hashing and verification\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * Web Crypto API includes native support for the Password-Based Key\n * Derivation Function 2 (PBKDF2).\n */\n\nimport { showResults } from '../../lib/result';\nimport { ENCODING, decode, encode } from '../../lib/encode';\nimport load from '../../lib/loader';\nimport { handleError } from '../../lib/error';\n\nconst hashSettings = document.querySelector<HTMLElement>('#hash-PBKDF2')!;\nconst prfSelect = hashSettings.querySelector<HTMLSelectElement>('.prf-select')!;\nconst lengthInput = hashSettings.querySelector<HTMLInputElement>('input.derivation-length')!;\nconst iterationsInput = hashSettings.querySelector<HTMLInputElement>('input.iterations')!;\nconst saltEncoding = hashSettings.querySelector<HTMLSelectElement>('select.input-encoding')!;\nconst saltInput = hashSettings.querySelector<HTMLInputElement>('input.salt')!;\nconst passwordInput = hashSettings.querySelector<HTMLInputElement>('.password input')!;\nconst button = hashSettings.querySelector<HTMLButtonElement>('button');\n\n// Update Output Length\nlengthInput?.addEventListener('change', () => {\n  const ol = document.querySelector('#passwords menu .output-length span');\n  if (ol) ol.textContent = `${parseInt(lengthInput.value, 10) * 8} bits`;\n});\n\n// Update Block Size\nprfSelect?.addEventListener('change', () => {\n  const bs = document.querySelector('#passwords menu .block-size span');\n  if (bs) bs.textContent = String(prfSelect.selectedOptions[0].dataset.bs);\n});\n\n// Hash password\nbutton?.addEventListener('click', async () => {\n  load(0);\n  button.disabled = true;\n\n  try {\n    const password = (new TextEncoder()).encode(passwordInput.value);\n    const key = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveBits']);\n\n    let salt: ArrayBuffer;\n    if (saltInput.value) {\n      const radix = Number(saltEncoding.selectedOptions[0].value);\n      salt = decode(saltInput.value, radix);\n    } else salt = crypto.getRandomValues(new Uint8Array(16)).buffer; // 128 bits recommended by NIST\n\n    const hash = prfSelect.selectedOptions[0].dataset.alg;\n    const iterations = Number(iterationsInput.value.length ? iterationsInput.value : 100000);\n    const algorithm = {\n      name: 'PBKDF2',\n      salt,\n      hash,\n      iterations,\n    };\n\n    const length = Number(lengthInput.value.length ? lengthInput.value : 32) * 8;\n    if (length < 0) throw new Error('Byte length must be positive');\n    const derivation = await crypto.subtle.deriveBits(algorithm, key, length);\n\n    // PHC String Format requires that the = symbol only be used in the parameter map.  The hash\n    // MUST be in B64 format, which is Base64 without the padding.  Here we choose to represent\n    // the salt in the same format, as well.\n    const toB64 = (base64: string) => base64.replace(/=/g, '');\n    const b64Salt = toB64(encode(salt, ENCODING.BASE64));\n    const b64Hash = toB64(encode(derivation, ENCODING.BASE64));\n    const hashString = `$pbkdf2$prf=hmac-${hash!.toLowerCase()},c=${iterations},dklen=${length}$${b64Salt}$${b64Hash}`;\n\n    showResults([\n      { label: 'PBKDF2 String in PHC String Format (recommended by author)', value: hashString },\n      { label: 'Hash', value: derivation, defaultEncoding: ENCODING.BASE64 },\n      { label: 'Salt', value: salt, defaultEncoding: ENCODING.BASE64 },\n    ]);\n  } catch (e) { handleError(e); }\n\n  button.disabled = false;\n});\n", "/**\n * @file Contains functionality for the Secure Remote Password (SRP) Protocol\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * The Secure Remote Password (SRP) Protocol is a Password-Authenticated Key\n * Exchange (PAKE) protocol, and enables a user and a server to authenticate\n * themselves to each other without the user ever transmitting their password\n * to the server.  Instead, the server stores a salt and verifier, and a proof\n * process occurs in both directions.\n */\n\nimport {\n  createVerifierAndSalt, SRPClientSession, SRPParameters, SRPRoutines, SRPServerSession,\n} from 'tssrp6a';\nimport { Result, showResults } from '../../lib/result';\nimport { handleError } from '../../lib/error';\nimport { ENCODING } from '../../lib/encode';\n\ntype SRPSettings = {\n  strict: boolean,\n  primeGroup: number,\n  hashAlgorithm: string,\n};\n\ntype Routines = { routines: SRPRoutines };\n\ntype SRPIdentity = {\n  username: string,\n  password: string,\n};\n\ntype SRPClientOutputs = {\n  salt: bigint,\n  verifier: bigint,\n};\n\ntype SRPProofParameters = {\n  salt: bigint,\n  serverPublicKey: bigint,\n};\n\ntype RegisterParameters = Routines & SRPIdentity;\ntype AuthenticateParameters = RegisterParameters & SRPClientOutputs;\ntype ProveClientParameters = RegisterParameters & SRPProofParameters;\n\n// Strictly enfore 6a by including the identity in the verifier\nclass SRP6aRoutines extends SRPRoutines {\n  public computeIdentityHash(I: string, P: string): Promise<ArrayBuffer> {\n    return this.hash((new TextEncoder()).encode(`${I}:${P}`).buffer);\n  }\n}\n\n// Get SRP parameters\nconst getSRPRoutines = ({ strict, primeGroup, hashAlgorithm }: SRPSettings) => {\n  const group = SRPParameters.PrimeGroup[primeGroup];\n  const hash = SRPParameters.H[hashAlgorithm];\n  const params = new SRPParameters(group, hash);\n\n  return strict ? new SRP6aRoutines(params) : new SRPRoutines(params);\n};\n\n// Produce a salt and verifier to send to server during account registration\nconst register = async ({ routines, username, password }: RegisterParameters) => {\n  const { s: salt, v: verifier } = await createVerifierAndSalt(\n    routines,\n    username,\n    password,\n  );\n  return { salt, verifier };\n};\n\n// Perform only the client proof generation step\nconst proveClient = async (settings: ProveClientParameters) => {\n  const {\n    routines,\n    username, password,\n    salt, serverPublicKey,\n  } = settings;\n\n  const client = new SRPClientSession(routines);\n\n  const clientStep1 = await client.step1(username, password);\n  // Client sends server username; server gets salt and verifier from user record\n  // Server produces private key b and public key B, though B is provided here\n  // Server sends client the salt and its public key B\n  // Client produces public key A and proof M1\n  const clientStep2 = await clientStep1.step2(salt, serverPublicKey);\n  // Client sends public key A and proof M1 to server\n\n  const { A, M1 } = clientStep2;\n  return { A, M1 };\n};\n\n// Produce client and server authentication process\nconst authenticate = async (settings: AuthenticateParameters) => {\n  const {\n    routines,\n    username, password,\n    salt, verifier,\n  } = settings;\n\n  const client = new SRPClientSession(routines);\n  const server = new SRPServerSession(routines);\n\n  const clientStep1 = await client.step1(username, password);\n  // Client sends server username; server gets salt and verifier from user record\n  // Server produces private key b and public key B\n  const serverStep1 = await server.step1(username, salt, verifier);\n  // Server sends client the salt and its public key B\n  // Client produces public key A and proof M1\n  const clientStep2 = await clientStep1.step2(salt, serverStep1.B);\n  // Client sends public key A and proof M1 to server\n  // Server produces proof M2, authenticating user\n  const serverStep2 = await serverStep1.step2(clientStep2.A, clientStep2.M1);\n  // Server sends proof M2 to client\n  // Client authenticates server\n  await clientStep2.step3(serverStep2);\n\n  const { B } = serverStep1;\n  const { A, M1 } = clientStep2;\n  const M2 = serverStep2;\n  return {\n    B, A, M1, M2,\n  };\n};\n\nconst registerSection = document.querySelector<HTMLElement>('#register-SRP')!;\nconst registerButton = registerSection.querySelector<HTMLButtonElement>('button')!;\nconst authenticateSection = document.querySelector<HTMLElement>('#authenticate-SRP')!;\nconst authenticateButton = authenticateSection.querySelector<HTMLButtonElement>('button')!;\nconst proveIdentitySection = document.querySelector<HTMLElement>('#prove-identity-SRP')!;\nconst proveIdentityButton = proveIdentitySection.querySelector<HTMLButtonElement>('button')!;\n\nregisterButton.addEventListener('click', async () => {\n  const strict = registerSection.querySelector<HTMLInputElement>('input.strict')!.checked;\n  const primeGroup = Number(registerSection.querySelector<HTMLSelectElement>('select.prime-group')!.selectedOptions[0].value);\n  const hashAlgorithm = String(registerSection.querySelector<HTMLSelectElement>('select.hash-algorithm')!.selectedOptions[0].dataset.alg);\n  const username = registerSection.querySelector<HTMLInputElement>('input.identity')?.value || '';\n  const password = registerSection.querySelector<HTMLInputElement>('input[type=\"password\"]')?.value || '';\n\n  try {\n    const routines = getSRPRoutines({ strict, primeGroup, hashAlgorithm });\n    const { salt, verifier } = await register({ routines, username, password });\n\n    showResults([\n      { label: 'Salt \u2022 Store in user record', value: salt.toString(), defaultEncoding: ENCODING.BIGINT },\n      { label: 'Verifier \u2022 Store in user record', value: verifier.toString(), defaultEncoding: ENCODING.BIGINT },\n      { label: 'Prime', value: SRPParameters.PrimeGroup[primeGroup].N.toString(), defaultEncoding: ENCODING.BIGINT },\n    ]);\n  } catch (e) { handleError(e); }\n});\n\nauthenticateButton.addEventListener('click', async () => {\n  const strict = authenticateSection.querySelector<HTMLInputElement>('input.strict')!.checked;\n  const primeGroup = Number(authenticateSection.querySelector<HTMLSelectElement>('select.prime-group')!.selectedOptions[0].value);\n  const hashAlgorithm = String(authenticateSection.querySelector<HTMLSelectElement>('select.hash-algorithm')!.selectedOptions[0].dataset.alg);\n  const username = authenticateSection.querySelector<HTMLInputElement>('input.identity')?.value || '';\n  const password = authenticateSection.querySelector<HTMLInputElement>('input[type=\"password\"]')?.value || '';\n\n  try {\n    const salt = BigInt(authenticateSection.querySelector<HTMLTextAreaElement>('.salt textarea')?.value || '');\n    const verifier = BigInt(authenticateSection.querySelector<HTMLTextAreaElement>('.verifier textarea')?.value || '');\n    const routines = getSRPRoutines({ strict, primeGroup, hashAlgorithm });\n    const results: Result[] = [];\n\n    const {\n      B, A, M1, M2,\n    } = await authenticate({\n      routines, username, password, salt, verifier,\n    });\n\n    results.push({ label: 'Client Public Key A', value: A.toString(), defaultEncoding: ENCODING.BIGINT });\n    results.push({ label: 'Client Proof M1', value: M1.toString(), defaultEncoding: ENCODING.BIGINT });\n    results.push({ label: 'Server Public Key B', value: B.toString(), defaultEncoding: ENCODING.BIGINT });\n    results.push({ label: 'Server Proof M2', value: M2.toString(), defaultEncoding: ENCODING.BIGINT });\n\n    showResults(results);\n  } catch (e) { handleError(e); }\n});\n\nproveIdentityButton.addEventListener('click', async () => {\n  const strict = proveIdentitySection.querySelector<HTMLInputElement>('input.strict')!.checked;\n  const primeGroup = Number(proveIdentitySection.querySelector<HTMLSelectElement>('select.prime-group')!.selectedOptions[0].value);\n  const hashAlgorithm = String(proveIdentitySection.querySelector<HTMLSelectElement>('select.hash-algorithm')!.selectedOptions[0].dataset.alg);\n  const username = proveIdentitySection.querySelector<HTMLInputElement>('input.identity')?.value || '';\n  const password = proveIdentitySection.querySelector<HTMLInputElement>('input[type=\"password\"]')?.value || '';\n  const publicKey = proveIdentitySection.querySelector<HTMLTextAreaElement>('.public-key textarea')?.value || '';\n\n  try {\n    const salt = BigInt(proveIdentitySection.querySelector<HTMLTextAreaElement>('.salt textarea')?.value || '');\n    const routines = getSRPRoutines({ strict, primeGroup, hashAlgorithm });\n    const results: Result[] = [];\n\n    // If the user defines the server public key B, then we cannot emulate\n    // server-side functions.  So, we can only do the client proof.\n    const serverPublicKey = BigInt(publicKey);\n    const { A, M1 } = await proveClient({\n      routines, username, password, salt, serverPublicKey,\n    });\n\n    results.push({ label: 'Client Public Key A', value: A.toString(), defaultEncoding: ENCODING.BIGINT });\n    results.push({ label: 'Client Proof M1', value: M1.toString(), defaultEncoding: ENCODING.BIGINT });\n\n    showResults(results);\n  } catch (e) { handleError(e); }\n});\n", "/**\n * @file Contains functionality for hashing and verification of passwords\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * Due to their pervasive and high-value nature, passwords require special\n * application of digest functions to reduce abuse.  In particular, they\n * benefit from salting to mitigate rainbow attacks, and key stretching to\n * drastically increase the energy required to brute force them.\n */\n\nimport { hideResults } from '../../lib/result';\nimport './bcrypt';\nimport './pbkdf2';\nimport './srp';\n\nconst algorithm = document.querySelector<HTMLSelectElement>('#passwords menu .algorithm select')!;\nconst operation = document.querySelector<HTMLSelectElement>('#passwords .operation')!;\n\nconst updateView = () => {\n  const op = operation.selectedOptions[0].value;\n  const hash = algorithm.selectedOptions[0].dataset.alg;\n  const target = document.querySelector(`#passwords #${op}-${hash}`);\n\n  const settings = document.querySelectorAll('#passwords .subsection > .settings');\n  settings.forEach((setting) => setting.classList.remove('active'));\n  target?.classList.add('active');\n};\n\nconst updateStats = () => {\n  const menu = document.querySelector('#passwords menu')!;\n  const blockSize = menu.querySelector('.block-size span')!;\n  const method = menu.querySelector('.method span')!;\n  const specification = menu.querySelector('.specification span')!;\n\n  // Update statistics\n  const selected = algorithm.selectedOptions[0].dataset;\n  blockSize.textContent = selected.bs || '';\n  method.textContent = selected.method || '';\n  specification.textContent = selected.spec || '';\n\n  // Update operation list\n  operation.textContent = '';\n  selected.operations?.split(' ').forEach((op, i) => {\n    const option = document.createElement('option');\n    if (i === 0) option.selected = true;\n    option.value = op;\n    option.textContent = `${op[0].toUpperCase()}${op.substring(1).replace('-', ' ')}`;\n    operation.appendChild(option);\n  });\n\n  hideResults();\n  updateView();\n};\n\nalgorithm.addEventListener('change', updateStats);\noperation.addEventListener('change', updateView);\n", "/**\n * @file Disables form submissions\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nconst submit = (event: Event) => {\n  event.preventDefault();\n  if (!(event.target as HTMLFormElement).checkValidity()) event.stopImmediatePropagation();\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.querySelectorAll('form')?.forEach((form) => form.addEventListener('submit', submit));\n});\n", "/**\n * @file Handles functionality for \"Operation Areas\"\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * Operation Areas are used in sections like Digest and Encryption,\n * and consume content and produce statistics to aid the user in\n * cryptographic operations.\n */\n\nimport { guessEncoding } from './encode';\n\nconst opAreas = document.querySelectorAll<HTMLElement>('.operation-area');\n\n/**\n * Guess encoding of textarea content\n */\nconst checkTextareaEncoding = (textarea: HTMLTextAreaElement) => () => {\n  const encodingSelect = textarea.parentElement!.parentElement!.querySelector('.encoding select');\n  const encoding = guessEncoding(textarea.value);\n\n  if (encoding) { // UNKNOWN is radix 0, a falsey value\n    encodingSelect?.childNodes.forEach((op) => {\n      const option = op as HTMLOptionElement;\n      if (Number(option.value) === encoding) option.selected = true;\n    });\n  }\n};\n\n/**\n * Guess encoding of input-encoding fields, used by any control that should\n * accept an input of arbitrary encoding, such as digest verification,\n * encryption IVs and counters, or salt values.\n */\nconst checkInputEncoding = (encodingSelect: HTMLSelectElement, input: HTMLInputElement) => () => {\n  const encoding = guessEncoding(input.value);\n\n  if (encoding) { // UNKNOWN is radix 0, a falsey value\n    encodingSelect.childNodes.forEach((op) => {\n      const option = op as HTMLOptionElement;\n      if (Number(option.value) === encoding) option.selected = true;\n    });\n  }\n};\n\nopAreas.forEach((opArea) => {\n  const textareas = opArea.querySelectorAll<HTMLTextAreaElement>('textarea');\n  const selects = opArea.querySelectorAll<HTMLSelectElement>('select.input-encoding');\n\n  // If user is typing, it's probably plain text, so let's just check onpaste\n  // We use setTimeout to allow the paste to complete before evaluating the whole textarea contents\n  textareas.forEach((textarea) => textarea.addEventListener('paste', () => setTimeout(checkTextareaEncoding(textarea), 0)));\n  selects.forEach((select) => {\n    const input = select.parentElement!.querySelector('input');\n    input?.addEventListener('paste', () => setTimeout(checkInputEncoding(select, input), 0));\n  });\n});\n\n/**\n * Drag and Drop operations for textareas\n */\n\nconst preventDefault = (event: Event) => {\n  event.stopPropagation();\n  event.preventDefault();\n};\n\nconst classState = (element: HTMLElement, add: boolean) => () => {\n  if (add) element.classList.add('dragover');\n  else element.classList.remove('dragover');\n};\n\nopAreas.forEach((opArea) => {\n  const textareas = opArea.querySelectorAll<HTMLTextAreaElement>('.input > textarea');\n\n  textareas.forEach((textarea) => {\n    // Drag-and-drop\n    textarea?.addEventListener('dragenter', preventDefault);\n    textarea?.addEventListener('dragenter', classState(textarea, true));\n    textarea?.addEventListener('dragover', preventDefault);\n    textarea?.addEventListener('dragover', classState(textarea, true));\n    textarea?.addEventListener('dragleave', classState(textarea, false));\n    textarea?.addEventListener('dragend', classState(textarea, false));\n    textarea?.addEventListener('drop', preventDefault);\n    textarea?.addEventListener('drop', classState(textarea, false));\n\n    // Character Count\n    textarea?.addEventListener('input', () => {\n      const characterCount = textarea.parentElement!.parentElement!.querySelector('.character-count')!;\n      const count = textarea.value.length;\n      if (count === 1) characterCount.textContent = '1 character';\n      else characterCount.textContent = `${count} characters`;\n    });\n  });\n});\n\n/**\n * Prevent drops outside of textareas\n */\n\nconst disallowDrop = (event: DragEvent) => {\n  const e = event;\n  const target = e.target as HTMLElement;\n  if (target?.nodeName !== 'TEXTAREA' && e.dataTransfer) {\n    e.preventDefault();\n    e.dataTransfer.effectAllowed = 'none';\n    e.dataTransfer.dropEffect = 'none';\n  }\n};\n\nwindow.addEventListener('dragover', disallowDrop);\nwindow.addEventListener('dragenter', disallowDrop);\nwindow.addEventListener('drop', disallowDrop);\n", "/**\n * @file Handles tab logic\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport { hideResults } from './result';\n\nconst tabsElements = document.querySelectorAll('.tabs');\n\ntabsElements.forEach((tabsElement) => {\n  const tabs = Array.from(tabsElement.children) as HTMLElement[];\n  const parent = tabsElement.parentElement!;\n  const sections = parent.querySelectorAll(':scope > section.settings');\n\n  tabs.forEach((tab) => {\n    if (tab.classList.contains('datum')) return; // don't interact with stats\n\n    tab.addEventListener('click', () => {\n      tabs.forEach((t) => t.classList.remove('active'));\n      sections?.forEach((s) => s.classList.remove('active'));\n\n      tab.classList.add('active');\n      parent.querySelector(`.settings.${tab.dataset.target}`)?.classList.add('active');\n\n      hideResults();\n    });\n  });\n});\n"],
  "mappings": "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WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,UAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,QAAY,UAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,SAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,UAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,SAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,SAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,UAAY,UAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,UAAY,UAChD,WAAY,WAAY,WAAY,WAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,UAAY,UAAY,UAChD,WAAY,UAAY,WAAY,UAAY,WAChD,WAAY,SAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,UAAY,UAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,SAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,UAAY,WAAY,WAAY,UAChD,WAAY,SAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,UAAY,UAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,UAChD,UAAY,WAAY,UAAY,UAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,UAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,SAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,UAChD,UAAY,WAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,SAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,UAAY,UAChD,SAAY,WAAY,WAAY,WAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,UAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,QAChD,UAAY,UAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,UAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,UAAY,SAAY,WAChD,SAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,SAAY,SAAY,WAAY,WAChD,WAAY,WAAY,UAAY,UAAY,WAChD,UAAY,WAAY,WAAY,SAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,UAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,SAAY,UAAY,WAChD,UAAY,WAAY,WAAY,UAAY,SAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,U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",
  "names": ["require_bcrypt", "__commonJSMin", "exports", "module", "global", "factory", "__require", "bcrypt", "randomFallback", "random", "len", "a", "randomAvailable", "rounds", "seed_length", "GENSALT_DEFAULT_LOG2_ROUNDS", "salt", "base64_encode", "BCRYPT_SALT_LEN", "callback", "_async", "nextTick", "err", "resolve", "reject", "res", "s", "_hash", "progressCallback", "safeStringCompare", "known", "unknown", "right", "wrong", "i", "k", "hash", "comp", "stringToBytes", "str", "out", "utfx", "b", "BASE64_CODE", "BASE64_INDEX", "stringFromCharCode", "off", "rs", "c1", "c2", "base64_decode", "slen", "olen", "c3", "c4", "o", "code", "src", "dst", "cp", "c", "d", "fail", "l", "n", "BLOWFISH_NUM_ROUNDS", "MAX_EXECUTION_TIME", "P_ORIG", "S_ORIG", "C_ORIG", "_encipher", "lr", "P", "S", "r", "_streamtoword", "data", "offp", "word", "_key", "key", "offset", "plen", "sw", "_ekskey", "_crypt", "cdata", "clen", "j", "next", "start", "ret", "minor", "r1", "r2", "real_salt", "passwordb", "saltb", "finish", "bytes", "webcrypto", "digestFunctionToHashFunction", "algorithm", "data", "exports", "nodeCrypto", "nodeCreateHashToHashFunction", "e", "crossEnvCrypto_1", "SRPParameters", "_SRPParameters", "primeGroup", "H", "exports", "crossEnvCrypto_1", "ZERO", "ONE", "TWO", "bigIntToArrayBuffer", "n", "hex", "arrayBuffer", "u8", "offset", "i", "exports", "arrayBufferToBigInt", "stringToArrayBuffer", "str", "padStartArrayBuffer", "targetLength", "tmp", "hash", "parameters", "arrays", "length", "p", "c", "target", "hashPadded", "targetLen", "arraysPadded", "generateRandomString", "characterCount", "generateRandomBigInt", "numBytes", "generateRandom", "createVerifier", "routines", "I", "s", "P", "x", "createVerifierAndSalt", "sBytes", "hashBitCount", "__awaiter", "modPow", "pow", "mod", "result", "utils_1", "SRPRoutines", "parameters", "as", "targetLength", "numBytes", "HBits", "saltBytes", "I", "s", "P", "identityHash", "_", "x", "numBits", "bi", "a", "value", "A", "B", "_I", "_s", "S", "M1", "k", "u", "N", "exp", "tmp", "exports", "SRPClientSession", "routines", "userId", "userPassword", "IH", "SRPClientSessionStep1", "exports", "_SRPClientSessionStep1", "I", "salt", "B", "x", "a", "A", "k", "u", "S", "M1", "SRPClientSessionStep2", "state", "_SRPClientSessionStep2", "M2", "utils_1", "SRPServerSession", "routines", "identifier", "salt", "verifier", "b", "k", "B", "computeServerPublicValue", "SRPServerSessionStep1", "exports", "_SRPServerSessionStep1", "A", "u", "computeServerSessionKey", "M1", "S", "state", "parameters", "v", "N", "parameters_1", "exports", "routines_1", "session_client_1", "session_server_1", "utils_1", "loader", "load", "pct", "loader_default", "errorElement", "content", "handleError", "error", "err", "loader_default", "clearError", "bcrypt", "ENCODING", "encode", "rawData", "radix", "array", "str", "byte", "padding", "decode", "encodedData", "i", "arr", "int", "bytes", "data", "separator", "length", "guessEncoding", "CHEVRON_SVG", "CODE_SVG", "COPY_SVG", "DISK_SVG", "DONE_SVG", "DOUBLE_CHEVRON_SVG", "DOWNLOAD_BINARY_SVG", "DOWNLOAD_SVG", "KEY_SVG", "KEYS_SVG", "RULER_SVG", "TEXT_SVG", "TRASH_SVG", "resultElement", "downloadEvent", "data", "array", "extension", "blob", "uri", "buildResultElement", "label", "value", "encoding", "bitLength", "rawData", "container", "h2", "content", "stats", "statsItems", "TEXT_SVG", "RULER_SVG", "actionItems", "DOWNLOAD_SVG", "COPY_SVG", "DOWNLOAD_BINARY_SVG", "formLabel", "fieldLabel", "CODE_SVG", "select", "radix", "newValue", "encode", "result", "e", "handleError", "ENCODING", "labelContent", "option", "chevron", "CHEVRON_SVG", "icon", "tooltip", "statValue", "stat", "span", "actions", "tooltipAfter", "callback", "a", "event", "DONE_SVG", "showResults", "results", "DOUBLE_CHEVRON_SVG", "clearError", "defaultEncoding", "byteLength", "guessEncoding", "decode", "loader_default", "hideResults", "menuItems", "sections", "item", "i", "hideResults", "digestSection", "digestSelect", "textarea", "details", "button", "digestMessage", "message", "algorithm", "encoding", "data", "decode", "loader_default", "text", "digest", "value", "comparedDigest", "showResults", "encode", "e", "handleError", "menu", "blockSize", "method", "specification", "selected", "hideResults", "digestFiles", "files", "checksums", "results", "sums", "line", "checksum", "filename", "file", "label", "readFiles", "list", "totalSize", "size", "currentSizes", "digests", "i", "reader", "event", "p", "c", "checksumExistsError", "upload", "randomElement", "menuItems", "sections", "item", "i", "hideResults", "prngGenerateButton", "loader_default", "prngByteLength", "prngOutput", "showResults", "bytes", "array", "blob", "uri", "a", "e", "handleError", "removeModal", "background", "event", "showModal", "iconSvg", "title", "prompt", "confirmationText", "callback", "modal", "container", "icon", "content", "titleElement", "p", "actions", "cancel", "confirm", "modal_default", "DATABASE_NAME", "KEY_STORE_NAME", "db", "openDatabase", "resolve", "reject", "request", "DATABASE_NAME", "KEY_STORE_NAME", "event", "storeKey", "keyName", "key", "deleteKey", "getKeys", "encryptionSection", "opArea", "tabs", "li", "updateLowerArea", "op", "alg", "textarea", "signature", "button", "placeholder", "elem", "updateOpArea", "keyName", "cryptoKey", "operation", "isSymmetric", "friendlyName", "key", "usages", "whichKey", "tab", "usage", "keyNameElement", "KEY_SVG", "span", "getKey", "operationArea_default", "keys", "updateKeyList", "hideResults", "list", "array", "li", "k", "v", "key", "operationArea_default", "container", "icon", "meta", "name", "disk", "DISK_SVG", "isSymmetric", "attributes", "type", "alg", "usages", "KEY_SVG", "KEYS_SVG", "actions", "a", "TRASH_SVG", "event", "modal_default", "removeKey", "showKeys", "addKey", "save", "storeKey", "loader_default", "getKey", "deleteKey", "handleError", "openDatabase", "getKeys", "e", "generateElement", "purposeElement", "updateStats", "algorithmSelect", "currentAglorithm", "type", "method", "spec", "confidentiality", "integrity", "section", "target", "alg", "intToArray", "num", "n", "bytes", "button", "loader_default", "name", "params", "keyUsage", "modulusLength", "exponent", "hash", "curve", "length", "key", "persist", "addKey", "e", "handleError", "event", "encryptionSection", "opArea", "textarea", "encrypt", "operation", "data", "labelSuffix", "results", "suffix", "cryptoKey", "getKey", "isSymmetric", "signatureTextarea", "signatureEncoding", "signature", "decode", "key", "algorithm", "saltLength", "hashAlgorithm", "verification", "counterValue", "counterRadix", "counter", "radix", "cbcIv", "cbcIvRadix", "iv", "gcmIv", "gcmIvRadix", "authenticatedDataTextArea", "tagLength", "additionalData", "ciphertext", "byteLength", "keySizeInBits", "sig", "plaintext", "button", "loader_default", "encoding", "showResults", "error", "handleError", "encryptFiles", "files", "list", "totalSize", "size", "file", "currentSizes", "i", "reader", "event", "p", "c", "label", "upload", "bcrypt", "bcryptControl", "bcryptCost", "value", "bcryptComplete", "button", "text", "error", "result", "handleError", "showResults", "sansHash", "salt", "hash", "btn", "bcryptProgress", "num", "loader_default", "bcryptHashButton", "cost", "password", "e", "bcryptVerifyButton", "hashSettings", "prfSelect", "lengthInput", "iterationsInput", "saltEncoding", "saltInput", "passwordInput", "button", "ol", "bs", "loader_default", "password", "key", "salt", "radix", "decode", "hash", "iterations", "algorithm", "length", "derivation", "toB64", "base64", "b64Salt", "encode", "b64Hash", "hashString", "showResults", "e", "handleError", "import_tssrp6a", "SRP6aRoutines", "I", "P", "getSRPRoutines", "strict", "primeGroup", "hashAlgorithm", "group", "hash", "params", "register", "routines", "username", "password", "salt", "verifier", "proveClient", "settings", "serverPublicKey", "clientStep2", "A", "M1", "authenticate", "client", "server", "clientStep1", "serverStep1", "serverStep2", "B", "registerSection", "registerButton", "authenticateSection", "authenticateButton", "proveIdentitySection", "proveIdentityButton", "showResults", "e", "handleError", "results", "M2", "publicKey", "algorithm", "operation", "updateView", "op", "hash", "target", "setting", "updateStats", "menu", "blockSize", "method", "specification", "selected", "i", "option", "hideResults", "submit", "event", "form", "opAreas", "checkTextareaEncoding", "textarea", "encodingSelect", "encoding", "guessEncoding", "op", "option", "checkInputEncoding", "input", "opArea", "textareas", "selects", "select", "preventDefault", "event", "classState", "element", "add", "characterCount", "count", "disallowDrop", "tabsElements", "tabsElement", "tabs", "parent", "sections", "tab", "t", "s", "hideResults"]
}
