{
  "version": 3,
  "sources": ["../../src/node_modules/bcryptjs/dist/bcrypt.js", "../../src/node_modules/pvtsutils/build/index.js", "../../src/node_modules/tssrp6a/src/crossEnvCrypto.ts", "../../src/node_modules/tssrp6a/src/parameters.ts", "../../src/node_modules/tssrp6a/src/utils.ts", "../../src/node_modules/tssrp6a/src/routines.ts", "../../src/node_modules/tssrp6a/src/session-client.ts", "../../src/node_modules/tssrp6a/src/session-server.ts", "../../src/node_modules/tssrp6a/src/index.ts", "../../src/lib/featureCheck.ts", "../../src/lib/loader.ts", "../../src/lib/error.ts", "../../src/lib/encode.ts", "../../src/lib/svg.ts", "../../src/lib/result.ts", "../../src/components/mainMenu.ts", "../../src/components/digest.ts", "../../src/components/prng.ts", "../../src/lib/modal.ts", "../../src/components/encryption/database.ts", "../../src/components/encryption/operationArea.ts", "../../src/components/encryption/keys.ts", "../../src/components/encryption/encrypt.ts", "../../src/components/encryption/generate.ts", "../../src/node_modules/asn1js/build/index.es.js", "../../src/node_modules/pvutils/build/utils.es.js", "../../src/components/encryption/import.ts", "../../src/components/passwords/bcrypt.ts", "../../src/components/passwords/pbkdf2.ts", "../../src/components/passwords/srp.ts", "../../src/components/passwords/index.ts", "../../src/lib/form.ts", "../../src/lib/operationAreas.ts", "../../src/lib/tabs.ts"],
  "sourcesContent": ["/*\r\n Copyright (c) 2012 Nevins Bartolomeo <nevins.bartolomeo@gmail.com>\r\n Copyright (c) 2012 Shane Girish <shaneGirish@gmail.com>\r\n Copyright (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Redistribution and use in source and binary forms, with or without\r\n modification, are permitted provided that the following conditions\r\n are met:\r\n 1. Redistributions of source code must retain the above copyright\r\n notice, this list of conditions and the following disclaimer.\r\n 2. Redistributions in binary form must reproduce the above copyright\r\n notice, this list of conditions and the following disclaimer in the\r\n documentation and/or other materials provided with the distribution.\r\n 3. The name of the author may not be used to endorse or promote products\r\n derived from this software without specific prior written permission.\r\n\r\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\r\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @license bcrypt.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bcrypt.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"bcrypt\"] = factory();\r\n\r\n}(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * bcrypt namespace.\r\n     * @type {Object.<string,*>}\r\n     */\r\n    var bcrypt = {};\r\n\r\n    /**\r\n     * The random implementation to use as a fallback.\r\n     * @type {?function(number):!Array.<number>}\r\n     * @inner\r\n     */\r\n    var randomFallback = null;\r\n\r\n    /**\r\n     * Generates cryptographically secure random bytes.\r\n     * @function\r\n     * @param {number} len Bytes length\r\n     * @returns {!Array.<number>} Random bytes\r\n     * @throws {Error} If no random implementation is available\r\n     * @inner\r\n     */\r\n    function random(len) {\r\n        /* node */ if (typeof module !== 'undefined' && module && module['exports'])\r\n            try {\r\n                return require(\"crypto\")['randomBytes'](len);\r\n            } catch (e) {}\r\n        /* WCA */ try {\r\n            var a; (self['crypto']||self['msCrypto'])['getRandomValues'](a = new Uint32Array(len));\r\n            return Array.prototype.slice.call(a);\r\n        } catch (e) {}\r\n        /* fallback */ if (!randomFallback)\r\n            throw Error(\"Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative\");\r\n        return randomFallback(len);\r\n    }\r\n\r\n    // Test if any secure randomness source is available\r\n    var randomAvailable = false;\r\n    try {\r\n        random(1);\r\n        randomAvailable = true;\r\n    } catch (e) {}\r\n\r\n    // Default fallback, if any\r\n    randomFallback = null;\r\n    /**\r\n     * Sets the pseudo random number generator to use as a fallback if neither node's `crypto` module nor the Web Crypto\r\n     *  API is available. Please note: It is highly important that the PRNG used is cryptographically secure and that it\r\n     *  is seeded properly!\r\n     * @param {?function(number):!Array.<number>} random Function taking the number of bytes to generate as its\r\n     *  sole argument, returning the corresponding array of cryptographically secure random byte values.\r\n     * @see http://nodejs.org/api/crypto.html\r\n     * @see http://www.w3.org/TR/WebCryptoAPI/\r\n     */\r\n    bcrypt.setRandomFallback = function(random) {\r\n        randomFallback = random;\r\n    };\r\n\r\n    /**\r\n     * Synchronously generates a salt.\r\n     * @param {number=} rounds Number of rounds to use, defaults to 10 if omitted\r\n     * @param {number=} seed_length Not supported.\r\n     * @returns {string} Resulting salt\r\n     * @throws {Error} If a random fallback is required but not set\r\n     * @expose\r\n     */\r\n    bcrypt.genSaltSync = function(rounds, seed_length) {\r\n        rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;\r\n        if (typeof rounds !== 'number')\r\n            throw Error(\"Illegal arguments: \"+(typeof rounds)+\", \"+(typeof seed_length));\r\n        if (rounds < 4)\r\n            rounds = 4;\r\n        else if (rounds > 31)\r\n            rounds = 31;\r\n        var salt = [];\r\n        salt.push(\"$2a$\");\r\n        if (rounds < 10)\r\n            salt.push(\"0\");\r\n        salt.push(rounds.toString());\r\n        salt.push('$');\r\n        salt.push(base64_encode(random(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN)); // May throw\r\n        return salt.join('');\r\n    };\r\n\r\n    /**\r\n     * Asynchronously generates a salt.\r\n     * @param {(number|function(Error, string=))=} rounds Number of rounds to use, defaults to 10 if omitted\r\n     * @param {(number|function(Error, string=))=} seed_length Not supported.\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting salt\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */\r\n    bcrypt.genSalt = function(rounds, seed_length, callback) {\r\n        if (typeof seed_length === 'function')\r\n            callback = seed_length,\r\n            seed_length = undefined; // Not supported.\r\n        if (typeof rounds === 'function')\r\n            callback = rounds,\r\n            rounds = undefined;\r\n        if (typeof rounds === 'undefined')\r\n            rounds = GENSALT_DEFAULT_LOG2_ROUNDS;\r\n        else if (typeof rounds !== 'number')\r\n            throw Error(\"illegal arguments: \"+(typeof rounds));\r\n\r\n        function _async(callback) {\r\n            nextTick(function() { // Pretty thin, but salting is fast enough\r\n                try {\r\n                    callback(null, bcrypt.genSaltSync(rounds));\r\n                } catch (err) {\r\n                    callback(err);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (callback) {\r\n            if (typeof callback !== 'function')\r\n                throw Error(\"Illegal callback: \"+typeof(callback));\r\n            _async(callback);\r\n        } else\r\n            return new Promise(function(resolve, reject) {\r\n                _async(function(err, res) {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Synchronously generates a hash for the given string.\r\n     * @param {string} s String to hash\r\n     * @param {(number|string)=} salt Salt length to generate or salt to use, default to 10\r\n     * @returns {string} Resulting hash\r\n     * @expose\r\n     */\r\n    bcrypt.hashSync = function(s, salt) {\r\n        if (typeof salt === 'undefined')\r\n            salt = GENSALT_DEFAULT_LOG2_ROUNDS;\r\n        if (typeof salt === 'number')\r\n            salt = bcrypt.genSaltSync(salt);\r\n        if (typeof s !== 'string' || typeof salt !== 'string')\r\n            throw Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof salt));\r\n        return _hash(s, salt);\r\n    };\r\n\r\n    /**\r\n     * Asynchronously generates a hash for the given string.\r\n     * @param {string} s String to hash\r\n     * @param {number|string} salt Salt length to generate or salt to use\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash\r\n     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\r\n     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */\r\n    bcrypt.hash = function(s, salt, callback, progressCallback) {\r\n\r\n        function _async(callback) {\r\n            if (typeof s === 'string' && typeof salt === 'number')\r\n                bcrypt.genSalt(salt, function(err, salt) {\r\n                    _hash(s, salt, callback, progressCallback);\r\n                });\r\n            else if (typeof s === 'string' && typeof salt === 'string')\r\n                _hash(s, salt, callback, progressCallback);\r\n            else\r\n                nextTick(callback.bind(this, Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof salt))));\r\n        }\r\n\r\n        if (callback) {\r\n            if (typeof callback !== 'function')\r\n                throw Error(\"Illegal callback: \"+typeof(callback));\r\n            _async(callback);\r\n        } else\r\n            return new Promise(function(resolve, reject) {\r\n                _async(function(err, res) {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Compares two strings of the same length in constant time.\r\n     * @param {string} known Must be of the correct length\r\n     * @param {string} unknown Must be the same length as `known`\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function safeStringCompare(known, unknown) {\r\n        var right = 0,\r\n            wrong = 0;\r\n        for (var i=0, k=known.length; i<k; ++i) {\r\n            if (known.charCodeAt(i) === unknown.charCodeAt(i))\r\n                ++right;\r\n            else\r\n                ++wrong;\r\n        }\r\n        // Prevent removal of unused variables (never true, actually)\r\n        if (right < 0)\r\n            return false;\r\n        return wrong === 0;\r\n    }\r\n\r\n    /**\r\n     * Synchronously tests a string against a hash.\r\n     * @param {string} s String to compare\r\n     * @param {string} hash Hash to test against\r\n     * @returns {boolean} true if matching, otherwise false\r\n     * @throws {Error} If an argument is illegal\r\n     * @expose\r\n     */\r\n    bcrypt.compareSync = function(s, hash) {\r\n        if (typeof s !== \"string\" || typeof hash !== \"string\")\r\n            throw Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof hash));\r\n        if (hash.length !== 60)\r\n            return false;\r\n        return safeStringCompare(bcrypt.hashSync(s, hash.substr(0, hash.length-31)), hash);\r\n    };\r\n\r\n    /**\r\n     * Asynchronously compares the given data against the given hash.\r\n     * @param {string} s Data to compare\r\n     * @param {string} hash Data to be compared to\r\n     * @param {function(Error, boolean)=} callback Callback receiving the error, if any, otherwise the result\r\n     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\r\n     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */\r\n    bcrypt.compare = function(s, hash, callback, progressCallback) {\r\n\r\n        function _async(callback) {\r\n            if (typeof s !== \"string\" || typeof hash !== \"string\") {\r\n                nextTick(callback.bind(this, Error(\"Illegal arguments: \"+(typeof s)+', '+(typeof hash))));\r\n                return;\r\n            }\r\n            if (hash.length !== 60) {\r\n                nextTick(callback.bind(this, null, false));\r\n                return;\r\n            }\r\n            bcrypt.hash(s, hash.substr(0, 29), function(err, comp) {\r\n                if (err)\r\n                    callback(err);\r\n                else\r\n                    callback(null, safeStringCompare(comp, hash));\r\n            }, progressCallback);\r\n        }\r\n\r\n        if (callback) {\r\n            if (typeof callback !== 'function')\r\n                throw Error(\"Illegal callback: \"+typeof(callback));\r\n            _async(callback);\r\n        } else\r\n            return new Promise(function(resolve, reject) {\r\n                _async(function(err, res) {\r\n                    if (err) {\r\n                        reject(err);\r\n                        return;\r\n                    }\r\n                    resolve(res);\r\n                });\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Gets the number of rounds used to encrypt the specified hash.\r\n     * @param {string} hash Hash to extract the used number of rounds from\r\n     * @returns {number} Number of rounds used\r\n     * @throws {Error} If `hash` is not a string\r\n     * @expose\r\n     */\r\n    bcrypt.getRounds = function(hash) {\r\n        if (typeof hash !== \"string\")\r\n            throw Error(\"Illegal arguments: \"+(typeof hash));\r\n        return parseInt(hash.split(\"$\")[2], 10);\r\n    };\r\n\r\n    /**\r\n     * Gets the salt portion from a hash. Does not validate the hash.\r\n     * @param {string} hash Hash to extract the salt from\r\n     * @returns {string} Extracted salt part\r\n     * @throws {Error} If `hash` is not a string or otherwise invalid\r\n     * @expose\r\n     */\r\n    bcrypt.getSalt = function(hash) {\r\n        if (typeof hash !== 'string')\r\n            throw Error(\"Illegal arguments: \"+(typeof hash));\r\n        if (hash.length !== 60)\r\n            throw Error(\"Illegal hash length: \"+hash.length+\" != 60\");\r\n        return hash.substring(0, 29);\r\n    };\r\n\r\n    /**\r\n     * Continues with the callback on the next tick.\r\n     * @function\r\n     * @param {function(...[*])} callback Callback to execute\r\n     * @inner\r\n     */\r\n    var nextTick = typeof process !== 'undefined' && process && typeof process.nextTick === 'function'\r\n        ? (typeof setImmediate === 'function' ? setImmediate : process.nextTick)\r\n        : setTimeout;\r\n\r\n    /**\r\n     * Converts a JavaScript string to UTF8 bytes.\r\n     * @param {string} str String\r\n     * @returns {!Array.<number>} UTF8 bytes\r\n     * @inner\r\n     */\r\n    function stringToBytes(str) {\r\n        var out = [],\r\n            i = 0;\r\n        utfx.encodeUTF16toUTF8(function() {\r\n            if (i >= str.length) return null;\r\n            return str.charCodeAt(i++);\r\n        }, function(b) {\r\n            out.push(b);\r\n        });\r\n        return out;\r\n    }\r\n\r\n    // A base64 implementation for the bcrypt algorithm. This is partly non-standard.\r\n\r\n    /**\r\n     * bcrypt's own non-standard base64 dictionary.\r\n     * @type {!Array.<string>}\r\n     * @const\r\n     * @inner\r\n     **/\r\n    var BASE64_CODE = \"./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split('');\r\n\r\n    /**\r\n     * @type {!Array.<number>}\r\n     * @const\r\n     * @inner\r\n     **/\r\n    var BASE64_INDEX = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n        -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,\r\n        1, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, -1, -1, -1, -1, -1, -1,\r\n        -1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\r\n        20, 21, 22, 23, 24, 25, 26, 27, -1, -1, -1, -1, -1, -1, 28, 29, 30,\r\n        31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\r\n        48, 49, 50, 51, 52, 53, -1, -1, -1, -1, -1];\r\n\r\n    /**\r\n     * @type {!function(...number):string}\r\n     * @inner\r\n     */\r\n    var stringFromCharCode = String.fromCharCode;\r\n\r\n    /**\r\n     * Encodes a byte array to base64 with up to len bytes of input.\r\n     * @param {!Array.<number>} b Byte array\r\n     * @param {number} len Maximum input length\r\n     * @returns {string}\r\n     * @inner\r\n     */\r\n    function base64_encode(b, len) {\r\n        var off = 0,\r\n            rs = [],\r\n            c1, c2;\r\n        if (len <= 0 || len > b.length)\r\n            throw Error(\"Illegal len: \"+len);\r\n        while (off < len) {\r\n            c1 = b[off++] & 0xff;\r\n            rs.push(BASE64_CODE[(c1 >> 2) & 0x3f]);\r\n            c1 = (c1 & 0x03) << 4;\r\n            if (off >= len) {\r\n                rs.push(BASE64_CODE[c1 & 0x3f]);\r\n                break;\r\n            }\r\n            c2 = b[off++] & 0xff;\r\n            c1 |= (c2 >> 4) & 0x0f;\r\n            rs.push(BASE64_CODE[c1 & 0x3f]);\r\n            c1 = (c2 & 0x0f) << 2;\r\n            if (off >= len) {\r\n                rs.push(BASE64_CODE[c1 & 0x3f]);\r\n                break;\r\n            }\r\n            c2 = b[off++] & 0xff;\r\n            c1 |= (c2 >> 6) & 0x03;\r\n            rs.push(BASE64_CODE[c1 & 0x3f]);\r\n            rs.push(BASE64_CODE[c2 & 0x3f]);\r\n        }\r\n        return rs.join('');\r\n    }\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to up to len bytes of output.\r\n     * @param {string} s String to decode\r\n     * @param {number} len Maximum output length\r\n     * @returns {!Array.<number>}\r\n     * @inner\r\n     */\r\n    function base64_decode(s, len) {\r\n        var off = 0,\r\n            slen = s.length,\r\n            olen = 0,\r\n            rs = [],\r\n            c1, c2, c3, c4, o, code;\r\n        if (len <= 0)\r\n            throw Error(\"Illegal len: \"+len);\r\n        while (off < slen - 1 && olen < len) {\r\n            code = s.charCodeAt(off++);\r\n            c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            code = s.charCodeAt(off++);\r\n            c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            if (c1 == -1 || c2 == -1)\r\n                break;\r\n            o = (c1 << 2) >>> 0;\r\n            o |= (c2 & 0x30) >> 4;\r\n            rs.push(stringFromCharCode(o));\r\n            if (++olen >= len || off >= slen)\r\n                break;\r\n            code = s.charCodeAt(off++);\r\n            c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            if (c3 == -1)\r\n                break;\r\n            o = ((c2 & 0x0f) << 4) >>> 0;\r\n            o |= (c3 & 0x3c) >> 2;\r\n            rs.push(stringFromCharCode(o));\r\n            if (++olen >= len || off >= slen)\r\n                break;\r\n            code = s.charCodeAt(off++);\r\n            c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n            o = ((c3 & 0x03) << 6) >>> 0;\r\n            o |= c4;\r\n            rs.push(stringFromCharCode(o));\r\n            ++olen;\r\n        }\r\n        var res = [];\r\n        for (off = 0; off<olen; off++)\r\n            res.push(rs[off].charCodeAt(0));\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */\r\n    var utfx = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */\r\n        var utfx = {};\r\n\r\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */\r\n        utfx.MAX_CODEPOINT = 0x10FFFF;\r\n\r\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */\r\n        utfx.encodeUTF8 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src,\r\n                src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp < 0x80)\r\n                    dst(cp&0x7F);\r\n                else if (cp < 0x800)\r\n                    dst(((cp>>6)&0x1F)|0xC0),\r\n                    dst((cp&0x3F)|0x80);\r\n                else if (cp < 0x10000)\r\n                    dst(((cp>>12)&0x0F)|0xE0),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                else\r\n                    dst(((cp>>18)&0x07)|0xF0),\r\n                    dst(((cp>>12)&0x3F)|0x80),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */\r\n        utfx.decodeUTF8 = function(src, dst) {\r\n            var a, b, c, d, fail = function(b) {\r\n                b = b.slice(0, b.indexOf(null));\r\n                var err = Error(b.toString());\r\n                err.name = \"TruncatedError\";\r\n                err['bytes'] = b;\r\n                throw err;\r\n            };\r\n            while ((a = src()) !== null) {\r\n                if ((a&0x80) === 0)\r\n                    dst(a);\r\n                else if ((a&0xE0) === 0xC0)\r\n                    ((b = src()) === null) && fail([a, b]),\r\n                    dst(((a&0x1F)<<6) | (b&0x3F));\r\n                else if ((a&0xF0) === 0xE0)\r\n                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),\r\n                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));\r\n                else if ((a&0xF8) === 0xF0)\r\n                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),\r\n                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));\r\n                else throw RangeError(\"Illegal starting byte: \"+a);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */\r\n        utfx.UTF16toUTF8 = function(src, dst) {\r\n            var c1, c2 = null;\r\n            while (true) {\r\n                if ((c1 = c2 !== null ? c2 : src()) === null)\r\n                    break;\r\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\r\n                    if ((c2 = src()) !== null) {\r\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);\r\n                            c2 = null; continue;\r\n                        }\r\n                    }\r\n                }\r\n                dst(c1);\r\n            }\r\n            if (c2 !== null) dst(c2);\r\n        };\r\n\r\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */\r\n        utfx.UTF8toUTF16 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src, src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp <= 0xFFFF)\r\n                    dst(cp);\r\n                else\r\n                    cp -= 0x10000,\r\n                    dst((cp>>10)+0xD800),\r\n                    dst((cp%0x400)+0xDC00);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */\r\n        utfx.encodeUTF16toUTF8 = function(src, dst) {\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                utfx.encodeUTF8(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */\r\n        utfx.decodeUTF8toUTF16 = function(src, dst) {\r\n            utfx.decodeUTF8(src, function(cp) {\r\n                utfx.UTF8toUTF16(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */\r\n        utfx.calculateCodePoint = function(cp) {\r\n            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */\r\n        utfx.calculateUTF8 = function(src) {\r\n            var cp, l=0;\r\n            while ((cp = src()) !== null)\r\n                l += utfx.calculateCodePoint(cp);\r\n            return l;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */\r\n        utfx.calculateUTF16asUTF8 = function(src) {\r\n            var n=0, l=0;\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                ++n; l += utfx.calculateCodePoint(cp);\r\n            });\r\n            return [n,l];\r\n        };\r\n\r\n        return utfx;\r\n    }();\r\n\r\n    Date.now = Date.now || function() { return +new Date; };\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var BCRYPT_SALT_LEN = 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var GENSALT_DEFAULT_LOG2_ROUNDS = 10;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var BLOWFISH_NUM_ROUNDS = 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var MAX_EXECUTION_TIME = 100;\r\n\r\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var P_ORIG = [\r\n        0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822,\r\n        0x299f31d0, 0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377,\r\n        0xbe5466cf, 0x34e90c6c, 0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5,\r\n        0xb5470917, 0x9216d5d9, 0x8979fb1b\r\n    ];\r\n\r\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var S_ORIG = [\r\n        0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed,\r\n        0x6a267e96, 0xba7c9045, 0xf12c7f99, 0x24a19947, 0xb3916cf7,\r\n        0x0801f2e2, 0x858efc16, 0x636920d8, 0x71574e69, 0xa458fea3,\r\n        0xf4933d7e, 0x0d95748f, 0x728eb658, 0x718bcd58, 0x82154aee,\r\n        0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013, 0xc5d1b023,\r\n        0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e,\r\n        0x6c9e0e8b, 0xb01e8a3e, 0xd71577c1, 0xbd314b27, 0x78af2fda,\r\n        0x55605c60, 0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440,\r\n        0x55ca396a, 0x2aab10b6, 0xb4cc5c34, 0x1141e8ce, 0xa15486af,\r\n        0x7c72e993, 0xb3ee1411, 0x636fbc2a, 0x2ba9c55d, 0x741831f6,\r\n        0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c, 0x7a325381,\r\n        0x28958677, 0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,\r\n        0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032, 0xef845d5d,\r\n        0xe98575b1, 0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5,\r\n        0x0f6d6ff3, 0x83f44239, 0x2e0b4482, 0xa4842004, 0x69c8f04a,\r\n        0x9e1f9b5e, 0x21c66842, 0xf6e96c9a, 0x670c9c61, 0xabd388f0,\r\n        0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3, 0x6eef0b6c,\r\n        0x137a3be4, 0xba3bf050, 0x7efb2a98, 0xa1f1651d, 0x39af0176,\r\n        0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3,\r\n        0x3b8b5ebe, 0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6,\r\n        0x4ed3aa62, 0x363f7706, 0x1bfedf72, 0x429b023d, 0x37d0d724,\r\n        0xd00a1248, 0xdb0fead3, 0x49f1c09b, 0x075372c9, 0x80991b7b,\r\n        0x25d479d8, 0xf6e8def7, 0xe3fe501a, 0xb6794c3b, 0x976ce0bd,\r\n        0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\r\n        0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f,\r\n        0x9b30952c, 0xcc814544, 0xaf5ebd09, 0xbee3d004, 0xde334afd,\r\n        0x660f2807, 0x192e4bb3, 0xc0cba857, 0x45c8740f, 0xd20b5f39,\r\n        0xb9d3fbdb, 0x5579c0bd, 0x1a60320a, 0xd6a100c6, 0x402c7279,\r\n        0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8, 0x3c7516df,\r\n        0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760,\r\n        0x53317b48, 0x3e00df82, 0x9e5c57bb, 0xca6f8ca0, 0x1a87562e,\r\n        0xdf1769db, 0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573,\r\n        0x695b27b0, 0xbbca58c8, 0xe1ffa35d, 0xb8f011a0, 0x10fa3d98,\r\n        0xfd2183b8, 0x4afcb56c, 0x2dd1d35b, 0x9a53e479, 0xb6f84565,\r\n        0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33, 0x62fb1341,\r\n        0xcee4c6e8, 0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,\r\n        0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0, 0xd08ed1d0,\r\n        0xafc725e0, 0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64,\r\n        0x8888b812, 0x900df01c, 0x4fad5ea0, 0x688fc31c, 0xd1cff191,\r\n        0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777, 0xea752dfe, 0x8b021fa1,\r\n        0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299, 0xb4a84fe0,\r\n        0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9, 0x165fa266, 0x80957705,\r\n        0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5,\r\n        0xfb9d35cf, 0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49,\r\n        0x00250e2d, 0x2071b35e, 0x226800bb, 0x57b8e0af, 0x2464369b,\r\n        0xf009b91e, 0x5563911d, 0x59dfa6aa, 0x78c14389, 0xd95a537f,\r\n        0x207d5ba2, 0x02e5b9c5, 0x83260376, 0x6295cfa9, 0x11c81968,\r\n        0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\r\n        0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5,\r\n        0x571be91f, 0xf296ec6b, 0x2a0dd915, 0xb6636521, 0xe7b9f9b6,\r\n        0xff34052e, 0xc5855664, 0x53b02d5d, 0xa99f8fa1, 0x08ba4799,\r\n        0x6e85076a, 0x4b7a70e9, 0xb5b32944, 0xdb75092e, 0xc4192623,\r\n        0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266, 0xecaa8c71,\r\n        0x699a17ff, 0x5664526c, 0xc2b19ee1, 0x193602a5, 0x75094c29,\r\n        0xa0591340, 0xe4183a3e, 0x3f54989a, 0x5b429d65, 0x6b8fe4d6,\r\n        0x99f73fd6, 0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1,\r\n        0x4cdd2086, 0x8470eb26, 0x6382e9c6, 0x021ecc5e, 0x09686b3f,\r\n        0x3ebaefc9, 0x3c971814, 0x6b6a70a1, 0x687f3584, 0x52a0e286,\r\n        0xb79c5305, 0xaa500737, 0x3e07841c, 0x7fdeae5c, 0x8e7d44ec,\r\n        0x5716f2b8, 0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,\r\n        0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd, 0xd19113f9,\r\n        0x7ca92ff6, 0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc,\r\n        0xc8b57634, 0x9af3dda7, 0xa9446146, 0x0fd0030e, 0xecc8c73e,\r\n        0xa4751e41, 0xe238cd99, 0x3bea0e2f, 0x3280bba1, 0x183eb331,\r\n        0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf, 0x2cb81290,\r\n        0x24977c79, 0x5679b072, 0xbcaf89af, 0xde9a771f, 0xd9930810,\r\n        0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124, 0x501adde6,\r\n        0x9f84cd87, 0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c,\r\n        0xec7aec3a, 0xdb851dfa, 0x63094366, 0xc464c3d2, 0xef1c1847,\r\n        0x3215d908, 0xdd433b37, 0x24c2ba16, 0x12a14d43, 0x2a65c451,\r\n        0x50940002, 0x133ae4dd, 0x71dff89e, 0x10314e55, 0x81ac77d6,\r\n        0x5f11199b, 0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,\r\n        0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e, 0x86e34570,\r\n        0xeae96fb1, 0x860e5e0a, 0x5a3e2ab3, 0x771fe71c, 0x4e3d06fa,\r\n        0x2965dcb9, 0x99e71d0f, 0x803e89d6, 0x5266c825, 0x2e4cc978,\r\n        0x9c10b36a, 0xc6150eba, 0x94e2ea78, 0xa5fc3c53, 0x1e0a2df4,\r\n        0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960, 0x5223a708,\r\n        0xf71312b6, 0xebadfe6e, 0xeac31f66, 0xe3bc4595, 0xa67bc883,\r\n        0xb17f37d1, 0x018cff28, 0xc332ddef, 0xbe6c5aa5, 0x65582185,\r\n        0x68ab9802, 0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84,\r\n        0x1521b628, 0x29076170, 0xecdd4775, 0x619f1510, 0x13cca830,\r\n        0xeb61bd96, 0x0334fe1e, 0xaa0363cf, 0xb5735c90, 0x4c70a239,\r\n        0xd59e9e0b, 0xcbaade14, 0xeecc86bc, 0x60622ca7, 0x9cab5cab,\r\n        0xb2f3846e, 0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,\r\n        0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7, 0x9b540b19,\r\n        0x875fa099, 0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77,\r\n        0x11ed935f, 0x16681281, 0x0e358829, 0xc7e61fd6, 0x96dedfa1,\r\n        0x7858ba99, 0x57f584a5, 0x1b227263, 0x9b83c3ff, 0x1ac24696,\r\n        0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128, 0x58ebf2ef,\r\n        0x34c6ffea, 0xfe28ed61, 0xee7c3c73, 0x5d4a14d9, 0xe864b7e3,\r\n        0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea, 0xdb6c4f15,\r\n        0xfacb4fd0, 0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105,\r\n        0xd81e799e, 0x86854dc7, 0xe44b476a, 0x3d816250, 0xcf62a1f2,\r\n        0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3, 0x7f1524c3, 0x69cb7492,\r\n        0x47848a0b, 0x5692b285, 0x095bbf00, 0xad19489d, 0x1462b174,\r\n        0x23820e00, 0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,\r\n        0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb, 0x7cde3759,\r\n        0xcbee7460, 0x4085f2a7, 0xce77326e, 0xa6078084, 0x19f8509e,\r\n        0xe8efd855, 0x61d99735, 0xa969a7aa, 0xc50c06c2, 0x5a04abfc,\r\n        0x800bcadc, 0x9e447a2e, 0xc3453484, 0xfdd56705, 0x0e1e9ec9,\r\n        0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340, 0xc5c43465,\r\n        0x713e38d8, 0x3d28f89e, 0xf16dff20, 0x153e21e7, 0x8fb03d4a,\r\n        0xe6e39f2b, 0xdb83adf7, 0xe93d5a68, 0x948140f7, 0xf64c261c,\r\n        0x94692934, 0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068,\r\n        0xd4082471, 0x3320f46a, 0x43b7d4b7, 0x500061af, 0x1e39f62e,\r\n        0x97244546, 0x14214f74, 0xbf8b8840, 0x4d95fc1d, 0x96b591af,\r\n        0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785, 0x7fac6dd0,\r\n        0x31cb8504, 0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,\r\n        0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb, 0x68dc1462,\r\n        0xd7486900, 0x680ec0a4, 0x27a18dee, 0x4f3ffea2, 0xe887ad8c,\r\n        0xb58ce006, 0x7af4d6b6, 0xaace1e7c, 0xd3375fec, 0xce78a399,\r\n        0x406b2a42, 0x20fe9e35, 0xd9f385b9, 0xee39d7ab, 0x3b124e8b,\r\n        0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2, 0x3a6efa74,\r\n        0xdd5b4332, 0x6841e7f7, 0xca7820fb, 0xfb0af54e, 0xd8feb397,\r\n        0x454056ac, 0xba489527, 0x55533a3a, 0x20838d87, 0xfe6ba9b7,\r\n        0xd096954b, 0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33,\r\n        0xa62a4a56, 0x3f3125f9, 0x5ef47e1c, 0x9029317c, 0xfdf8e802,\r\n        0x04272f70, 0x80bb155c, 0x05282ce3, 0x95c11548, 0xe4c66d22,\r\n        0x48c1133f, 0xc70f86dc, 0x07f9c9ee, 0x41041f0f, 0x404779a4,\r\n        0x5d886e17, 0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,\r\n        0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2,\r\n        0x02e1329e, 0xaf664fd1, 0xcad18115, 0x6b2395e0, 0x333e92e1,\r\n        0x3b240b62, 0xeebeb922, 0x85b2a20e, 0xe6ba0d99, 0xde720c8c,\r\n        0x2da2f728, 0xd0127845, 0x95b794fd, 0x647d0862, 0xe7ccf5f0,\r\n        0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e, 0x0a476341,\r\n        0x992eff74, 0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8,\r\n        0x991be14c, 0xdb6e6b0d, 0xc67b5510, 0x6d672c37, 0x2765d43b,\r\n        0xdcd0e804, 0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b,\r\n        0x667b9ffb, 0xcedb7d9c, 0xa091cf0b, 0xd9155ea3, 0xbb132f88,\r\n        0x515bad24, 0x7b9479bf, 0x763bd6eb, 0x37392eb3, 0xcc115979,\r\n        0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b, 0x12754ccc,\r\n        0x782ef11c, 0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,\r\n        0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9, 0x44421659,\r\n        0x0a121386, 0xd90cec6e, 0xd5abea2a, 0x64af674e, 0xda86a85f,\r\n        0xbebfe988, 0x64e4c3fe, 0x9dbc8057, 0xf0f7c086, 0x60787bf8,\r\n        0x6003604d, 0xd1fd8346, 0xf6381fb0, 0x7745ae04, 0xd736fccc,\r\n        0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f, 0x77a057be,\r\n        0xbde8ae24, 0x55464299, 0xbf582e61, 0x4e58f48f, 0xf2ddfda2,\r\n        0xf474ef38, 0x8789bdc2, 0x5366f9c3, 0xc8b38e74, 0xb475f255,\r\n        0x46fcd9b9, 0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2,\r\n        0x466e598e, 0x20b45770, 0x8cd55591, 0xc902de4c, 0xb90bace1,\r\n        0xbb8205d0, 0x11a86248, 0x7574a99e, 0xb77f19b6, 0xe0a9dc09,\r\n        0x662d09a1, 0xc4324633, 0xe85a1f02, 0x09f0be8c, 0x4a99a025,\r\n        0x1d6efe10, 0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,\r\n        0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52, 0x50115e01,\r\n        0xa70683fa, 0xa002b5c4, 0x0de6d027, 0x9af88c27, 0x773f8641,\r\n        0xc3604c06, 0x61a806b5, 0xf0177a28, 0xc0f586e0, 0x006058aa,\r\n        0x30dc7d62, 0x11e69ed7, 0x2338ea63, 0x53c2dd94, 0xc2c21634,\r\n        0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76, 0x6f05e409,\r\n        0x4b7c0188, 0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9,\r\n        0x1ac15bb4, 0xd39eb8fc, 0xed545578, 0x08fca5b5, 0xd83d7cd3,\r\n        0x4dad0fc4, 0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c,\r\n        0x6fd5c7e7, 0x56e14ec4, 0x362abfce, 0xddc6c837, 0xd79a3234,\r\n        0x92638212, 0x670efa8e, 0x406000e0, 0x3a39ce37, 0xd3faf5cf,\r\n        0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742, 0xd3822740,\r\n        0x99bc9bbe, 0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,\r\n        0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4, 0x5748ab2f,\r\n        0xbc946e79, 0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d,\r\n        0xd5730a1d, 0x4cd04dc6, 0x2939bbdb, 0xa9ba4650, 0xac9526e8,\r\n        0xbe5ee304, 0xa1fad5f0, 0x6a2d519a, 0x63ef8ce2, 0x9a86ee22,\r\n        0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4, 0x83c061ba,\r\n        0x9be96a4d, 0x8fe51550, 0xba645bd6, 0x2826a2f9, 0xa73a3ae1,\r\n        0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69,\r\n        0x77fa0a59, 0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593,\r\n        0xe990fd5a, 0x9e34d797, 0x2cf0b7d9, 0x022b8b51, 0x96d5ac3a,\r\n        0x017da67d, 0xd1cf3ed6, 0x7c7d2d28, 0x1f9f25cf, 0xadf2b89b,\r\n        0x5ad6b472, 0x5a88f54c, 0xe029ac71, 0xe019a5e6, 0x47b0acfd,\r\n        0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,\r\n        0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4,\r\n        0x88f46dba, 0x03a16125, 0x0564f0bd, 0xc3eb9e15, 0x3c9057a2,\r\n        0x97271aec, 0xa93a072a, 0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb,\r\n        0x26dcf319, 0x7533d928, 0xb155fdf5, 0x03563482, 0x8aba3cbb,\r\n        0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f, 0x4de81751,\r\n        0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce,\r\n        0x5121ce64, 0x774fbe32, 0xa8b6e37e, 0xc3293d46, 0x48de5369,\r\n        0x6413e680, 0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166,\r\n        0xb39a460a, 0x6445c0dd, 0x586cdecf, 0x1c20c8ae, 0x5bbef7dd,\r\n        0x1b588d40, 0xccd2017f, 0x6bb4e3bb, 0xdda26a7e, 0x3a59ff45,\r\n        0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb, 0x8d6612ae,\r\n        0xbf3c6f47, 0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,\r\n        0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d, 0x4040cb08,\r\n        0x4eb4e2cc, 0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d,\r\n        0x06b89fb4, 0xce6ea048, 0x6f3f3b82, 0x3520ab82, 0x011a1d4b,\r\n        0x277227f8, 0x611560b1, 0xe7933fdc, 0xbb3a792b, 0x344525bd,\r\n        0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9, 0xe01cc87e,\r\n        0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7, 0x1a908749, 0xd44fbd9a,\r\n        0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c,\r\n        0xe0b12b4f, 0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c,\r\n        0xbf97222c, 0x15e6fc2a, 0x0f91fc71, 0x9b941525, 0xfae59361,\r\n        0xceb69ceb, 0xc2a86459, 0x12baa8d1, 0xb6c1075e, 0xe3056a0c,\r\n        0x10d25065, 0xcb03a442, 0xe0ec6e0e, 0x1698db3b, 0x4c98a0be,\r\n        0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,\r\n        0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d,\r\n        0x9b992f2e, 0xe60b6f47, 0x0fe3f11d, 0xe54cda54, 0x1edad891,\r\n        0xce6279cf, 0xcd3e7e6f, 0x1618b166, 0xfd2c1d05, 0x848fd2c5,\r\n        0xf6fb2299, 0xf523f357, 0xa6327623, 0x93a83531, 0x56cccd02,\r\n        0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc, 0xde966292,\r\n        0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a,\r\n        0x45e1d006, 0xc3f27b9a, 0xc9aa53fd, 0x62a80f00, 0xbb25bfe2,\r\n        0x35bdd2f6, 0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b,\r\n        0x53113ec0, 0x1640e3d3, 0x38abbd60, 0x2547adf0, 0xba38209c,\r\n        0xf746ce76, 0x77afa1c5, 0x20756060, 0x85cbfe4e, 0x8ae88dd8,\r\n        0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c, 0x01c36ae4,\r\n        0xd6ebe1f9, 0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,\r\n        0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6\r\n    ];\r\n\r\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var C_ORIG = [\r\n        0x4f727068, 0x65616e42, 0x65686f6c, 0x64657253, 0x63727944,\r\n        0x6f756274\r\n    ];\r\n\r\n    /**\r\n     * @param {Array.<number>} lr\r\n     * @param {number} off\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @returns {Array.<number>}\r\n     * @inner\r\n     */\r\n    function _encipher(lr, off, P, S) { // This is our bottleneck: 1714/1905 ticks / 90% - see profile.txt\r\n        var n,\r\n            l = lr[off],\r\n            r = lr[off + 1];\r\n\r\n        l ^= P[0];\r\n\r\n        /*\r\n        for (var i=0, k=BLOWFISH_NUM_ROUNDS-2; i<=k;)\r\n            // Feistel substitution on left word\r\n            n  = S[l >>> 24],\r\n            n += S[0x100 | ((l >> 16) & 0xff)],\r\n            n ^= S[0x200 | ((l >> 8) & 0xff)],\r\n            n += S[0x300 | (l & 0xff)],\r\n            r ^= n ^ P[++i],\r\n            // Feistel substitution on right word\r\n            n  = S[r >>> 24],\r\n            n += S[0x100 | ((r >> 16) & 0xff)],\r\n            n ^= S[0x200 | ((r >> 8) & 0xff)],\r\n            n += S[0x300 | (r & 0xff)],\r\n            l ^= n ^ P[++i];\r\n        */\r\n\r\n        //The following is an unrolled version of the above loop.\r\n        //Iteration 0\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[1];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[2];\r\n        //Iteration 1\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[3];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[4];\r\n        //Iteration 2\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[5];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[6];\r\n        //Iteration 3\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[7];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[8];\r\n        //Iteration 4\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[9];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[10];\r\n        //Iteration 5\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[11];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[12];\r\n        //Iteration 6\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[13];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[14];\r\n        //Iteration 7\r\n        n  = S[l >>> 24];\r\n        n += S[0x100 | ((l >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n        n += S[0x300 | (l & 0xff)];\r\n        r ^= n ^ P[15];\r\n        n  = S[r >>> 24];\r\n        n += S[0x100 | ((r >> 16) & 0xff)];\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n        n += S[0x300 | (r & 0xff)];\r\n        l ^= n ^ P[16];\r\n\r\n        lr[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];\r\n        lr[off + 1] = l;\r\n        return lr;\r\n    }\r\n\r\n    /**\r\n     * @param {Array.<number>} data\r\n     * @param {number} offp\r\n     * @returns {{key: number, offp: number}}\r\n     * @inner\r\n     */\r\n    function _streamtoword(data, offp) {\r\n        for (var i = 0, word = 0; i < 4; ++i)\r\n            word = (word << 8) | (data[offp] & 0xff),\r\n            offp = (offp + 1) % data.length;\r\n        return { key: word, offp: offp };\r\n    }\r\n\r\n    /**\r\n     * @param {Array.<number>} key\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @inner\r\n     */\r\n    function _key(key, P, S) {\r\n        var offset = 0,\r\n            lr = [0, 0],\r\n            plen = P.length,\r\n            slen = S.length,\r\n            sw;\r\n        for (var i = 0; i < plen; i++)\r\n            sw = _streamtoword(key, offset),\r\n            offset = sw.offp,\r\n            P[i] = P[i] ^ sw.key;\r\n        for (i = 0; i < plen; i += 2)\r\n            lr = _encipher(lr, 0, P, S),\r\n            P[i] = lr[0],\r\n            P[i + 1] = lr[1];\r\n        for (i = 0; i < slen; i += 2)\r\n            lr = _encipher(lr, 0, P, S),\r\n            S[i] = lr[0],\r\n            S[i + 1] = lr[1];\r\n    }\r\n\r\n    /**\r\n     * Expensive key schedule Blowfish.\r\n     * @param {Array.<number>} data\r\n     * @param {Array.<number>} key\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @inner\r\n     */\r\n    function _ekskey(data, key, P, S) {\r\n        var offp = 0,\r\n            lr = [0, 0],\r\n            plen = P.length,\r\n            slen = S.length,\r\n            sw;\r\n        for (var i = 0; i < plen; i++)\r\n            sw = _streamtoword(key, offp),\r\n            offp = sw.offp,\r\n            P[i] = P[i] ^ sw.key;\r\n        offp = 0;\r\n        for (i = 0; i < plen; i += 2)\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[0] ^= sw.key,\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[1] ^= sw.key,\r\n            lr = _encipher(lr, 0, P, S),\r\n            P[i] = lr[0],\r\n            P[i + 1] = lr[1];\r\n        for (i = 0; i < slen; i += 2)\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[0] ^= sw.key,\r\n            sw = _streamtoword(data, offp),\r\n            offp = sw.offp,\r\n            lr[1] ^= sw.key,\r\n            lr = _encipher(lr, 0, P, S),\r\n            S[i] = lr[0],\r\n            S[i + 1] = lr[1];\r\n    }\r\n\r\n    /**\r\n     * Internaly crypts a string.\r\n     * @param {Array.<number>} b Bytes to crypt\r\n     * @param {Array.<number>} salt Salt bytes to use\r\n     * @param {number} rounds Number of rounds\r\n     * @param {function(Error, Array.<number>=)=} callback Callback receiving the error, if any, and the resulting bytes. If\r\n     *  omitted, the operation will be performed synchronously.\r\n     *  @param {function(number)=} progressCallback Callback called with the current progress\r\n     * @returns {!Array.<number>|undefined} Resulting bytes if callback has been omitted, otherwise `undefined`\r\n     * @inner\r\n     */\r\n    function _crypt(b, salt, rounds, callback, progressCallback) {\r\n        var cdata = C_ORIG.slice(),\r\n            clen = cdata.length,\r\n            err;\r\n\r\n        // Validate\r\n        if (rounds < 4 || rounds > 31) {\r\n            err = Error(\"Illegal number of rounds (4-31): \"+rounds);\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            } else\r\n                throw err;\r\n        }\r\n        if (salt.length !== BCRYPT_SALT_LEN) {\r\n            err =Error(\"Illegal salt length: \"+salt.length+\" != \"+BCRYPT_SALT_LEN);\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            } else\r\n                throw err;\r\n        }\r\n        rounds = (1 << rounds) >>> 0;\r\n\r\n        var P, S, i = 0, j;\r\n\r\n        //Use typed arrays when available - huge speedup!\r\n        if (Int32Array) {\r\n            P = new Int32Array(P_ORIG);\r\n            S = new Int32Array(S_ORIG);\r\n        } else {\r\n            P = P_ORIG.slice();\r\n            S = S_ORIG.slice();\r\n        }\r\n\r\n        _ekskey(salt, b, P, S);\r\n\r\n        /**\r\n         * Calcualtes the next round.\r\n         * @returns {Array.<number>|undefined} Resulting array if callback has been omitted, otherwise `undefined`\r\n         * @inner\r\n         */\r\n        function next() {\r\n            if (progressCallback)\r\n                progressCallback(i / rounds);\r\n            if (i < rounds) {\r\n                var start = Date.now();\r\n                for (; i < rounds;) {\r\n                    i = i + 1;\r\n                    _key(b, P, S);\r\n                    _key(salt, P, S);\r\n                    if (Date.now() - start > MAX_EXECUTION_TIME)\r\n                        break;\r\n                }\r\n            } else {\r\n                for (i = 0; i < 64; i++)\r\n                    for (j = 0; j < (clen >> 1); j++)\r\n                        _encipher(cdata, j << 1, P, S);\r\n                var ret = [];\r\n                for (i = 0; i < clen; i++)\r\n                    ret.push(((cdata[i] >> 24) & 0xff) >>> 0),\r\n                    ret.push(((cdata[i] >> 16) & 0xff) >>> 0),\r\n                    ret.push(((cdata[i] >> 8) & 0xff) >>> 0),\r\n                    ret.push((cdata[i] & 0xff) >>> 0);\r\n                if (callback) {\r\n                    callback(null, ret);\r\n                    return;\r\n                } else\r\n                    return ret;\r\n            }\r\n            if (callback)\r\n                nextTick(next);\r\n        }\r\n\r\n        // Async\r\n        if (typeof callback !== 'undefined') {\r\n            next();\r\n\r\n            // Sync\r\n        } else {\r\n            var res;\r\n            while (true)\r\n                if (typeof(res = next()) !== 'undefined')\r\n                    return res || [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internally hashes a string.\r\n     * @param {string} s String to hash\r\n     * @param {?string} salt Salt to use, actually never null\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash. If omitted,\r\n     *  hashing is perormed synchronously.\r\n     *  @param {function(number)=} progressCallback Callback called with the current progress\r\n     * @returns {string|undefined} Resulting hash if callback has been omitted, otherwise `undefined`\r\n     * @inner\r\n     */\r\n    function _hash(s, salt, callback, progressCallback) {\r\n        var err;\r\n        if (typeof s !== 'string' || typeof salt !== 'string') {\r\n            err = Error(\"Invalid string / salt: Not a string\");\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            }\r\n            else\r\n                throw err;\r\n        }\r\n\r\n        // Validate the salt\r\n        var minor, offset;\r\n        if (salt.charAt(0) !== '$' || salt.charAt(1) !== '2') {\r\n            err = Error(\"Invalid salt version: \"+salt.substring(0,2));\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            }\r\n            else\r\n                throw err;\r\n        }\r\n        if (salt.charAt(2) === '$')\r\n            minor = String.fromCharCode(0),\r\n            offset = 3;\r\n        else {\r\n            minor = salt.charAt(2);\r\n            if ((minor !== 'a' && minor !== 'b' && minor !== 'y') || salt.charAt(3) !== '$') {\r\n                err = Error(\"Invalid salt revision: \"+salt.substring(2,4));\r\n                if (callback) {\r\n                    nextTick(callback.bind(this, err));\r\n                    return;\r\n                } else\r\n                    throw err;\r\n            }\r\n            offset = 4;\r\n        }\r\n\r\n        // Extract number of rounds\r\n        if (salt.charAt(offset + 2) > '$') {\r\n            err = Error(\"Missing salt rounds\");\r\n            if (callback) {\r\n                nextTick(callback.bind(this, err));\r\n                return;\r\n            } else\r\n                throw err;\r\n        }\r\n        var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10,\r\n            r2 = parseInt(salt.substring(offset + 1, offset + 2), 10),\r\n            rounds = r1 + r2,\r\n            real_salt = salt.substring(offset + 3, offset + 25);\r\n        s += minor >= 'a' ? \"\\x00\" : \"\";\r\n\r\n        var passwordb = stringToBytes(s),\r\n            saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);\r\n\r\n        /**\r\n         * Finishes hashing.\r\n         * @param {Array.<number>} bytes Byte array\r\n         * @returns {string}\r\n         * @inner\r\n         */\r\n        function finish(bytes) {\r\n            var res = [];\r\n            res.push(\"$2\");\r\n            if (minor >= 'a')\r\n                res.push(minor);\r\n            res.push(\"$\");\r\n            if (rounds < 10)\r\n                res.push(\"0\");\r\n            res.push(rounds.toString());\r\n            res.push(\"$\");\r\n            res.push(base64_encode(saltb, saltb.length));\r\n            res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));\r\n            return res.join('');\r\n        }\r\n\r\n        // Sync\r\n        if (typeof callback == 'undefined')\r\n            return finish(_crypt(passwordb, saltb, rounds));\r\n\r\n        // Async\r\n        else {\r\n            _crypt(passwordb, saltb, rounds, function(err, bytes) {\r\n                if (err)\r\n                    callback(err, null);\r\n                else\r\n                    callback(null, finish(bytes));\r\n            }, progressCallback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Encodes a byte array to base64 with up to len bytes of input, using the custom bcrypt alphabet.\r\n     * @function\r\n     * @param {!Array.<number>} b Byte array\r\n     * @param {number} len Maximum input length\r\n     * @returns {string}\r\n     * @expose\r\n     */\r\n    bcrypt.encodeBase64 = base64_encode;\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to up to len bytes of output, using the custom bcrypt alphabet.\r\n     * @function\r\n     * @param {string} s String to decode\r\n     * @param {number} len Maximum output length\r\n     * @returns {!Array.<number>}\r\n     * @expose\r\n     */\r\n    bcrypt.decodeBase64 = base64_decode;\r\n\r\n    return bcrypt;\r\n}));\r\n", "/*!\n * MIT License\n * \n * Copyright (c) 2017-2022 Peculiar Ventures, LLC\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n */\n\n'use strict';\n\nconst ARRAY_BUFFER_NAME = \"[object ArrayBuffer]\";\nclass BufferSourceConverter {\n    static isArrayBuffer(data) {\n        return Object.prototype.toString.call(data) === ARRAY_BUFFER_NAME;\n    }\n    static toArrayBuffer(data) {\n        if (this.isArrayBuffer(data)) {\n            return data;\n        }\n        if (data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        return this.toUint8Array(data.buffer)\n            .slice(data.byteOffset, data.byteOffset + data.byteLength)\n            .buffer;\n    }\n    static toUint8Array(data) {\n        return this.toView(data, Uint8Array);\n    }\n    static toView(data, type) {\n        if (data.constructor === type) {\n            return data;\n        }\n        if (this.isArrayBuffer(data)) {\n            return new type(data);\n        }\n        if (this.isArrayBufferView(data)) {\n            return new type(data.buffer, data.byteOffset, data.byteLength);\n        }\n        throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\n    }\n    static isBufferSource(data) {\n        return this.isArrayBufferView(data)\n            || this.isArrayBuffer(data);\n    }\n    static isArrayBufferView(data) {\n        return ArrayBuffer.isView(data)\n            || (data && this.isArrayBuffer(data.buffer));\n    }\n    static isEqual(a, b) {\n        const aView = BufferSourceConverter.toUint8Array(a);\n        const bView = BufferSourceConverter.toUint8Array(b);\n        if (aView.length !== bView.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < aView.length; i++) {\n            if (aView[i] !== bView[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static concat(...args) {\n        let buffers;\n        if (Array.isArray(args[0]) && !(args[1] instanceof Function)) {\n            buffers = args[0];\n        }\n        else if (Array.isArray(args[0]) && args[1] instanceof Function) {\n            buffers = args[0];\n        }\n        else {\n            if (args[args.length - 1] instanceof Function) {\n                buffers = args.slice(0, args.length - 1);\n            }\n            else {\n                buffers = args;\n            }\n        }\n        let size = 0;\n        for (const buffer of buffers) {\n            size += buffer.byteLength;\n        }\n        const res = new Uint8Array(size);\n        let offset = 0;\n        for (const buffer of buffers) {\n            const view = this.toUint8Array(buffer);\n            res.set(view, offset);\n            offset += view.length;\n        }\n        if (args[args.length - 1] instanceof Function) {\n            return this.toView(res, args[args.length - 1]);\n        }\n        return res.buffer;\n    }\n}\n\nconst STRING_TYPE = \"string\";\nconst HEX_REGEX = /^[0-9a-f]+$/i;\nconst BASE64_REGEX = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\nconst BASE64URL_REGEX = /^[a-zA-Z0-9-_]+$/;\nclass Utf8Converter {\n    static fromString(text) {\n        const s = unescape(encodeURIComponent(text));\n        const uintArray = new Uint8Array(s.length);\n        for (let i = 0; i < s.length; i++) {\n            uintArray[i] = s.charCodeAt(i);\n        }\n        return uintArray.buffer;\n    }\n    static toString(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let encodedString = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            encodedString += String.fromCharCode(buf[i]);\n        }\n        const decodedString = decodeURIComponent(escape(encodedString));\n        return decodedString;\n    }\n}\nclass Utf16Converter {\n    static toString(buffer, littleEndian = false) {\n        const arrayBuffer = BufferSourceConverter.toArrayBuffer(buffer);\n        const dataView = new DataView(arrayBuffer);\n        let res = \"\";\n        for (let i = 0; i < arrayBuffer.byteLength; i += 2) {\n            const code = dataView.getUint16(i, littleEndian);\n            res += String.fromCharCode(code);\n        }\n        return res;\n    }\n    static fromString(text, littleEndian = false) {\n        const res = new ArrayBuffer(text.length * 2);\n        const dataView = new DataView(res);\n        for (let i = 0; i < text.length; i++) {\n            dataView.setUint16(i * 2, text.charCodeAt(i), littleEndian);\n        }\n        return res;\n    }\n}\nclass Convert {\n    static isHex(data) {\n        return typeof data === STRING_TYPE\n            && HEX_REGEX.test(data);\n    }\n    static isBase64(data) {\n        return typeof data === STRING_TYPE\n            && BASE64_REGEX.test(data);\n    }\n    static isBase64Url(data) {\n        return typeof data === STRING_TYPE\n            && BASE64URL_REGEX.test(data);\n    }\n    static ToString(buffer, enc = \"utf8\") {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.ToUtf8String(buf);\n            case \"binary\":\n                return this.ToBinary(buf);\n            case \"hex\":\n                return this.ToHex(buf);\n            case \"base64\":\n                return this.ToBase64(buf);\n            case \"base64url\":\n                return this.ToBase64Url(buf);\n            case \"utf16le\":\n                return Utf16Converter.toString(buf, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buf);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static FromString(str, enc = \"utf8\") {\n        if (!str) {\n            return new ArrayBuffer(0);\n        }\n        switch (enc.toLowerCase()) {\n            case \"utf8\":\n                return this.FromUtf8String(str);\n            case \"binary\":\n                return this.FromBinary(str);\n            case \"hex\":\n                return this.FromHex(str);\n            case \"base64\":\n                return this.FromBase64(str);\n            case \"base64url\":\n                return this.FromBase64Url(str);\n            case \"utf16le\":\n                return Utf16Converter.fromString(str, true);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(str);\n            default:\n                throw new Error(`Unknown type of encoding '${enc}'`);\n        }\n    }\n    static ToBase64(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        if (typeof btoa !== \"undefined\") {\n            const binary = this.ToString(buf, \"binary\");\n            return btoa(binary);\n        }\n        else {\n            return Buffer.from(buf).toString(\"base64\");\n        }\n    }\n    static FromBase64(base64) {\n        const formatted = this.formatString(base64);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64(formatted)) {\n            throw new TypeError(\"Argument 'base64Text' is not Base64 encoded\");\n        }\n        if (typeof atob !== \"undefined\") {\n            return this.FromBinary(atob(formatted));\n        }\n        else {\n            return new Uint8Array(Buffer.from(formatted, \"base64\")).buffer;\n        }\n    }\n    static FromBase64Url(base64url) {\n        const formatted = this.formatString(base64url);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isBase64Url(formatted)) {\n            throw new TypeError(\"Argument 'base64url' is not Base64Url encoded\");\n        }\n        return this.FromBase64(this.Base64Padding(formatted.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\")));\n    }\n    static ToBase64Url(data) {\n        return this.ToBase64(data).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/\\=/g, \"\");\n    }\n    static FromUtf8String(text, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.FromBinary(text);\n            case \"utf8\":\n                return Utf8Converter.fromString(text);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.fromString(text);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.fromString(text, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static ToUtf8String(buffer, encoding = Convert.DEFAULT_UTF8_ENCODING) {\n        switch (encoding) {\n            case \"ascii\":\n                return this.ToBinary(buffer);\n            case \"utf8\":\n                return Utf8Converter.toString(buffer);\n            case \"utf16\":\n            case \"utf16be\":\n                return Utf16Converter.toString(buffer);\n            case \"utf16le\":\n            case \"usc2\":\n                return Utf16Converter.toString(buffer, true);\n            default:\n                throw new Error(`Unknown type of encoding '${encoding}'`);\n        }\n    }\n    static FromBinary(text) {\n        const stringLength = text.length;\n        const resultView = new Uint8Array(stringLength);\n        for (let i = 0; i < stringLength; i++) {\n            resultView[i] = text.charCodeAt(i);\n        }\n        return resultView.buffer;\n    }\n    static ToBinary(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let res = \"\";\n        for (let i = 0; i < buf.length; i++) {\n            res += String.fromCharCode(buf[i]);\n        }\n        return res;\n    }\n    static ToHex(buffer) {\n        const buf = BufferSourceConverter.toUint8Array(buffer);\n        let result = \"\";\n        const len = buf.length;\n        for (let i = 0; i < len; i++) {\n            const byte = buf[i];\n            if (byte < 16) {\n                result += \"0\";\n            }\n            result += byte.toString(16);\n        }\n        return result;\n    }\n    static FromHex(hexString) {\n        let formatted = this.formatString(hexString);\n        if (!formatted) {\n            return new ArrayBuffer(0);\n        }\n        if (!Convert.isHex(formatted)) {\n            throw new TypeError(\"Argument 'hexString' is not HEX encoded\");\n        }\n        if (formatted.length % 2) {\n            formatted = `0${formatted}`;\n        }\n        const res = new Uint8Array(formatted.length / 2);\n        for (let i = 0; i < formatted.length; i = i + 2) {\n            const c = formatted.slice(i, i + 2);\n            res[i / 2] = parseInt(c, 16);\n        }\n        return res.buffer;\n    }\n    static ToUtf16String(buffer, littleEndian = false) {\n        return Utf16Converter.toString(buffer, littleEndian);\n    }\n    static FromUtf16String(text, littleEndian = false) {\n        return Utf16Converter.fromString(text, littleEndian);\n    }\n    static Base64Padding(base64) {\n        const padCount = 4 - (base64.length % 4);\n        if (padCount < 4) {\n            for (let i = 0; i < padCount; i++) {\n                base64 += \"=\";\n            }\n        }\n        return base64;\n    }\n    static formatString(data) {\n        return (data === null || data === void 0 ? void 0 : data.replace(/[\\n\\r\\t ]/g, \"\")) || \"\";\n    }\n}\nConvert.DEFAULT_UTF8_ENCODING = \"utf8\";\n\nfunction assign(target, ...sources) {\n    const res = arguments[0];\n    for (let i = 1; i < arguments.length; i++) {\n        const obj = arguments[i];\n        for (const prop in obj) {\n            res[prop] = obj[prop];\n        }\n    }\n    return res;\n}\nfunction combine(...buf) {\n    const totalByteLength = buf.map((item) => item.byteLength).reduce((prev, cur) => prev + cur);\n    const res = new Uint8Array(totalByteLength);\n    let currentPos = 0;\n    buf.map((item) => new Uint8Array(item)).forEach((arr) => {\n        for (const item2 of arr) {\n            res[currentPos++] = item2;\n        }\n    });\n    return res.buffer;\n}\nfunction isEqual(bytes1, bytes2) {\n    if (!(bytes1 && bytes2)) {\n        return false;\n    }\n    if (bytes1.byteLength !== bytes2.byteLength) {\n        return false;\n    }\n    const b1 = new Uint8Array(bytes1);\n    const b2 = new Uint8Array(bytes2);\n    for (let i = 0; i < bytes1.byteLength; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexports.BufferSourceConverter = BufferSourceConverter;\nexports.Convert = Convert;\nexports.assign = assign;\nexports.combine = combine;\nexports.isEqual = isEqual;\n", null, null, null, null, null, null, null, "/**\n * @file Checks browser for essential features\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nconst warning = document.querySelector('#warning')!;\n\nconst supportWarnings: string[] = [];\n\n// BigInt support\nconst BIGINT_SUPPORTED = (() => {\n  try {\n    if (window.BigInt instanceof Function && 1n) return true;\n  } catch (e) { /* do nothing */ }\n  return false;\n})();\nif (!BIGINT_SUPPORTED) supportWarnings.push('BigInt is not supported in this browser. Many operations, including SRP, will fail.');\n\n// IndexedDB support\nconst IDB_SUPPORTED = (() => {\n  try {\n    if (window.indexedDB instanceof IDBFactory) return true;\n  } catch (e) { /* do nothing */ }\n  return false;\n})();\nif (!IDB_SUPPORTED) supportWarnings.push('IndexedDB is not supported in this browser. Cryptographic keys cannot be stored.');\n\n// Secure Random support via WebCrypto API\nconst SECURE_RANDOM_SUPPORTED = (() => {\n  try {\n    if (window.crypto.getRandomValues instanceof Function) return true;\n  } catch (e) { /* do nothing */ }\n  return false;\n})();\nif (!SECURE_RANDOM_SUPPORTED) supportWarnings.push('This browser cannot securely source random data. Many operations will fail. The outputs of any operations that do not fail should not be trusted.');\n\n// Subtle crypto support via WebCrypto API\nconst SUBTLE_CRYPTO_SUPPORTED = (() => {\n  try {\n    if (window.crypto.subtle.constructor instanceof Function) return true;\n  } catch (e) { /* do nothing */ }\n  return false;\n})();\nif (!SUBTLE_CRYPTO_SUPPORTED) supportWarnings.push('The WebCrypto API subtle crypto interface is not available. Is this page being delivered over HTTPS? Many operations will fail. The outputs of any operations that do not fail should not be trusted.');\n\nif (supportWarnings.length) {\n  warning.classList.add('active');\n\n  const content = warning.querySelector('.content')!;\n  supportWarnings.forEach((item) => {\n    const p = document.createElement('p');\n    p.textContent = item;\n    content.appendChild(p);\n  });\n}\n\nexport {\n  BIGINT_SUPPORTED,\n  IDB_SUPPORTED,\n  SECURE_RANDOM_SUPPORTED,\n  SUBTLE_CRYPTO_SUPPORTED,\n};\n", "/**\n * @file Contains functionality for the animated loader\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * The loader is a 1 rem thick bar at the top of the page which\n * means to convey a sense of progress for long operations.\n */\n\nconst loader = document.querySelector<HTMLElement>('#loader');\n\n/**\n * Fill the progress bar at the top of the page\n * @param pct Percentage to fill (0 to 100)\n */\nconst load = (pct: number) => {\n  if (loader && pct >= 0 && pct <= 100) loader.style.width = `${pct}%`;\n  if (pct === 0) loader?.classList.remove('animate');\n  else loader?.classList.add('animate');\n};\n\nexport default load;\n", "/**\n * @file Contains functionality for handling and conveying errors to user\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport load from './loader';\n\nconst errorElement = document.querySelector('#error')!;\nconst content = errorElement.querySelector('.content')!;\n\nconst handleError = (error: unknown) => {\n  let err;\n  if (!(error instanceof Error)) err = new Error(String(error));\n  else err = error;\n  errorElement.classList.add('active');\n  content.textContent = err.message;\n  load(100);\n};\n\nconst clearError = () => {\n  content.textContent = '';\n  errorElement.classList.remove('active');\n};\n\nexport { handleError, clearError };\n", "/**\n * @file Contains functionality for encoding and decoding raw data\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport * as bcrypt from 'bcryptjs';\n\nenum ENCODING {\n  // Non-transformable encodings\n  UNKNOWN = 0,\n  BOOLEAN = -1,\n  BIGINT = -2,\n  INTEGER = -3,\n  UUID = -4,\n  JSON = -5,\n  PEM = -6,\n\n  // Password Hashing Formats\n  PHC_STRING = -100,\n  MODULAR_CRYPT_FORMAT = -200,\n\n  // Transformable encodings (corresponding to radix)\n  BINARY = 2,\n  OCTAL = 8,\n  HEXADECIMAL = 16,\n  BASE64 = 64, // RFC 4648\n  BASE64_CRYPT = 640, // Nonstandard OpenBSD alphabet used by crypt, bcrypt\n  'UTF-8' = 100,\n}\n\n/**\n * Encode raw binary data into a string\n *\n * @param rawData Source data to encode\n * @param radix The base representation of the encoding\n * @returns string\n */\nconst encode = (rawData: ArrayBuffer, radix: ENCODING): string => {\n  const array = new Uint8Array(rawData);\n\n  if (radix === ENCODING.BASE64) {\n    return btoa(array.reduce((str, byte) => str + String.fromCharCode(byte), ''));\n  }\n\n  if (radix === ENCODING.BASE64_CRYPT) {\n    return bcrypt.encodeBase64(array, array.length);\n  }\n\n  if (radix === ENCODING['UTF-8']) return (new TextDecoder()).decode(rawData);\n\n  let padding: number = 0;\n  if (radix === ENCODING.BINARY) padding = 8;\n  if (radix === ENCODING.OCTAL) padding = 3;\n  if (radix === ENCODING.HEXADECIMAL) padding = 2;\n  if (!padding) throw new Error(`Radix ${radix} is not supported`);\n\n  return array.reduce<string>((str, byte) => str + byte.toString(radix).padStart(padding, '0'), '');\n};\n\n/**\n * Decode a string into raw binary data\n *\n * @param encodedData Source data to decode\n * @param radix The base representation of the encoding\n * @returns ArrayBuffer\n */\nconst decode = (encodedData: string, radix: ENCODING): ArrayBuffer => {\n  let array: Uint8Array;\n\n  if (radix === ENCODING.BOOLEAN) {\n    // This operation will always return a length of 1 byte, which is the\n    // minimum length of a boolean value since 1 byte is the standard\n    // minimum addressable memory size in modern CPU architectures\n    array = new Uint8Array(1);\n\n    // we want an exception if the encoded data is not stringified boolean\n    array[0] = Number(JSON.parse(encodedData)); // 1 or 0\n    return array.buffer;\n  }\n\n  if (radix === ENCODING.BASE64) {\n    const str = atob(encodedData);\n    array = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i += 1) {\n      array[i] = str.charCodeAt(i);\n    }\n    return array.buffer;\n  }\n\n  if (radix === ENCODING.BASE64_CRYPT) {\n    const arr = bcrypt.decodeBase64(encodedData, Infinity);\n    return Uint8Array.from(arr).buffer;\n  }\n\n  if (radix === ENCODING.BIGINT) {\n    // Assumes big endian byte order\n    let int = BigInt(encodedData);\n    const bytes = [];\n    while (int > 0) {\n      // eslint-disable-next-line no-bitwise\n      bytes.push(Number(int & 0xffn));\n      // eslint-disable-next-line no-bitwise\n      int >>= 8n;\n    }\n    return Uint8Array.from(bytes.reverse()).buffer;\n  }\n\n  if (radix === ENCODING.UUID) {\n    const data = encodedData.replace(/-/g, '');\n    array = new Uint8Array(data.length / 2);\n    data.match(/.{1,2}/g)?.forEach((byte, i) => { array[i] = parseInt(byte, 16); });\n    return array.buffer;\n  }\n\n  if (radix === ENCODING['UTF-8']) return (new TextEncoder()).encode(encodedData);\n\n  let separator: number = 0;\n  if (radix === ENCODING.BINARY) separator = 8;\n  if (radix === ENCODING.OCTAL) separator = 3;\n  if (radix === ENCODING.HEXADECIMAL) separator = 2;\n  if (!separator) throw new Error(`Radix ${radix} is not supported`);\n\n  const length = encodedData.length / separator;\n  array = new Uint8Array(length);\n\n  encodedData.match(new RegExp(`.{1,${separator}}`, 'g'))\n    ?.forEach((byte, i) => { array[i] = parseInt(byte, radix); });\n\n  return array.buffer;\n};\n\n/**\n * Guess the encoding of a string based on character groupings\n *\n * @param encodedData Source data\n * @returns encoding radix\n */\nconst guessEncoding = (encodedData: string): ENCODING => {\n  // Start with more restrictive/confident character sets and work our way down\n  if (encodedData.toLowerCase() === 'true' || encodedData.toLowerCase() === 'false') return ENCODING.BOOLEAN;\n\n  if (/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i.test(encodedData)) return ENCODING.UUID;\n  if (/^([01]{8})+$/.test(encodedData)) return ENCODING.BINARY;\n  if (/^([0-7]{3})+$/.test(encodedData)) return ENCODING.OCTAL;\n  if (/^([0-9a-f]{2})+$|^([0-9A-F]{2})+$/.test(encodedData)) return ENCODING.HEXADECIMAL;\n  if (/^([0-9a-zA-Z+/]{4})*[0-9a-zA-Z+/]{2}[0-9a-zA-Z+/=]{2}$/.test(encodedData)) return ENCODING.BASE64;\n  if (/^-{5}BEGIN .+-{5}(\\r\\n?|\\n)([0-9a-zA-Z+/]{4})*[0-9a-zA-Z+/]{2}[0-9a-zA-Z+/=]{2}(\\r\\n?|\\n)-{5}END .+-{5}(\\r\\n?|\\n)?$/.test(encodedData)) return ENCODING.PEM;\n\n  // Base64 crypt uses a dot instead of a plus, and has no padding or groupings\n  if (/^[0-9a-zA-Z./]+$/.test(encodedData)) return ENCODING.BASE64_CRYPT;\n\n  // Since any javascript primitive in a string is valid JSON, let's be more restrictive\n  if (/{/.test(encodedData)) {\n    try {\n      JSON.parse(encodedData);\n      return ENCODING.JSON;\n    } catch (e) { /* do nothing */ }\n  }\n\n  //\n  // Password Hashing Formats\n  //\n\n  // PHC String Format\n  // @link https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md\n  // Note: I made the regexp look for identifiers more than three characters in\n  //   length to reduce occasional PHC String matches from clearly Modular Crypt\n  //   format strings.\n  if (/^\\$[a-z0-9-]{4,32}(\\$v=[0-9]+)?(\\$[a-z0-9-]{1,32}=[a-zA-Z0-9/+.-]+(,[a-z0-9-]{1,32}=[a-zA-Z0-9/+.-]+)*)?(\\$[a-zA-Z0-9/+.-]+(\\$[a-zA-Z0-9/+]{2,})?)?$/.test(encodedData)) {\n    return ENCODING.PHC_STRING;\n  }\n\n  // Modular Crypt Format (deprecated in 2016 in favor of PHC)\n  // @link https://passlib.readthedocs.io/en/stable/modular_crypt_format.html\n  if (/^\\$[a-zA-Z0-9]+(\\$[a-zA-Z0-9./]+)+$/.test(encodedData)) return ENCODING.MODULAR_CRYPT_FORMAT;\n\n  return ENCODING.UNKNOWN;\n};\n\nexport {\n  ENCODING, decode, encode, guessEncoding,\n};\n", "/**\n * @file Contains HTML SVG elements for dynamical element creation\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * All icons are from Phosphor, except the chevrons which are from\n * Material Design.\n */\n\nconst CHEVRON_SVG = '<svg viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M7.41 8.58L12 13.17l4.59-4.59L18 10l-6 6l-6-6z\"></path></svg>';\nconst CODE_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M240 128c-64 0 0 88-64 88H80c-64 0 0-88-64-88c64 0 0-88 64-88h96c64 0 0 88 64 88\" opacity=\".2\"/><path d=\"M43.18 128a29.78 29.78 0 0 1 8 10.26c4.8 9.9 4.8 22 4.8 33.74c0 24.31 1 36 24 36a8 8 0 0 1 0 16c-17.48 0-29.32-6.14-35.2-18.26c-4.8-9.9-4.8-22-4.8-33.74c0-24.31-1-36-24-36a8 8 0 0 1 0-16c23 0 24-11.69 24-36c0-11.72 0-23.84 4.8-33.74C50.68 38.14 62.52 32 80 32a8 8 0 0 1 0 16c-23 0-24 11.69-24 36c0 11.72 0 23.84-4.8 33.74A29.78 29.78 0 0 1 43.18 128M240 120c-23 0-24-11.69-24-36c0-11.72 0-23.84-4.8-33.74C205.32 38.14 193.48 32 176 32a8 8 0 0 0 0 16c23 0 24 11.69 24 36c0 11.72 0 23.84 4.8 33.74a29.78 29.78 0 0 0 8 10.26a29.78 29.78 0 0 0-8 10.26c-4.8 9.9-4.8 22-4.8 33.74c0 24.31-1 36-24 36a8 8 0 0 0 0 16c17.48 0 29.32-6.14 35.2-18.26c4.8-9.9 4.8-22 4.8-33.74c0-24.31 1-36 24-36a8 8 0 0 0 0-16\"/></g></svg>';\nconst COPY_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M184 72v144H40V72Z\" opacity=\".2\"/><path d=\"M184 64H40a8 8 0 0 0-8 8v144a8 8 0 0 0 8 8h144a8 8 0 0 0 8-8V72a8 8 0 0 0-8-8m-8 144H48V80h128Zm48-168v144a8 8 0 0 1-16 0V48H72a8 8 0 0 1 0-16h144a8 8 0 0 1 8 8\"/></g></svg>';\nconst DISK_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M216 91.31V208a8 8 0 0 1-8 8h-32v-64a8 8 0 0 0-8-8H88a8 8 0 0 0-8 8v64H48a8 8 0 0 1-8-8V48a8 8 0 0 1 8-8h116.69a8 8 0 0 1 5.65 2.34l43.32 43.31a8 8 0 0 1 2.34 5.66\" opacity=\".2\"/><path d=\"M219.31 80L176 36.69A15.86 15.86 0 0 0 164.69 32H48a16 16 0 0 0-16 16v160a16 16 0 0 0 16 16h160a16 16 0 0 0 16-16V91.31A15.86 15.86 0 0 0 219.31 80M168 208H88v-56h80Zm40 0h-24v-56a16 16 0 0 0-16-16H88a16 16 0 0 0-16 16v56H48V48h116.69L208 91.31ZM160 72a8 8 0 0 1-8 8H96a8 8 0 0 1 0-16h56a8 8 0 0 1 8 8\"/></g></svg>';\nconst DONE_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M232 56v144a16 16 0 0 1-16 16H40a16 16 0 0 1-16-16V56a16 16 0 0 1 16-16h176a16 16 0 0 1 16 16\" opacity=\".2\"/><path d=\"m205.66 85.66l-96 96a8 8 0 0 1-11.32 0l-40-40a8 8 0 0 1 11.32-11.32L104 164.69l90.34-90.35a8 8 0 0 1 11.32 11.32\"/></g></svg>';\nconst DOUBLE_CHEVRON_SVG = '<svg viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"m17.16 7.59l-5.66 5.66l-5.66-5.66l.71-.7l4.95 4.95l4.95-4.95zm0 4l-5.66 5.66l-5.66-5.66l.71-.7l4.95 4.95l4.95-4.95z\"/></svg>';\nconst DOWNLOAD_BINARY_SVG = '<svg viewBox=\"0 0 16 16\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"m10.57 1.14l3.28 3.3l.15.36v9.7l-.5.5h-11l-.5-.5v-13l.5-.5h7.72zM3 2v12h10V5l-3-3zm1.46 4.052c0 1.287.458 1.93 1.374 1.93c.457 0 .807-.173 1.05-.52c.246-.348.368-.847.368-1.499C7.252 4.654 6.805 4 5.91 4c-.471 0-.831.175-1.08.526c-.247.35-.37.858-.37 1.526m.862-.022c0-.922.183-1.383.55-1.383c.344 0 .516.448.516 1.343s-.176 1.343-.527 1.343c-.36 0-.54-.434-.54-1.303zm3.187 1.886h2.435v-.672h-.792V4l-1.665.336v.687l.82-.177v2.398h-.798zm-1.337 5H4.736v-.672h.798V9.846l-.82.177v-.687L6.38 9v3.244h.792v.671zm1.035-1.931c0 1.287.458 1.93 1.375 1.93c.457 0 .807-.173 1.05-.52c.245-.348.368-.847.368-1.499c0-1.309-.448-1.963-1.343-1.963c-.47 0-.83.175-1.08.526c-.246.35-.37.858-.37 1.526m.862-.022c0-.922.184-1.383.55-1.383c.344 0 .516.448.516 1.343s-.175 1.343-.526 1.343c-.36 0-.54-.434-.54-1.303\" clip-rule=\"evenodd\"/></svg>';\nconst DOWNLOAD_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M232 136v64a8 8 0 0 1-8 8H32a8 8 0 0 1-8-8v-64a8 8 0 0 1 8-8h192a8 8 0 0 1 8 8\" opacity=\".2\"/><path d=\"M240 136v64a16 16 0 0 1-16 16H32a16 16 0 0 1-16-16v-64a16 16 0 0 1 16-16h40a8 8 0 0 1 0 16H32v64h192v-64h-40a8 8 0 0 1 0-16h40a16 16 0 0 1 16 16m-117.66-2.34a8 8 0 0 0 11.32 0l48-48a8 8 0 0 0-11.32-11.32L136 108.69V24a8 8 0 0 0-16 0v84.69L85.66 74.34a8 8 0 0 0-11.32 11.32ZM200 168a12 12 0 1 0-12 12a12 12 0 0 0 12-12\"/></g></svg>';\nconst KEY_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M232 96a72 72 0 0 1-98.83 66.83L120 176H96v24H72v24H32v-40l61.17-61.17A72 72 0 1 1 232 96\" opacity=\".2\"/><path d=\"M160 16a80.07 80.07 0 0 0-76.09 104.78l-57.57 57.56A8 8 0 0 0 24 184v40a8 8 0 0 0 8 8h40a8 8 0 0 0 8-8v-16h16a8 8 0 0 0 8-8v-16h16a8 8 0 0 0 5.66-2.34l9.56-9.57A80 80 0 1 0 160 16m0 144a63.7 63.7 0 0 1-23.65-4.51a8 8 0 0 0-8.84 1.68L116.69 168H96a8 8 0 0 0-8 8v16H72a8 8 0 0 0-8 8v16H40v-28.69l58.83-58.82a8 8 0 0 0 1.68-8.84A64 64 0 1 1 160 160m32-84a12 12 0 1 1-12-12a12 12 0 0 1 12 12\"/></g></svg>';\nconst KEYS_SVG = '<svg viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M261.1 24.8c-6.3 0-12.7.43-19.2 1.18c-34.6 4.01-64.8 17.59-86.1 37.06c-21.4 19.48-34.2 45.56-31 73.16c2.8 24.6 17.8 45.2 39.1 59.4c2.6-6.2 5.9-11.9 9.2-16.5c-17.6-11.6-28.4-27.3-30.4-45c-2.3-19.7 6.7-39.58 24.8-56.14c18.2-16.57 45.3-29.06 76.6-32.68c31.3-3.63 60.6 2.33 82.1 14.3c21.4 11.98 34.7 29.31 37 48.92c2.2 19.3-6.2 38.8-23.4 55a69.91 69.91 0 0 0-35.4-10.6h-2.2c-5.1.1-10.1.7-15.3 1.8c-37.5 8.7-60.8 45.5-52.2 82.7c5.3 23 21.6 40.6 42.2 48.5l39.7 172.2l47 29.1l29.5-46.7l-23.5-14.5l14.8-23.4l-23.5-14.6l14.7-23.3l-23.5-14.6l14.8-23.4l-13.5-58.4c15.1-16.1 22-39.1 16.7-62.2c-2.7-11.7-8.2-22-15.8-30.4c18.9-19 29.8-43.5 26.8-69.2c-3.2-27.55-21.6-50.04-46.9-64.11c-20.5-11.45-45.8-17.77-73.1-17.59m-20.2 135.5c-25.9 1.1-49.9 16.8-60.4 42.2c-9.1 21.9-6 45.7 6.2 64.2l-67.8 163l21.3 51l51.2-20.9l-10.7-25.5l25.6-10.4l-10.6-25.5l25.6-10.4l-10.7-25.5l25.6-10.5l22.8-54.8c-20.5-11.5-36.2-31.2-41.9-55.8c-6.9-30.3 3.1-60.6 23.8-81.1m58 7.2c8.9-.1 17.3 3.5 23.4 9.4c-5.5 3.5-11.6 6.6-18 9.4c-1.6-.6-3.3-.8-5.1-.8c-.6 0-1.1 0-1.6.1c-7 .8-12.2 6.1-13.1 12.7c-.2 1-.2 2-.2 2.9c.1.3.1.7.1 1c1 8.4 8.3 14.2 16.7 13.2c6.8-.8 12-5.9 13-12.3c6.2-2.8 12-5.9 17.5-9.4c.2 1 .4 2 .5 3c2.1 18-11 34.5-29 36.6c-17.9 2.1-34.5-11-36.5-29c-2.1-18 11-34.5 29-36.6c1.1-.1 2.2-.2 3.3-.2\"/></svg>';\nconst PRIVATE_EXPORT_SVG = '<svg viewBox=\"0 0 48 48\"><defs><mask id=\"ipTPeopleDownload0\"><g fill=\"none\" stroke=\"#fff\" stroke-linejoin=\"round\" stroke-width=\"4\"><path fill=\"#555\" d=\"M19 20a7 7 0 1 0 0-14a7 7 0 0 0 0 14Z\"/><path stroke-linecap=\"round\" d=\"M37 40V30m-4 6l4 4l4-4m-14-8h-8.2c-4.48 0-6.72 0-8.432.872a8 8 0 0 0-3.496 3.496C6 34.08 6 36.32 6 40.8V42h21\"/></g></mask></defs><path fill=\"currentColor\" d=\"M0 0h48v48H0z\" mask=\"url(#ipTPeopleDownload0)\"/></svg>';\nconst PUBLIC_EXPORT_SVG = '<svg viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"><path d=\"M21 12a9 9 0 1 0-9 9M3.6 9h16.8M3.6 15H12\"/><path d=\"M11.578 3a17 17 0 0 0 0 18M12.5 3c1.719 2.755 2.5 5.876 2.5 9m3 2v7m-3-3l3 3l3-3\"/></g></svg>';\nconst RULER_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M229.66 90.34L90.34 229.66a8 8 0 0 1-11.31 0L26.34 177a8 8 0 0 1 0-11.31L165.66 26.34a8 8 0 0 1 11.31 0L229.66 79a8 8 0 0 1 0 11.34\" opacity=\".2\"/><path d=\"m235.32 73.37l-52.69-52.68a16 16 0 0 0-22.63 0L20.68 160a16 16 0 0 0 0 22.63l52.69 52.68a16 16 0 0 0 22.63 0L235.32 96a16 16 0 0 0 0-22.63M84.68 224L32 171.31l32-32l26.34 26.35a8 8 0 0 0 11.32-11.32L75.31 128L96 107.31l26.34 26.35a8 8 0 0 0 11.32-11.32L107.31 96L128 75.31l26.34 26.35a8 8 0 0 0 11.32-11.32L139.31 64l32-32L224 84.69Z\"/></g></svg>';\nconst TEXT_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M200 56v136a8 8 0 0 1-8 8H64a8 8 0 0 1-8-8V56Z\" opacity=\".2\"/><path d=\"M208 56v32a8 8 0 0 1-16 0V64h-56v128h24a8 8 0 0 1 0 16H96a8 8 0 0 1 0-16h24V64H64v24a8 8 0 0 1-16 0V56a8 8 0 0 1 8-8h144a8 8 0 0 1 8 8\"/></g></svg>';\nconst TRASH_SVG = '<svg viewBox=\"0 0 256 256\"><g fill=\"currentColor\"><path d=\"M200 56v152a8 8 0 0 1-8 8H64a8 8 0 0 1-8-8V56Z\" opacity=\".2\"/><path d=\"M216 48h-40v-8a24 24 0 0 0-24-24h-48a24 24 0 0 0-24 24v8H40a8 8 0 0 0 0 16h8v144a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16V64h8a8 8 0 0 0 0-16M96 40a8 8 0 0 1 8-8h48a8 8 0 0 1 8 8v8H96Zm96 168H64V64h128Zm-80-104v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0m48 0v64a8 8 0 0 1-16 0v-64a8 8 0 0 1 16 0\"/></g></svg>';\n\nexport {\n  CHEVRON_SVG,\n  CODE_SVG,\n  COPY_SVG,\n  DISK_SVG,\n  DONE_SVG,\n  DOUBLE_CHEVRON_SVG,\n  DOWNLOAD_BINARY_SVG,\n  DOWNLOAD_SVG,\n  KEY_SVG,\n  KEYS_SVG,\n  PRIVATE_EXPORT_SVG,\n  PUBLIC_EXPORT_SVG,\n  RULER_SVG,\n  TEXT_SVG,\n  TRASH_SVG,\n};\n", "/**\n * @file Contains functionality for showing operation results\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * The result element is separate from functionality-specific sections\n * and intends to display the output of some operation in a fixed-width\n * font face, while providing common UX elements, like copy.\n */\n\nimport { clearError, handleError } from './error';\nimport load from './loader';\nimport {\n  ENCODING, decode, encode, guessEncoding,\n} from './encode';\nimport {\n  DONE_SVG, COPY_SVG, TEXT_SVG, RULER_SVG, CODE_SVG, DOUBLE_CHEVRON_SVG,\n  DOWNLOAD_SVG, DOWNLOAD_BINARY_SVG, CHEVRON_SVG,\n} from './svg';\n\nconst resultElement = document.querySelector<HTMLElement>('#results')!;\n\n/**\n * Trigger a file download\n * @param data Data to download\n * @param filename Suggested filename\n * @param extension Suggested file extension\n */\nconst downloadEvent = (\n  data: string | ArrayBuffer,\n  filename?: string,\n  extension?: string | null,\n) => async () => {\n  let array: ArrayBuffer;\n  let ext = extension === null ? '' : (extension || 'bin');\n\n  if (typeof data === 'string') {\n    array = (new TextEncoder()).encode(data);\n\n    if (!extension) {\n      const encoding = guessEncoding(data);\n      switch (encoding) {\n        case ENCODING.JSON: ext = 'json'; break;\n        case ENCODING.PEM: ext = 'pem'; break;\n        default: ext = 'txt';\n      }\n    }\n  } else array = data;\n\n  const blob = new Blob([array], { type: 'application/octet-stream' });\n  const uri = window.URL.createObjectURL(blob);\n\n  const a = document.createElement('a');\n  a.href = uri;\n  const suffix = ext ? `.${ext}` : '';\n  a.download = filename ? `${filename}${suffix}` : `cryptotools-result${suffix}`;\n  document.body.appendChild(a);\n  a.click();\n\n  // Cleanup\n  document.body.removeChild(a);\n  window.URL.revokeObjectURL(uri);\n};\n\ntype BuildResultData = {\n  label: string,\n  value: string,\n  encoding: ENCODING,\n  bitLength: number,\n  rawData: string | ArrayBuffer,\n  filename?: string,\n  extension?: string | null,\n};\n\n/**\n * Build result element\n * @param label Title of result\n * @param value The encoded result\n * @param encoding The encoding used\n * @param bitLength The length of the raw data\n * @param rawData The unencoded, raw data\n * @param filename The suggested download filename\n * @param extension The suggested download file extension\n */\nconst buildResultElement = ({\n  label, value, encoding, bitLength, rawData, filename, extension,\n}: BuildResultData) => {\n  const container = document.createElement('div');\n  container.classList.add('result');\n\n  const h2 = document.createElement('h2');\n  h2.textContent = label;\n  container.appendChild(h2);\n\n  const content = document.createElement('div');\n  content.classList.add('content');\n  content.textContent = `${value.substring(0, 1000)}${value.length > 1000 ? '\u2026' : ''}`;\n  container.appendChild(content);\n\n  const stats = document.createElement('div');\n  stats.classList.add('stats');\n\n  const statsItems = [{\n    icon: TEXT_SVG,\n    tooltip: 'Character length',\n    statValue: `${value.length.toLocaleString()} characters`,\n  }, {\n    icon: RULER_SVG,\n    tooltip: 'Output length',\n    statValue: `${bitLength.toLocaleString()} bits`,\n  }];\n\n  const canChangeEncoding = encoding > 0 && typeof rawData === 'object';\n\n  const actionItems = [{\n    tooltip: 'Download Text',\n    tooltipAfter: 'Downloaded!',\n    icon: DOWNLOAD_SVG,\n    callback: downloadEvent(value, filename, canChangeEncoding ? `${ENCODING[encoding].toLocaleLowerCase()}.txt` : extension),\n  }, {\n    tooltip: 'Copy',\n    tooltipAfter: 'Copied!',\n    icon: COPY_SVG,\n    callback: () => navigator.clipboard.writeText(value),\n  }];\n\n  // Positive radixes are safe to encode and decode\n  if (canChangeEncoding) {\n    // First, add the Download Raw Data action button\n    actionItems.unshift({\n      tooltip: 'Download Raw Data',\n      tooltipAfter: 'Downloaded!',\n      icon: DOWNLOAD_BINARY_SVG,\n      callback: downloadEvent(rawData, filename, extension),\n    });\n\n    // Then add encoding transformation control\n    const formLabel = document.createElement('label');\n    const fieldLabel = document.createElement('span');\n    formLabel.classList.add('control');\n    fieldLabel.classList.add('label');\n    fieldLabel.textContent = 'Encoding';\n    formLabel.innerHTML = CODE_SVG;\n    formLabel.insertBefore(fieldLabel, formLabel.firstChild);\n\n    const select = document.createElement('select');\n\n    // Changing the encoding requires a rerender of the section to ensure\n    // stats and event handlers are referencing the correct data\n    select.addEventListener('change', () => {\n      const radix = Number(select.selectedOptions[0].value);\n\n      try {\n        const newValue = encode(rawData, radix);\n        const result = buildResultElement({\n          label, value: newValue, encoding: radix, bitLength, rawData, filename, extension,\n        });\n        container.replaceWith(result);\n      } catch (e) { handleError(e); }\n    });\n\n    Object.entries(ENCODING).forEach(([labelContent, radix]) => {\n      if (typeof radix === 'number' && radix > 0) {\n        const option = document.createElement('option');\n        option.textContent = labelContent.toLowerCase();\n        option.value = String(radix);\n        if (radix === encoding) option.selected = true;\n        select.appendChild(option);\n      }\n    });\n\n    formLabel.appendChild(select);\n\n    // Chevron dropdown\n    const chevron = document.createElement('span');\n    chevron.innerHTML = CHEVRON_SVG;\n    formLabel.appendChild(chevron.firstChild!);\n\n    stats.appendChild(formLabel);\n  } else {\n    statsItems.unshift({\n      icon: CODE_SVG,\n      tooltip: 'Encoding',\n      statValue: ENCODING[encoding].toLowerCase(),\n    });\n  }\n\n  statsItems.forEach(({ icon, tooltip, statValue }) => {\n    const stat = document.createElement('div');\n    stat.classList.add('datum');\n    if (tooltip) stat.dataset.tooltip = tooltip;\n    stat.innerHTML = icon;\n\n    const span = document.createElement('span');\n    span.textContent = statValue;\n\n    stat.appendChild(span);\n    stats.appendChild(stat);\n  });\n  container.appendChild(stats);\n\n  const actions = document.createElement('div');\n  actions.classList.add('links');\n  stats.appendChild(actions);\n\n  actionItems.forEach(({\n    tooltip, tooltipAfter, icon, callback,\n  }) => {\n    const a = document.createElement('a');\n    a.dataset.tooltip = tooltip;\n    a.href = '#';\n    a.addEventListener('click', async (event) => {\n      event.preventDefault();\n\n      try {\n        await callback();\n\n        a.innerHTML = DONE_SVG;\n        a.dataset.tooltip = tooltipAfter;\n        setTimeout(() => {\n          a.innerHTML = icon;\n          a.dataset.tooltip = tooltip;\n        }, 5000); // revert icon after five seconds\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n      }\n    });\n\n    a.innerHTML = icon;\n    actions.appendChild(a);\n  });\n\n  return container;\n};\n\ninterface Result {\n  label: string;\n  defaultEncoding?: ENCODING;\n  value: ArrayBuffer | string;\n  filename?: string;\n  extension?: string | null;\n}\n\nconst showResults = (results: Result[]) => {\n  resultElement.innerHTML = DOUBLE_CHEVRON_SVG; // remove any previous results\n  clearError(); // as well as any previous error\n  resultElement.scrollIntoView({\n    block: 'start',\n    behavior: 'smooth',\n  });\n\n  results.forEach(({\n    label, value, defaultEncoding, filename, extension,\n  }) => {\n    let encoding: ENCODING;\n    let content: string;\n    let byteLength: number;\n\n    if (value instanceof ArrayBuffer) {\n      encoding = defaultEncoding || ENCODING.HEXADECIMAL;\n      content = encode(value, encoding);\n      byteLength = value.byteLength;\n    } else {\n      content = value;\n\n      // Try determining byte length\n      encoding = defaultEncoding || guessEncoding(value);\n      try {\n        byteLength = decode(value, encoding).byteLength;\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn(`Cannot calculate raw data byte length for \"${label}\" because no decoder has been implemented for \\`${ENCODING[encoding].toLowerCase()}\\`. Assuming utf-8 encoded text instead.`);\n        byteLength = (new TextEncoder()).encode(value).byteLength; // assume utf-8 encoded text\n      }\n    }\n\n    try {\n      const result = buildResultElement({\n        label,\n        value: content,\n        encoding,\n        bitLength: byteLength * 8,\n        rawData: value,\n        filename,\n        extension,\n      });\n      resultElement.appendChild(result);\n    } catch (e) { handleError(e); }\n  });\n\n  resultElement.style.opacity = '100%';\n  load(100);\n};\n\nconst hideResults = () => {\n  resultElement.style.opacity = '0';\n  resultElement.textContent = '';\n  clearError();\n};\n\nexport { showResults, hideResults, Result };\n", "/**\n * @file Contains functionality for the main menu\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport { hideResults } from '../lib/result';\n\nconst menuItems = document.querySelectorAll<HTMLElement>('#main-menu li');\nconst sections = document.querySelectorAll<HTMLElement>('main > section');\n\nmenuItems.forEach((item) => item.addEventListener('click', () => {\n  menuItems.forEach((i) => i.classList.remove('active'));\n  sections.forEach((i) => i.classList.remove('active'));\n  item.classList.add('active');\n  if (item.dataset.target) document.querySelector(item.dataset.target)?.classList.add('active');\n  hideResults();\n}));\n", "/**\n * @file Contains functionality for cryptographic digests\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * Input data of aribtrary length can be passed through a one-way\n * cryptographic function to produce a digest, or hash of the data.\n * Such digest can be used to verify the integrity of the data when\n * the expected hash is previously known.\n *\n * We use the Web Crypto API to perform all hashing functions in the\n * browser with native code.\n */\n\nimport { handleError } from '../lib/error';\nimport { ENCODING, decode, encode } from '../lib/encode';\nimport load from '../lib/loader';\nimport { Result, hideResults, showResults } from '../lib/result';\n\nconst digestSection = document.querySelector('#digest')!;\nconst digestSelect = digestSection.querySelector<HTMLSelectElement>('.digest-select')!;\nconst textarea = digestSection.querySelector('textarea')!;\nconst details = digestSection.querySelector('details');\nconst button = digestSection.querySelector('button')!;\n\n/**\n * Digest Verification UI changes\n */\ndetails?.addEventListener('toggle', () => {\n  if (details.open) button.textContent = 'Verify Digest';\n  else button.textContent = 'Generate Digest';\n});\n\n/**\n * Digest Generation\n */\nasync function digestMessage(message: string, algorithm: string) {\n  const encoding = Number(digestSection.querySelector<HTMLSelectElement>('.encoding select')?.selectedOptions[0].value);\n  const data = decode(message, encoding);\n  const digest = await crypto.subtle.digest(algorithm, data); // hash the message\n  return digest;\n}\n\nbutton.addEventListener('click', async () => {\n  load(0);\n\n  const algorithm = digestSelect.selectedOptions[0].dataset.alg!;\n  const text = textarea.value;\n\n  try {\n    const digest = await digestMessage(text, algorithm);\n\n    // If the details element is open, we are verifying a digest\n    if (details?.open) {\n      const encoding = Number(details.querySelector<HTMLSelectElement>('select.input-encoding')?.selectedOptions[0].value);\n      const value = details.querySelector<HTMLInputElement>('input.hash')?.value || '';\n      const comparedDigest = decode(value, encoding);\n      showResults([{\n        label: `${algorithm} Digest Verified?`,\n        value: String(\n          encode(digest, ENCODING.HEXADECIMAL) === encode(comparedDigest, ENCODING.HEXADECIMAL),\n        ),\n      }]);\n    } else {\n      showResults([{\n        label: `${algorithm} Digest`,\n        value: digest,\n        defaultEncoding: ENCODING.HEXADECIMAL,\n        filename: 'digest',\n        extension: algorithm.replace(/-/g, '').toLowerCase(),\n      }]);\n    }\n  } catch (e) { handleError(e); }\n});\n\ndigestSelect.addEventListener('change', () => {\n  const menu = digestSection.querySelector('menu')!;\n  const blockSize = menu.querySelector('.block-size span')!;\n  const method = menu.querySelector('.method span')!;\n  const specification = menu.querySelector('.specification span')!;\n\n  const selected = digestSelect.selectedOptions[0].dataset;\n  blockSize.textContent = selected.bs || '';\n  method.textContent = selected.method || '';\n  specification.textContent = selected.spec || '';\n\n  hideResults();\n});\n\n/**\n * File Uploads\n */\n\n/**\n * Produce digests of a list of files\n *\n * @param files List of File - ArrayBuffer pairs\n * @param checksums Text file of hashes to verify\n * @param algorithm Algoithm to use for digest and verification\n */\nconst digestFiles = async (\n  files: [File, ArrayBuffer][],\n  checksums: string,\n  algorithm: string,\n) => {\n  const results: Result[] = [];\n\n  try {\n    const sums: { [k: string]: string } = {};\n    if (checksums) {\n      checksums.split(/\\r?\\n/).forEach((line) => {\n        const [checksum, filename] = line.split(/\\s[\\s*]/);\n        sums[filename] = checksum;\n      });\n    }\n\n    await Promise.all(files.map(async ([file, data]) => {\n      const checksum = sums[file.name];\n      const digest = await crypto.subtle.digest(algorithm, data);\n\n      let label: string;\n      let value: string | ArrayBuffer;\n      let filename = 'digest';\n      let extension: string | undefined;\n\n      if (checksum) {\n        label = `${algorithm} Digest of ${file.name} Verifies Checksum? \u2022 ${file.size.toLocaleString()} bytes \u2022 ${file.type || 'Unknown type'}`;\n        value = String(checksum === encode(digest, ENCODING.HEXADECIMAL));\n      } else {\n        label = `${algorithm} Digest of ${file.name} \u2022 ${file.size.toLocaleString()} bytes \u2022 ${file.type || 'Unknown type'}`;\n        value = digest;\n        filename = file.name;\n        extension = algorithm.replace(/-/g, '').toLowerCase();\n      }\n\n      results.push({\n        label, value, filename, extension,\n      });\n    }));\n  } catch (e) { handleError(e); }\n\n  showResults(results);\n};\n\nconst readFiles = (files?: FileList | null) => {\n  if (!files || !files.length) return;\n  load(0);\n\n  const list = Array.from(files);\n  const totalSize = list.reduce((size, file) => size + file.size, 0);\n  const currentSizes: number[] = [];\n  const digests: [File, ArrayBuffer][] = [];\n  let algorithm = digestSelect.selectedOptions[0].dataset.alg!;\n  let checksums: string;\n\n  list.forEach((file, i) => {\n    const reader = new FileReader();\n\n    reader.onprogress = (event) => {\n      currentSizes[i] = event.loaded;\n      load((currentSizes.reduce((p, c) => p + c, 0) / totalSize) * 100);\n    };\n\n    reader.onload = async (event) => {\n      if (!event.target?.result || !(event.target.result instanceof ArrayBuffer)) {\n        handleError(new Error(`File [${file.name}] of type [${file.type}] failed to load.`));\n        return;\n      }\n\n      // Look for checksum files\n      try {\n        const checksumExistsError = new Error('More than one checksum file exists in the file list.');\n        switch (true) {\n          case /^.*\\.sha1$|^sha1sums?(\\.txt)?$/i.test(file.name):\n            algorithm = 'SHA-1';\n            if (checksums) throw checksumExistsError;\n            checksums = (new TextDecoder()).decode(event.target.result);\n            break;\n          case /^.*\\.sha256$|^sha256sums?(\\.txt)?$/i.test(file.name):\n            algorithm = 'SHA-256';\n            if (checksums) throw checksumExistsError;\n            checksums = (new TextDecoder()).decode(event.target.result);\n            break;\n          case /^.*\\.sha384$|^sha384sums?(\\.txt)?$/i.test(file.name):\n            algorithm = 'SHA-384';\n            if (checksums) throw checksumExistsError;\n            checksums = (new TextDecoder()).decode(event.target.result);\n            break;\n          case /^.*\\.sha512$|^sha512sums?(\\.txt)?$/i.test(file.name):\n            algorithm = 'SHA-512';\n            if (checksums) throw checksumExistsError;\n            checksums = (new TextDecoder()).decode(event.target.result);\n            break;\n          default:\n            digests.push([file, event.target.result]);\n        }\n      } catch (e) { handleError(e); }\n\n      const done = digests.length === (checksums ? files.length - 1 : files.length);\n      if (done) digestFiles(digests, checksums, algorithm);\n    };\n\n    reader.readAsArrayBuffer(file);\n  });\n};\n\nconst upload = digestSection.querySelector<HTMLInputElement>('.upload input');\nupload?.addEventListener('change', () => readFiles(upload.files));\n\n/**\n * Drag-and-Drop File Uploads\n */\n\ntextarea.addEventListener('drop', (event) => {\n  readFiles(event.dataTransfer?.files);\n});\n", "/**\n * @file Contains functionality for secure generation of random data\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * The Web Crypto API lets us generate random data suitable for cryptographic\n * operations using a native Pseudo Random Number Generator.  We enable\n * generation of artibtrary length random data for display or download.  For\n * display, we support binary, octal, and hexadecimal encodings.  We also\n * enable production of random UUIDv4 values.\n */\n\nimport { handleError } from '../lib/error';\nimport load from '../lib/loader';\nimport { hideResults, showResults } from '../lib/result';\n\nconst randomElement = document.querySelector<HTMLElement>('#random')!;\nconst menuItems = randomElement.querySelectorAll<HTMLLIElement>('menu li');\nconst sections = randomElement.querySelectorAll<HTMLDivElement>('.settings');\n\nmenuItems.forEach((item) => item.addEventListener('click', () => {\n  menuItems.forEach((i) => i.classList.remove('active'));\n  sections.forEach((i) => i.classList.remove('active'));\n  item.classList.add('active');\n  if (item.dataset.target) document.querySelector(`.${item.dataset.target}`)?.classList.add('active');\n  hideResults();\n}));\n\nconst prngGenerateButton = randomElement.querySelector<HTMLButtonElement>('button')!;\nprngGenerateButton.addEventListener('click', () => {\n  load(0);\n\n  try {\n    const prngByteLength = randomElement.querySelector<HTMLInputElement>('.byte-length')!;\n    const prngOutput = randomElement.querySelector<HTMLSelectElement>('.output')!;\n    const op = randomElement.querySelector<HTMLElement>('menu li.active')!.dataset.target;\n\n    if (op === 'uuid') {\n      showResults([{ label: 'UUID', value: window.crypto.randomUUID(), filename: 'prng-uuid' }]);\n      return;\n    }\n\n    // If not 'uuid', then 'random-values'\n    const bytes = Number(prngByteLength.value.length ? prngByteLength.value : 64);\n    const array = new Uint8Array(bytes);\n    window.crypto.getRandomValues(array);\n\n    const out = prngOutput.selectedOptions[0].value;\n\n    if (out === 'display') {\n      showResults([{ label: 'Random Values', value: array.buffer, filename: `prng-${bytes}-bytes` }]);\n      return;\n    }\n\n    // If not 'display', then 'download'\n    const blob = new Blob([array], { type: 'application/octet-stream' });\n    const uri = window.URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = uri;\n    a.download = `prng-${bytes}-bytes.bin`;\n    document.body.appendChild(a);\n    a.click();\n\n    // Cleanup\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(uri);\n  } catch (e) { handleError(e); }\n\n  load(100);\n});\n", "/**\n * @file Contains features for confirmation modals\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nconst removeModal = (background: HTMLElement) => (event: Event) => {\n  event.preventDefault();\n  background.remove();\n};\n\n/**\n * Create Modal\n * @param iconSvg A string containing SVG markup for the modal icon\n * @param title The modal title, e.g.: \"Are you sure?\"\n * @param prompt A larger description of the impact\n * @param confirmationText The confirmation button text\n * @param callback The function to execute upon confirmation\n */\nconst showModal = (\n  iconSvg: string,\n  title: string,\n  prompt: string,\n  confirmationText: string,\n  callback: Function,\n) => {\n  const background = document.createElement('div');\n  background.classList.add('modal-background');\n\n  const modal = document.createElement('aside');\n  modal.classList.add('modal');\n  background.appendChild(modal);\n\n  const container = document.createElement('div');\n  container.classList.add('container');\n  modal.appendChild(container);\n\n  const icon = document.createElement('span');\n  icon.innerHTML = iconSvg;\n  container.appendChild(icon);\n\n  const content = document.createElement('div');\n  content.classList.add('content');\n  container.appendChild(content);\n\n  const titleElement = document.createElement('span');\n  titleElement.textContent = title;\n  content.appendChild(titleElement);\n\n  const p = document.createElement('p');\n  p.textContent = prompt;\n  content.appendChild(p);\n\n  const actions = document.createElement('div');\n  actions.classList.add('actions');\n  modal.appendChild(actions);\n\n  const cancel = document.createElement('button');\n  cancel.classList.add('cancel');\n  cancel.textContent = 'Cancel';\n  cancel.addEventListener('click', removeModal(background));\n  actions.appendChild(cancel);\n\n  const confirm = document.createElement('button');\n  confirm.classList.add('confirm');\n  confirm.textContent = confirmationText;\n  confirm.addEventListener('click', removeModal(background));\n  confirm.addEventListener('click', () => callback());\n  actions.appendChild(confirm);\n\n  document.body.appendChild(background);\n};\n\nexport default showModal;\n", "/**\n * @file Establishes a persistent key storage via IndexedDB\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nconst DATABASE_NAME = 'cryptotools';\nconst KEY_STORE_NAME = 'keys';\nconst CURRENT_VERSION = 1;\n\nlet db: IDBDatabase;\n\n/**\n * Open the database\n */\nconst openDatabase = () => new Promise<boolean>((resolve, reject) => {\n  const request = window.indexedDB.open(DATABASE_NAME, CURRENT_VERSION);\n\n  request.onerror = () => {\n    reject(new Error('Cannot open database.'));\n  };\n\n  request.onupgradeneeded = () => {\n    db = request.result;\n\n    // Create an objectStore for this database\n    db.createObjectStore(KEY_STORE_NAME, { keyPath: 'name' });\n  };\n\n  request.onsuccess = () => {\n    db = request.result;\n    db.onerror = (event) => console.error(new Error(`A database error ocurred: ${JSON.stringify(event.target)}`));\n    resolve(true);\n  };\n});\n\n/**\n * Store a cryptographic key to the database\n */\nconst storeKey = (\n  keyName: string,\n  key: CryptoKey | CryptoKeyPair,\n) => new Promise<boolean>((resolve, reject) => {\n  const transaction = db.transaction([KEY_STORE_NAME], 'readwrite');\n  const store = transaction.objectStore(KEY_STORE_NAME);\n  const request = store.add({\n    name: keyName,\n    key,\n  });\n\n  request.onerror = (event) => reject(new Error(JSON.stringify(event)));\n  request.onsuccess = () => resolve(true);\n});\n\n/**\n * Delete a cryptographic key from the database\n */\nconst deleteKey = (keyName: string) => new Promise<boolean>((resolve, reject) => {\n  const transaction = db.transaction([KEY_STORE_NAME], 'readwrite');\n  const store = transaction.objectStore(KEY_STORE_NAME);\n  const request = store.delete(keyName);\n\n  request.onerror = (event) => reject(new Error(JSON.stringify(event)));\n  request.onsuccess = () => resolve(true);\n});\n\ntype KeyStoreObject = { name: string, key: CryptoKey | CryptoKeyPair };\n\n/**\n * Retrieve all keys from the database\n */\nconst getKeys = () => new Promise<KeyStoreObject[]>((resolve, reject) => {\n  const transaction = db.transaction([KEY_STORE_NAME], 'readonly');\n  const store = transaction.objectStore(KEY_STORE_NAME);\n  const request = store.getAll();\n\n  request.onerror = (event) => reject(new Error(JSON.stringify(event)));\n  request.onsuccess = (event) => resolve((event.target as any).result); // TODO: proper typing\n});\n\nexport {\n  openDatabase, getKeys, storeKey, deleteKey,\n};\n", "/**\n * @file Handles UI changes to Encryption Operation Area\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport { KEY_SVG } from '../../lib/svg';\n// eslint-disable-next-line import/no-cycle\nimport { getKey } from './keys';\n\nconst encryptionSection = document.querySelector<HTMLElement>('#encryption')!;\nconst opArea = encryptionSection.querySelector<HTMLElement>('.crypto-operations');\nconst tabs = opArea?.querySelectorAll<HTMLLIElement>('menu li');\n\n// Hide operation area when switching main tabs\nencryptionSection.querySelectorAll<HTMLLIElement>('.keys menu li')\n  .forEach((li) => li.addEventListener('click', () => opArea?.classList.remove('active')));\n\n/**\n * Update operation area textarea placeholder and button text\n * @param op Requested key usage\n * @param alg Algorithm for displaying algorithm-specific settings\n */\nconst updateLowerArea = (op: KeyUsage, alg: string) => {\n  const textarea = opArea?.querySelector<HTMLTextAreaElement>('textarea');\n  const signature = opArea?.querySelector<HTMLElement>('.signature');\n  const button = opArea?.querySelector<HTMLButtonElement>('button');\n\n  let placeholder: string = '';\n  switch (op) {\n    // TODO: Support multiple files\n    case 'encrypt': placeholder = 'Paste plain text or drop a file...'; break;\n    case 'decrypt': placeholder = 'Paste ciphertext or drop a file...'; break;\n    case 'sign': placeholder = 'Paste plain text or drop a file...'; break;\n    case 'verify': placeholder = 'Paste plain text or drop a file...'; break;\n    default:\n  }\n  if (textarea) textarea.placeholder = placeholder;\n\n  // Display appropriate encryption/signature settings\n  opArea?.querySelectorAll<HTMLElement>('.input > .settings').forEach((elem) => elem.classList.remove('active'));\n  opArea?.querySelector<HTMLElement>(`.settings.${alg}.${op}`)?.classList.add('active');\n  if (op === 'verify') signature?.classList.add('active');\n  else signature?.classList.remove('active');\n\n  // Capitalize operation for button text\n  if (button) button.textContent = `${op.charAt(0).toUpperCase()}${op.slice(1)}`;\n};\n\n/**\n * Handle Key List item button clicks and update operation area\n * @param keyName Key Dictionary key\n * @param key The Crypto Key\n * @returns function Event Handler\n */\nconst updateOpArea = (\n  keyName: string,\n  cryptoKey: CryptoKey | CryptoKeyPair,\n  operation?: KeyUsage,\n) => () => {\n  opArea?.classList.add('active');\n  opArea?.scrollIntoView({\n    block: 'center',\n    behavior: 'smooth',\n  });\n\n  const isSymmetric = cryptoKey instanceof CryptoKey;\n  let op = operation;\n\n  let friendlyName = keyName;\n  let key: CryptoKey;\n  let usages: KeyUsage[];\n\n  if (isSymmetric) {\n    key = cryptoKey;\n    usages = key.usages;\n\n    // Prefer \"Encrypt\" and \"Sign\" tabs\n    if (!op) {\n      if (usages.includes('encrypt')) op = 'encrypt';\n      else if (usages.includes('sign')) op = 'sign';\n      else [op] = usages;\n    }\n  } else {\n    usages = cryptoKey.privateKey.usages.concat(cryptoKey.publicKey.usages);\n\n    // Prefer \"Encrypt\" and \"Sign\" tabs\n    if (!op) {\n      if (usages.includes('encrypt')) op = 'encrypt';\n      else if (usages.includes('sign')) op = 'sign';\n      else [op] = usages;\n    }\n\n    let whichKey: string = '';\n    switch (op) {\n      case 'verify':\n      case 'encrypt':\n        whichKey = 'Public Key';\n        key = cryptoKey.publicKey;\n        break;\n      case 'sign':\n      case 'decrypt':\n        whichKey = 'Private Key';\n        key = cryptoKey.privateKey;\n        break;\n      default:\n        throw new Error(`Operation ${op} is not implemented for key \"${keyName}\".`);\n    }\n    friendlyName = `${keyName} (${whichKey})`;\n  }\n\n  const alg = key.algorithm.name.toLowerCase();\n  if (opArea) {\n    opArea.dataset.key = keyName;\n    opArea.dataset.alg = alg;\n  }\n\n  tabs?.forEach((tab) => tab.classList.remove('active', 'show'));\n  opArea?.querySelector<HTMLElement>(`menu li[data-op=\"${op}\"]`)?.classList.add('active');\n  usages.forEach((usage) => opArea?.querySelector<HTMLElement>(`menu li[data-op=\"${usage}\"]`)?.classList.add('show'));\n\n  // Display key name in footer\n  const keyNameElement = opArea?.querySelector<HTMLLIElement>('.footer .key');\n  if (keyNameElement) {\n    keyNameElement.innerHTML = KEY_SVG;\n    const span = document.createElement('span');\n    span.textContent = friendlyName;\n    keyNameElement.appendChild(span);\n  }\n\n  updateLowerArea(op, alg);\n};\n\n// Also update operation area on tab change\ntabs?.forEach((tab) => {\n  const op = tab.dataset.op as KeyUsage;\n  tab.addEventListener('click', () => {\n    const keyName = opArea!.dataset.key || '';\n    const { key } = getKey(keyName);\n    updateOpArea(keyName, key, op)();\n  });\n});\n\nexport default updateOpArea;\n", "/* eslint-disable @typescript-eslint/no-use-before-define */\n/**\n * @file Key Management\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport { ENCODING, encode } from '../../lib/encode';\nimport { handleError } from '../../lib/error';\nimport load from '../../lib/loader';\nimport showModal from '../../lib/modal';\nimport { Result, hideResults, showResults } from '../../lib/result';\nimport {\n  DISK_SVG, KEYS_SVG, KEY_SVG, PRIVATE_EXPORT_SVG, PUBLIC_EXPORT_SVG, TRASH_SVG,\n} from '../../lib/svg';\nimport {\n  deleteKey, getKeys, openDatabase, storeKey,\n} from './database';\n// eslint-disable-next-line import/no-cycle\nimport updateOpArea from './operationArea';\n\ntype Key = {\n  saved: boolean,\n  key: CryptoKey | CryptoKeyPair,\n};\n\n/**\n * Ephemeral dictionary of keys\n */\nconst keys: { [keyName: string]: Key } = {};\n\n/**\n * Update Key List\n */\nconst updateKeyList = () => {\n  // Hide Operation Area\n  const opArea = document.querySelector<HTMLElement>('#encryption .operation-area');\n  opArea?.classList.remove('active');\n  hideResults();\n\n  const list = document.querySelector<HTMLElement>('#encryption [data-tab=\"list-keys\"] ul')!;\n  list.textContent = ''; // reset list\n\n  const array = Object.entries(keys);\n  if (!array.length) {\n    const li = document.createElement('li');\n    li.textContent = 'No Keys.  Generate or import a key to get started.';\n    list.appendChild(li);\n  }\n\n  array.forEach(([k, v]) => {\n    const { key: keyStructure } = v;\n\n    const li = document.createElement('li');\n    li.addEventListener('click', updateOpArea(k, keyStructure));\n\n    const container = document.createElement('div');\n    container.classList.add('container');\n    li.appendChild(container);\n\n    const icon = document.createElement('span');\n    container.appendChild(icon);\n\n    const meta = document.createElement('div');\n    meta.classList.add('meta');\n    container.appendChild(meta);\n\n    const name = document.createElement('span');\n    name.textContent = k;\n    meta.appendChild(name);\n\n    if (v.saved) {\n      const disk = document.createElement('span');\n      disk.classList.add('saved');\n      disk.dataset.tooltip = 'Persists after page refresh';\n      disk.innerHTML = DISK_SVG;\n      name.appendChild(disk);\n    }\n\n    const isSymmetric = keyStructure instanceof CryptoKey;\n\n    const attributes = document.createElement('span');\n    let type: string;\n    let alg: string;\n    let usages: KeyUsage[];\n\n    if (isSymmetric) {\n      icon.innerHTML = KEY_SVG;\n      type = 'Symmetric Key';\n      alg = keyStructure.algorithm.name;\n      usages = keyStructure.usages;\n    } else {\n      icon.innerHTML = KEYS_SVG;\n      type = 'Asymmetric Key Pair';\n      alg = keyStructure.privateKey.algorithm.name;\n      usages = keyStructure.privateKey.usages.concat(keyStructure.publicKey.usages);\n    }\n\n    attributes.textContent = `${type} \u2022 ${alg} \u2022 ${usages.join(', ')}`;\n    meta.appendChild(attributes);\n\n    const actions = document.createElement('div');\n    actions.classList.add('actions');\n    li.appendChild(actions);\n\n    // At minimum, public keys are always exportable\n    if (!isSymmetric) {\n      const exportPublic = document.createElement('a');\n      exportPublic.href = '#';\n      exportPublic.innerHTML = PUBLIC_EXPORT_SVG;\n      exportPublic.dataset.tooltip = 'Export Public Key';\n      exportPublic.addEventListener('click', async (event) => {\n        event.preventDefault();\n        event.stopPropagation(); // prevent li click from registering\n\n        const key = keyStructure.publicKey;\n        const filename = `${k.replace(/\\s/g, '-')}.public`;\n        const results: Result[] = [];\n\n        try {\n          switch (key.algorithm.name) {\n            case 'RSASSA-PKCS1-v1_5': case 'RSA-PSS': case 'RSA-OAEP': case 'ECDSA': {\n              const spki = await exportKey(key, 'spki')() as ArrayBuffer;\n              results.push({\n                label: `Public Key \"${k}\" in Subject Public Key Info (SPKI) Format, DER-Encoded`,\n                value: spki,\n                defaultEncoding: ENCODING.BASE64,\n                filename,\n                extension: 'der',\n              }, {\n                label: `Public Key \"${k}\" in Subject Public Key Info (SPKI) Format, PEM-Encoded`,\n                value: `-----BEGIN PUBLIC KEY-----\\n${encode(spki, ENCODING.BASE64)}\\n-----END PUBLIC KEY-----\\n`,\n                filename,\n                extension: 'pem',\n              });\n              break;\n            }\n            default:\n              throw new Error(`Unsupported key algorithm ${key.algorithm.name}`);\n          }\n\n          // For some reason, Elliptic Curve public keys can also be exported in raw format\n          if (key.algorithm.name === 'ECDSA') {\n            results.push({\n              label: `Public Key \"${k}\" in Raw Format`,\n              value: await exportKey(key, 'raw')() as ArrayBuffer,\n              defaultEncoding: ENCODING.BASE64,\n              filename,\n            });\n          }\n\n          // All algorithms have a JWK export format\n          results.push({\n            label: `Public Key \"${k}\" in JSON Web Key (JWK) Format`,\n            value: JSON.stringify(await exportKey(key, 'jwk')() as JsonWebKey, null, 2),\n            filename,\n          });\n\n          showResults(results);\n        } catch (e) { handleError(e); }\n      });\n      actions.appendChild(exportPublic);\n    }\n\n    // Symmetric keys or asymmetric private keys marked as extractable\n    if (\n      (!isSymmetric && keyStructure.privateKey.extractable)\n      || (isSymmetric && keyStructure.extractable)\n    ) {\n      const exportPrivate = document.createElement('a');\n      exportPrivate.href = '#';\n      exportPrivate.innerHTML = PRIVATE_EXPORT_SVG;\n      exportPrivate.dataset.tooltip = isSymmetric ? 'Export Secret Key' : 'Export Private Key';\n      exportPrivate.addEventListener('click', async (event) => {\n        event.preventDefault();\n        event.stopPropagation(); // prevent li click from registering\n\n        const key = isSymmetric ? keyStructure : keyStructure.privateKey;\n        const filename = `${k.replace(/\\s/g, '-')}.${isSymmetric ? 'secret' : 'private'}`;\n        const results: Result[] = [];\n\n        try {\n          switch (key.algorithm.name) {\n            case 'AES-CTR': case 'AES-CBC': case 'AES-GCM': case 'HMAC':\n              results.push({\n                label: `Secret Key \"${k}\" in Raw Format`,\n                value: await exportKey(key, 'raw')() as ArrayBuffer,\n                filename,\n                extension: 'key',\n              });\n              break;\n            case 'RSASSA-PKCS1-v1_5': case 'RSA-PSS': case 'RSA-OAEP': case 'ECDSA': {\n              const pkcs8 = await exportKey(key, 'pkcs8')() as ArrayBuffer;\n              results.push({\n                label: `Private Key \"${k}\" in PKCS#8 Format, DER-Encoded`,\n                value: pkcs8,\n                defaultEncoding: ENCODING.BASE64,\n                filename,\n                extension: 'der',\n              }, {\n                label: `Private Key \"${k}\" in PKCS#8 Format, PEM-Encoded`,\n                value: `-----BEGIN PRIVATE KEY-----\\n${encode(pkcs8, ENCODING.BASE64)}\\n-----END PRIVATE KEY-----\\n`,\n                filename,\n                extension: 'key',\n              });\n              break;\n            }\n            default:\n              throw new Error(`Unsupported key algorithm ${key.algorithm.name}`);\n          }\n\n          // All algorithms have a JWK export format\n          results.push({\n            label: `${isSymmetric ? 'Secret' : 'Private'} Key \"${k}\" in JSON Web Key (JWK) Format`,\n            value: JSON.stringify(await exportKey(key, 'jwk')() as JsonWebKey, null, 2),\n            filename,\n          });\n\n          showResults(results);\n        } catch (e) { handleError(e); }\n      });\n      actions.appendChild(exportPrivate);\n    }\n\n    const trash = document.createElement('a');\n    trash.href = '#';\n    trash.innerHTML = TRASH_SVG;\n    trash.dataset.tooltip = 'Delete key';\n    trash.addEventListener('click', (event) => {\n      event.preventDefault();\n      event.stopPropagation(); // prevent li click from registering\n      showModal(TRASH_SVG, 'Are you sure?', 'This is an unrecoverable operation.', 'Delete', removeKey(k));\n    });\n    actions.appendChild(trash);\n\n    list.appendChild(li);\n  });\n};\n\n/**\n * Show key list\n */\nconst showKeys = () => document.querySelector<HTMLElement>('#encryption li[data-target=\"list-keys\"]')?.click();\n\n/**\n * Add keys to dictionary\n */\nconst addKey = (name: string, key: CryptoKey | CryptoKeyPair, save: boolean = false) => {\n  if (keys[name]) throw new Error(`A key by the name of \"${name}\" already exists.`);\n  keys[name] = { saved: save, key };\n\n  if (save) storeKey(name, key);\n\n  updateKeyList();\n  showKeys();\n  load(100);\n};\n\n/**\n * Retrieve keys from dictionary\n */\nconst getKey = (name: string) => {\n  if (!keys[name]) throw new Error(`A key by the name of \"${name}\" does not exist.`);\n  return keys[name];\n};\n\n/**\n * Delete key from dictionary and database\n */\nconst removeKey = (name: string) => async () => {\n  try {\n    await deleteKey(name);\n    delete keys[name];\n    updateKeyList();\n  } catch (e) { handleError(e); }\n};\n\n/**\n * Export key\n * @param name The key to export\n * @param format Export format\n */\nconst exportKey = (key: CryptoKey, format: KeyFormat) => async () => window\n  .crypto.subtle.exportKey(format, key);\n\n// Start by opening the Keys database\n(async () => {\n  try {\n    await openDatabase();\n\n    // Populate the keys dictionary\n    const k = await getKeys();\n    k.forEach(({ name, key }) => { keys[name] = { saved: true, key }; });\n    updateKeyList();\n  } catch (e) { handleError(e); }\n})();\n\nexport { addKey, getKey, updateKeyList };\n", "/**\n * @file Handles encryption, decryption, signing, and verifying\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport { getKey } from './keys';\nimport { ENCODING, decode } from '../../lib/encode';\nimport { handleError } from '../../lib/error';\nimport load from '../../lib/loader';\nimport { Result, showResults } from '../../lib/result';\n\nconst encryptionSection = document.querySelector<HTMLElement>('#encryption')!;\nconst opArea = encryptionSection.querySelector<HTMLElement>('.encrypt.operation-area')!;\nconst textarea = opArea.querySelector<HTMLTextAreaElement>('.input textarea')!;\n\n/**\n * Perform a cryptographic operation\n * @param operation One of encrypt, decrypt, sign, or verify\n * @param data Data upon which to operate\n * @param labelSuffix Whether to append any additional information to the result title\n * @param filename When performing an op on a file, whether to influence result download filename\n * @returns A set of results for display\n */\nconst encrypt = async (\n  operation: string,\n  data: ArrayBuffer,\n  filename?: string,\n  labelSuffix: string = '',\n): Promise<Result[]> => {\n  const results: Result[] = [];\n  const suffix = labelSuffix ? ` \u2022 ${labelSuffix}` : '';\n\n  const cryptoKey = getKey(opArea.dataset.key || '').key;\n  const isSymmetric = cryptoKey instanceof CryptoKey;\n  const filenamePrefix = filename ? `${filename}-${operation}` : operation;\n\n  switch (operation) {\n    case 'verify': {\n      const signatureTextarea = opArea.querySelector<HTMLTextAreaElement>('.signature textarea')!;\n      if (!signatureTextarea.value) throw new Error('A signature is required to verify the plaintext.');\n      const signatureEncoding = Number(opArea.querySelector<HTMLSelectElement>('.signature .encoding select')?.selectedOptions[0].value);\n      const signature = decode(signatureTextarea.value, signatureEncoding);\n\n      const key = isSymmetric ? cryptoKey : cryptoKey.publicKey;\n      const algorithm: any = { // TODO: typing this properly throw errors when adding params\n        name: key.algorithm.name,\n      };\n\n      if (key.algorithm.name === 'RSA-PSS') {\n        const saltLength = opArea.querySelector<HTMLInputElement>('.rsa-pss.verify input.salt-length')?.value;\n        algorithm.saltLength = saltLength ? Number(saltLength) : 32;\n      }\n\n      if (key.algorithm.name === 'ECDSA') {\n        const hashAlgorithm = opArea.querySelector<HTMLSelectElement>('.ecdsa.verify select')?.selectedOptions[0].value;\n        algorithm.hash = hashAlgorithm;\n      }\n\n      const verification = await window.crypto.subtle.verify(algorithm, key, signature, data);\n      results.unshift({\n        label: 'Signature verifies data?',\n        value: String(verification),\n      });\n      break;\n    }\n    case 'encrypt': {\n      const key = isSymmetric ? cryptoKey : cryptoKey.publicKey;\n      const algorithm: any = { // TODO: typing this properly throw errors when adding params\n        name: key.algorithm.name,\n      };\n\n      if (key.algorithm.name === 'AES-CTR') {\n        const counterValue = opArea.querySelector<HTMLInputElement>('.aes-ctr.encrypt input.counter')?.value;\n        const counterRadix = opArea.querySelector<HTMLSelectElement>('.aes-ctr.encrypt select')?.selectedOptions[0].value;\n\n        // Counter must be exactly 16 bytes long, the AES block size.  Here we let the\n        // implementation handle throwing the error for a counter of wrong size.\n        //\n        // The length is the number of bits in the counter block used for the counter\n        // (as opposed to the nonce).  The total number of blocks in the message must be\n        // less than or equal to 2^n, where n is this counter length in bits.\n\n        let counter: ArrayBuffer;\n        if (counterValue) {\n          const radix = Number(counterRadix);\n          counter = decode(counterValue, radix);\n          if (counter.byteLength !== 16) throw new Error('Counter length must be exactly 16 bytes.');\n        } else counter = crypto.getRandomValues(new Uint8Array(16)).buffer; // per SP800-38A\n\n        algorithm.counter = counter;\n        algorithm.length = 64; // NIST recommends length half of the counter block size (bits)\n\n        results.push({\n          label: 'Counter \u2022 Needed to decrypt',\n          value: counter,\n          defaultEncoding: ENCODING.BASE64,\n          filename: `${filenamePrefix}-counter`,\n        }, {\n          label: 'Counter Length \u2022 Needed to decrypt',\n          value: algorithm.length,\n          defaultEncoding: ENCODING.INTEGER,\n          filename: `${filenamePrefix}-counter-length`,\n        });\n      }\n\n      if (key.algorithm.name === 'AES-CBC') {\n        const cbcIv = opArea.querySelector<HTMLInputElement>('.aes-cbc.encrypt .iv input')?.value;\n        const cbcIvRadix = opArea.querySelector<HTMLSelectElement>('.aes-cbc.encrypt .iv select')?.selectedOptions[0].value;\n\n        // Initialization Vector must be random and unique for every encryption operation\n        let iv: ArrayBuffer;\n        if (cbcIv) {\n          const radix = Number(cbcIvRadix);\n          iv = decode(cbcIv, radix);\n          if (iv.byteLength !== 16) throw new Error('IV length must be exactly 16 bytes.');\n        } else iv = crypto.getRandomValues(new Uint8Array(16)).buffer; // MUST be 16 bytes\n\n        algorithm.iv = iv;\n\n        results.push({\n          label: 'Initialization Vector (IV) \u2022 Needed to decrypt \u2022 Not Secret',\n          value: iv,\n          defaultEncoding: ENCODING.BASE64,\n          filename: `${filenamePrefix}-iv`,\n        });\n      }\n\n      if (key.algorithm.name === 'AES-GCM') {\n        const gcmIv = opArea.querySelector<HTMLInputElement>('.aes-gcm.encrypt .iv input')?.value;\n        const gcmIvRadix = opArea.querySelector<HTMLSelectElement>('.aes-gcm.encrypt .iv select')?.selectedOptions[0].value;\n        const authenticatedDataTextArea = opArea.querySelector<HTMLTextAreaElement>('.aes-gcm.encrypt textarea');\n        const tagLength = opArea.querySelector<HTMLSelectElement>('.aes-gcm.encrypt .tag-length select')?.selectedOptions[0].value;\n\n        algorithm.tagLength = Number(tagLength) || 128; // 128 bits is implementation default\n\n        // Initialization Vector must be random and unique for every encryption operation\n        let iv: ArrayBuffer;\n        if (gcmIv) {\n          const radix = Number(gcmIvRadix);\n          iv = decode(gcmIv, radix);\n        } else iv = crypto.getRandomValues(new Uint8Array(12)).buffer; // NIST recommends 96 bits\n\n        algorithm.iv = iv;\n\n        results.unshift({\n          label: 'Initialization Vector (IV) \u2022 Needed to decrypt \u2022 Not Secret',\n          value: iv,\n          defaultEncoding: ENCODING.BASE64,\n          filename: `${filenamePrefix}-iv`,\n        });\n\n        // Additional data can be authenticated and not encrypted\n        if (authenticatedDataTextArea?.value.length) {\n          const additionalData = (new TextEncoder()).encode(authenticatedDataTextArea?.value);\n          algorithm.additionalData = additionalData;\n          results.push({\n            label: 'Authenticated but Unencrypted Data \u2022 Needed to decrypt',\n            value: authenticatedDataTextArea.value,\n            defaultEncoding: ENCODING['UTF-8'],\n            filename: `${filenamePrefix}-authenticated-data`,\n          });\n        }\n      }\n\n      const ciphertext = await window.crypto.subtle.encrypt(algorithm, key, data);\n      results.unshift({\n        label: `Ciphertext${suffix}`,\n        value: ciphertext,\n        defaultEncoding: ENCODING.BASE64,\n        filename: filename ? `${filename}.enc` : 'ciphertext',\n      });\n      break;\n    }\n    case 'sign': {\n      const key = isSymmetric ? cryptoKey : cryptoKey.privateKey;\n      const algorithm: any = { // TODO: typing this properly throw errors when adding params\n        name: key.algorithm.name,\n      };\n\n      if (key.algorithm.name === 'RSA-PSS') {\n        const saltLength = opArea.querySelector<HTMLInputElement>('.rsa-pss.sign input.salt-length')?.value;\n\n        let byteLength: number;\n        switch ((key.algorithm as any).hash.name) { // TODO: hash doesn't exist in type\n          case 'SHA-1': byteLength = 160 / 8; break;\n          case 'SHA-256': byteLength = 256 / 8; break;\n          case 'SHA-384': byteLength = 384 / 8; break;\n          case 'SHA-512': byteLength = 512 / 8; break;\n          default: byteLength = 0;\n        }\n        algorithm.saltLength = saltLength === '' ? byteLength : Number(saltLength);\n\n        results.push({\n          label: 'RSA-PSS Salt Length \u2022 Needed for signature verification',\n          value: String(algorithm.saltLength),\n          defaultEncoding: ENCODING.INTEGER,\n          filename: `${filenamePrefix}-salt-length`,\n        });\n\n        // TODO: MDN reports the following as the ceiling for salt length.  However,\n        // the ceiling seems to actually be the SHA output size in bytes, at least in Safari.\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/RsaPssParams#saltlength\n        const keySizeInBits = (key.algorithm as any).modulusLength;\n        console.debug('Limit', Math.ceil((keySizeInBits - 1) / 8) - byteLength - 2);\n      }\n\n      if (key.algorithm.name === 'ECDSA') {\n        const hashAlgorithm = opArea.querySelector<HTMLSelectElement>('.ecdsa.sign select')?.selectedOptions[0].value;\n        algorithm.hash = hashAlgorithm;\n\n        results.push({\n          label: 'Hash Function \u2022 Needed for signature verification',\n          value: String(hashAlgorithm),\n          defaultEncoding: ENCODING['UTF-8'],\n          filename: `${filenamePrefix}-hash`,\n        });\n      }\n\n      const sig = await window.crypto.subtle.sign(algorithm, key, data);\n      results.unshift({\n        label: `Signature${suffix}`,\n        value: sig,\n        defaultEncoding: ENCODING.BASE64,\n        filename: filename ? `${filename}.sig` : 'signature',\n      });\n      break;\n    }\n    case 'decrypt': {\n      const key = isSymmetric ? cryptoKey : cryptoKey.privateKey;\n      const algorithm: any = { // TODO: typing this properly throw errors when adding params\n        name: key.algorithm.name,\n      };\n\n      if (key.algorithm.name === 'AES-CTR') {\n        const counterValue = opArea.querySelector<HTMLInputElement>('.aes-ctr.decrypt input.counter')?.value;\n        const counterRadix = opArea.querySelector<HTMLSelectElement>('.aes-ctr.decrypt select')?.selectedOptions[0].value;\n\n        // Counter must be exactly 16 bytes long, the AES block size.  Here we let the\n        // implementation handle throwing the error for a counter of wrong size.\n        //\n        // The length is the number of bits in the counter block used for the counter\n        // (as opposed to the nonce).  The total number of blocks in the message must be\n        // less than or equal to 2^n, where n is this counter length in bits.\n\n        let counter: ArrayBuffer;\n        if (counterValue) {\n          const radix = Number(counterRadix);\n          counter = decode(counterValue, radix);\n          if (counter.byteLength !== 16) throw new Error('Counter length must be exactly 16 bytes.');\n        } else throw new Error('AES-CTR requires the initial counter value in order to decrypt the ciphertext.');\n\n        algorithm.counter = counter;\n        algorithm.length = 64; // NIST recommends length half of the counter block size (bits)\n      }\n\n      if (key.algorithm.name === 'AES-CBC') {\n        const cbcIv = opArea.querySelector<HTMLInputElement>('.aes-cbc.decrypt .iv input')?.value;\n        const cbcIvRadix = opArea.querySelector<HTMLSelectElement>('.aes-cbc.decrypt .iv select')?.selectedOptions[0].value;\n\n        // Initialization Vector must be the same used for encryption\n        let iv: ArrayBuffer;\n        if (cbcIv) {\n          const radix = Number(cbcIvRadix);\n          iv = decode(cbcIv, radix);\n          if (iv.byteLength !== 16) throw new Error('IV length must be exactly 16 bytes.');\n        } else throw new Error('AES-CBC requires the Initialization Vector (IV) in order to decrypt the ciphertext.');\n\n        algorithm.iv = iv;\n      }\n\n      if (key.algorithm.name === 'AES-GCM') {\n        const gcmIv = opArea.querySelector<HTMLInputElement>('.aes-gcm.decrypt .iv input')?.value;\n        const gcmIvRadix = opArea.querySelector<HTMLSelectElement>('.aes-gcm.decrypt .iv select')?.selectedOptions[0].value;\n        const authenticatedDataTextArea = opArea.querySelector<HTMLTextAreaElement>('.aes-gcm.decrypt textarea');\n        const tagLength = opArea.querySelector<HTMLSelectElement>('.aes-gcm.decrypt .tag-length select')?.selectedOptions[0].value;\n\n        algorithm.tagLength = Number(tagLength) || 128; // 128 bits is implementation default\n\n        // Initialization Vector must be random and unique for every encryption operation\n        let iv: ArrayBuffer;\n        if (gcmIv) {\n          const radix = Number(gcmIvRadix);\n          iv = decode(gcmIv, radix);\n        } else throw new Error('AES-GCM requires the Initialization Vector (IV) in order to decrypt the ciphertext.');\n\n        algorithm.iv = iv;\n\n        // Additional data can be authenticated and not encrypted\n        if (authenticatedDataTextArea?.value.length) {\n          const additionalData = (new TextEncoder()).encode(authenticatedDataTextArea?.value);\n          algorithm.additionalData = additionalData;\n        }\n      }\n\n      const plaintext = await window.crypto.subtle.decrypt(algorithm, key, data);\n      results.unshift({\n        label: `Plaintext${suffix}`,\n        value: plaintext,\n        defaultEncoding: ENCODING['UTF-8'],\n        filename: filename ? filename.replace(/(\\.?enc)|(\\.?bin)/ig, '') : 'plaintext',\n        extension: null,\n      });\n      break;\n    }\n    default:\n      throw new Error(`Operation ${operation} is not implemented.`);\n  }\n\n  return results;\n};\n\n/**\n * Text input\n */\n\nconst button = opArea.querySelector<HTMLButtonElement>('button');\nbutton?.addEventListener('click', async () => {\n  load(0);\n\n  try {\n    const operation = opArea.querySelector<HTMLLIElement>('menu li.active')?.dataset.op;\n    if (!operation) throw new Error('An operation must be defined.');\n\n    const encoding = Number(opArea.querySelector<HTMLSelectElement>('.input .encoding select')?.selectedOptions[0].value);\n    const data = decode(textarea.value, encoding);\n\n    const results = await encrypt(operation, data);\n    showResults(results);\n  } catch (error) { handleError(error); }\n});\n\n/**\n * File Uploads\n */\n\nconst encryptFiles = (files?: FileList | null) => {\n  // TODO: Support multiple files.  This is tricky without some standard concatenation feature\n  // for encryption schemes that have specific, required decryption or verification values (i.e. IV)\n  if (!files || !files.length) return;\n  load(0);\n\n  try {\n    const operation = opArea.querySelector<HTMLLIElement>('menu li.active')?.dataset.op;\n    if (!operation) throw new Error('An operation must be defined.');\n\n    const list = Array.from(files);\n    const totalSize = list.reduce((size, file) => size + file.size, 0);\n    const currentSizes: number[] = [];\n    const results: Result[][] = [];\n\n    list.forEach((file, i) => {\n      const reader = new FileReader();\n\n      reader.onprogress = (event) => {\n        currentSizes[i] = event.loaded;\n        load((currentSizes.reduce((p, c) => p + c, 0) / totalSize) * 100);\n      };\n\n      reader.onload = async (event) => {\n        if (!event.target?.result || !(event.target.result instanceof ArrayBuffer)) {\n          handleError(new Error(`File [${file.name}] of type [${file.type}] failed to load.`));\n          return;\n        }\n\n        const label = `${file.name} \u2022 ${file.size.toLocaleString()} bytes \u2022 ${file.type || 'Unknown type'}`;\n\n        try {\n          results.push(await encrypt(operation, event.target.result, file.name, label));\n        } catch (error) { handleError(error); }\n\n        if (results.length === files.length) showResults(results.flat());\n      };\n\n      reader.readAsArrayBuffer(file);\n    });\n  } catch (error) { handleError(error); }\n};\n\nconst upload = opArea.querySelector<HTMLInputElement>('.upload input');\nupload?.addEventListener('change', () => encryptFiles(upload.files));\n\n/**\n * Drag-and-Drop File Uploads\n */\n\ntextarea.addEventListener('drop', (event) => {\n  encryptFiles(event.dataTransfer?.files);\n});\n", "/**\n * @file Key Generation\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport load from '../../lib/loader';\nimport { handleError } from '../../lib/error';\nimport { addKey } from './keys';\n\nconst generateElement = document.querySelector('#encryption [data-tab=\"generate-key\"]')!;\nconst purposeElement = generateElement.querySelector<HTMLSelectElement>('.control.purpose select')!;\n\n/**\n * Update footer stats\n */\nconst updateStats = () => {\n  const algorithmSelect = generateElement.querySelector<HTMLSelectElement>('.settings.algorithm.active select')!;\n  const currentAglorithm = algorithmSelect.selectedOptions[0];\n  const type = generateElement.querySelector<HTMLSpanElement>('.stats .type span')!;\n  const method = generateElement.querySelector<HTMLSpanElement>('.stats .method span')!;\n  const spec = generateElement.querySelector<HTMLSpanElement>('.stats .specification span')!;\n  const confidentiality = generateElement.querySelector<HTMLSpanElement>('.stats .confidentiality')!;\n  const integrity = generateElement.querySelector<HTMLSpanElement>('.stats .integrity')!;\n\n  // Show appropriate settings for current algorithm\n  const sections = generateElement.querySelectorAll<HTMLElement>('div.settings');\n  sections.forEach((section) => {\n    if (!section.classList.contains('algorithm')) {\n      section.classList.remove('active');\n    }\n  });\n  generateElement.querySelector(`.settings.${currentAglorithm.dataset.target}`)?.classList.add('active');\n\n  // Update statistics\n  algorithmSelect.parentElement!.querySelector('.label')!.textContent = `Algorithm \u2022 ${currentAglorithm.dataset.mode}`;\n  type.textContent = currentAglorithm.dataset.type || '';\n  method.textContent = currentAglorithm.dataset.method || '';\n  spec.textContent = currentAglorithm.dataset.spec || '';\n\n  if (currentAglorithm.dataset.confidentiality === 'true') {\n    confidentiality.classList.remove('no');\n    confidentiality.dataset.tooltip = 'Provides Confidentiality';\n  } else {\n    confidentiality.classList.add('no');\n    confidentiality.dataset.tooltip = 'Provides NO Confidentiality';\n  }\n\n  if (currentAglorithm.dataset.integrity === 'true') {\n    integrity.classList.remove('no');\n    integrity.dataset.tooltip = 'Provides Integrity Protection';\n  } else {\n    integrity.classList.add('no');\n    integrity.dataset.tooltip = 'Provides NO Integrity Protection';\n  }\n};\n\n/**\n * Update controls based on selected key generation purpose\n */\npurposeElement.addEventListener('change', () => {\n  const target = purposeElement.selectedOptions[0].value;\n  const sections = generateElement.querySelectorAll('.settings.algorithm');\n\n  sections.forEach((section) => section.classList.remove('active'));\n  generateElement.querySelector(`.settings.${target}`)?.classList.add('active');\n\n  updateStats();\n});\ngenerateElement.querySelectorAll('.settings.algorithm').forEach((alg) => alg.addEventListener('change', () => updateStats()));\n\n/**\n * Convert a decimal integer to Uint8Array\n */\nconst intToArray = (num: number): Uint8Array => {\n  let n = num;\n  const bytes = [];\n\n  while (n > 0) {\n    // eslint-disable-next-line no-bitwise\n    bytes.unshift(n & 0xFF); // Get the lowest 8 bits\n    // eslint-disable-next-line no-bitwise\n    n >>= 8; // Shift right by 8 bits\n  }\n  return new Uint8Array(bytes);\n};\n\n/**\n * Handle key generation trigger\n */\nconst button = generateElement.querySelector('button');\nbutton?.addEventListener('click', async () => {\n  button.disabled = true;\n  load(0);\n\n  const nameElement = generateElement.querySelector<HTMLInputElement>('.name input')!;\n  const name = nameElement.value;\n  const algorithmSelect = generateElement.querySelector<HTMLSelectElement>('.settings.algorithm.active select')!;\n  const currentAglorithm = algorithmSelect.selectedOptions[0];\n\n  try {\n    if (!name) throw new Error('A key name is required.');\n\n    let params: RsaHashedKeyGenParams | EcKeyGenParams | HmacKeyGenParams | AesKeyGenParams;\n    const keyUsage: KeyUsage[] = purposeElement.value === 'encryption'\n      ? ['encrypt', 'decrypt']\n      : ['sign', 'verify'];\n\n    switch (currentAglorithm.dataset.target) {\n      case 'rsa': {\n        const modulusLength = Number(generateElement.querySelector<HTMLOptionElement>('.settings.rsa input.modulus-length')?.value) || 2048;\n        const exponent = Number(generateElement.querySelector<HTMLOptionElement>('.settings.rsa input.public-exponent')?.value) || 65537;\n        const hash = generateElement.querySelector<HTMLSelectElement>('.settings.rsa select.hash')?.value || 'SHA-256';\n\n        params = {\n          name: currentAglorithm.dataset.alg || '',\n          modulusLength,\n          publicExponent: intToArray(exponent),\n          hash,\n        };\n        break;\n      }\n\n      case 'ec': {\n        const curve = generateElement.querySelector<HTMLSelectElement>('.settings.ec select.curve')?.value || 'P-256';\n        params = {\n          name: currentAglorithm.dataset.alg || '',\n          namedCurve: curve,\n        };\n        break;\n      }\n\n      case 'hmac': {\n        const hash = generateElement.querySelector<HTMLSelectElement>('.settings.hmac select.hash')?.value || 'SHA-256';\n        params = {\n          name: currentAglorithm.dataset.alg || '',\n          hash,\n        };\n        break;\n      }\n\n      case 'aes': {\n        const length = Number(generateElement.querySelector<HTMLSelectElement>('.settings.aes select.key-length')?.value) || 256;\n        params = {\n          name: currentAglorithm.dataset.alg || '',\n          length,\n        };\n        break;\n      }\n\n      default:\n        throw new Error('No algorithm selected.');\n    }\n\n    const extractable = generateElement.querySelector<HTMLInputElement>('.extractable input')?.checked || false;\n    const key = await window.crypto.subtle.generateKey(params, extractable, keyUsage);\n    const persist = generateElement.querySelector<HTMLInputElement>('.save input')?.checked;\n    addKey(name, key, persist);\n  } catch (e) {\n    handleError(e);\n    button.disabled = false;\n    return;\n  }\n\n  // Reset form\n  generateElement.querySelector<HTMLFormElement>('form')?.reset();\n  const event = new Event('change');\n  purposeElement.dispatchEvent(event);\n  button.disabled = false;\n});\n", "/*!\n * Copyright (c) 2014, GMO GlobalSign\n * Copyright (c) 2015-2022, Peculiar Ventures\n * All rights reserved.\n * \n * Author 2014-2019, Yury Strozhevsky\n * \n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n * \n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n * \n * * Redistributions in binary form must reproduce the above copyright notice, this\n *   list of conditions and the following disclaimer in the documentation and/or\n *   other materials provided with the distribution.\n * \n * * Neither the name of the copyright holder nor the names of its\n *   contributors may be used to endorse or promote products derived from\n *   this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n * \n */\n\nimport * as pvtsutils from 'pvtsutils';\nimport * as pvutils from 'pvutils';\n\nfunction assertBigInt() {\r\n    if (typeof BigInt === \"undefined\") {\r\n        throw new Error(\"BigInt is not defined. Your environment doesn't implement BigInt.\");\r\n    }\r\n}\r\nfunction concat(buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (let i = 0; i < buffers.length; i++) {\r\n        const buffer = buffers[i];\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retView = new Uint8Array(outputLength);\r\n    for (let i = 0; i < buffers.length; i++) {\r\n        const buffer = buffers[i];\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retView.buffer;\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof Uint8Array)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be 'Uint8Array'\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\nclass ViewWriter {\r\n    constructor() {\r\n        this.items = [];\r\n    }\r\n    write(buf) {\r\n        this.items.push(buf);\r\n    }\r\n    final() {\r\n        return concat(this.items);\r\n    }\r\n}\n\nconst powers2 = [new Uint8Array([1])];\r\nconst digitsString = \"0123456789\";\r\nconst NAME = \"name\";\r\nconst VALUE_HEX_VIEW = \"valueHexView\";\r\nconst IS_HEX_ONLY = \"isHexOnly\";\r\nconst ID_BLOCK = \"idBlock\";\r\nconst TAG_CLASS = \"tagClass\";\r\nconst TAG_NUMBER = \"tagNumber\";\r\nconst IS_CONSTRUCTED = \"isConstructed\";\r\nconst FROM_BER = \"fromBER\";\r\nconst TO_BER = \"toBER\";\r\nconst LOCAL = \"local\";\r\nconst EMPTY_STRING = \"\";\r\nconst EMPTY_BUFFER = new ArrayBuffer(0);\r\nconst EMPTY_VIEW = new Uint8Array(0);\r\nconst END_OF_CONTENT_NAME = \"EndOfContent\";\r\nconst OCTET_STRING_NAME = \"OCTET STRING\";\r\nconst BIT_STRING_NAME = \"BIT STRING\";\n\nfunction HexBlock(BaseClass) {\r\n    var _a;\r\n    return _a = class Some extends BaseClass {\r\n            constructor(...args) {\r\n                var _a;\r\n                super(...args);\r\n                const params = args[0] || {};\r\n                this.isHexOnly = (_a = params.isHexOnly) !== null && _a !== void 0 ? _a : false;\r\n                this.valueHexView = params.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(params.valueHex) : EMPTY_VIEW;\r\n            }\r\n            get valueHex() {\r\n                return this.valueHexView.slice().buffer;\r\n            }\r\n            set valueHex(value) {\r\n                this.valueHexView = new Uint8Array(value);\r\n            }\r\n            fromBER(inputBuffer, inputOffset, inputLength) {\r\n                const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\r\n                if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n                    return -1;\r\n                }\r\n                const endLength = inputOffset + inputLength;\r\n                this.valueHexView = view.subarray(inputOffset, endLength);\r\n                if (!this.valueHexView.length) {\r\n                    this.warnings.push(\"Zero buffer length\");\r\n                    return inputOffset;\r\n                }\r\n                this.blockLength = inputLength;\r\n                return endLength;\r\n            }\r\n            toBER(sizeOnly = false) {\r\n                if (!this.isHexOnly) {\r\n                    this.error = \"Flag 'isHexOnly' is not set, abort\";\r\n                    return EMPTY_BUFFER;\r\n                }\r\n                if (sizeOnly) {\r\n                    return new ArrayBuffer(this.valueHexView.byteLength);\r\n                }\r\n                return (this.valueHexView.byteLength === this.valueHexView.buffer.byteLength)\r\n                    ? this.valueHexView.buffer\r\n                    : this.valueHexView.slice().buffer;\r\n            }\r\n            toJSON() {\r\n                return {\r\n                    ...super.toJSON(),\r\n                    isHexOnly: this.isHexOnly,\r\n                    valueHex: pvtsutils.Convert.ToHex(this.valueHexView),\r\n                };\r\n            }\r\n        },\r\n        _a.NAME = \"hexBlock\",\r\n        _a;\r\n}\n\nclass LocalBaseBlock {\r\n    constructor({ blockLength = 0, error = EMPTY_STRING, warnings = [], valueBeforeDecode = EMPTY_VIEW, } = {}) {\r\n        this.blockLength = blockLength;\r\n        this.error = error;\r\n        this.warnings = warnings;\r\n        this.valueBeforeDecodeView = pvtsutils.BufferSourceConverter.toUint8Array(valueBeforeDecode);\r\n    }\r\n    static blockName() {\r\n        return this.NAME;\r\n    }\r\n    get valueBeforeDecode() {\r\n        return this.valueBeforeDecodeView.slice().buffer;\r\n    }\r\n    set valueBeforeDecode(value) {\r\n        this.valueBeforeDecodeView = new Uint8Array(value);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            blockName: this.constructor.NAME,\r\n            blockLength: this.blockLength,\r\n            error: this.error,\r\n            warnings: this.warnings,\r\n            valueBeforeDecode: pvtsutils.Convert.ToHex(this.valueBeforeDecodeView),\r\n        };\r\n    }\r\n}\r\nLocalBaseBlock.NAME = \"baseBlock\";\n\nclass ValueBlock extends LocalBaseBlock {\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        throw TypeError(\"User need to make a specific function in a class which extends 'ValueBlock'\");\r\n    }\r\n}\r\nValueBlock.NAME = \"valueBlock\";\n\nclass LocalIdentificationBlock extends HexBlock(LocalBaseBlock) {\r\n    constructor({ idBlock = {}, } = {}) {\r\n        var _a, _b, _c, _d;\r\n        super();\r\n        if (idBlock) {\r\n            this.isHexOnly = (_a = idBlock.isHexOnly) !== null && _a !== void 0 ? _a : false;\r\n            this.valueHexView = idBlock.valueHex ? pvtsutils.BufferSourceConverter.toUint8Array(idBlock.valueHex) : EMPTY_VIEW;\r\n            this.tagClass = (_b = idBlock.tagClass) !== null && _b !== void 0 ? _b : -1;\r\n            this.tagNumber = (_c = idBlock.tagNumber) !== null && _c !== void 0 ? _c : -1;\r\n            this.isConstructed = (_d = idBlock.isConstructed) !== null && _d !== void 0 ? _d : false;\r\n        }\r\n        else {\r\n            this.tagClass = -1;\r\n            this.tagNumber = -1;\r\n            this.isConstructed = false;\r\n        }\r\n    }\r\n    toBER(sizeOnly = false) {\r\n        let firstOctet = 0;\r\n        switch (this.tagClass) {\r\n            case 1:\r\n                firstOctet |= 0x00;\r\n                break;\r\n            case 2:\r\n                firstOctet |= 0x40;\r\n                break;\r\n            case 3:\r\n                firstOctet |= 0x80;\r\n                break;\r\n            case 4:\r\n                firstOctet |= 0xC0;\r\n                break;\r\n            default:\r\n                this.error = \"Unknown tag class\";\r\n                return EMPTY_BUFFER;\r\n        }\r\n        if (this.isConstructed)\r\n            firstOctet |= 0x20;\r\n        if (this.tagNumber < 31 && !this.isHexOnly) {\r\n            const retView = new Uint8Array(1);\r\n            if (!sizeOnly) {\r\n                let number = this.tagNumber;\r\n                number &= 0x1F;\r\n                firstOctet |= number;\r\n                retView[0] = firstOctet;\r\n            }\r\n            return retView.buffer;\r\n        }\r\n        if (!this.isHexOnly) {\r\n            const encodedBuf = pvutils.utilToBase(this.tagNumber, 7);\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const size = encodedBuf.byteLength;\r\n            const retView = new Uint8Array(size + 1);\r\n            retView[0] = (firstOctet | 0x1F);\r\n            if (!sizeOnly) {\r\n                for (let i = 0; i < (size - 1); i++)\r\n                    retView[i + 1] = encodedView[i] | 0x80;\r\n                retView[size] = encodedView[size - 1];\r\n            }\r\n            return retView.buffer;\r\n        }\r\n        const retView = new Uint8Array(this.valueHexView.byteLength + 1);\r\n        retView[0] = (firstOctet | 0x1F);\r\n        if (!sizeOnly) {\r\n            const curView = this.valueHexView;\r\n            for (let i = 0; i < (curView.length - 1); i++)\r\n                retView[i + 1] = curView[i] | 0x80;\r\n            retView[this.valueHexView.byteLength] = curView[curView.length - 1];\r\n        }\r\n        return retView.buffer;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        if (intBuffer.length === 0) {\r\n            this.error = \"Zero buffer length\";\r\n            return -1;\r\n        }\r\n        const tagClassMask = intBuffer[0] & 0xC0;\r\n        switch (tagClassMask) {\r\n            case 0x00:\r\n                this.tagClass = (1);\r\n                break;\r\n            case 0x40:\r\n                this.tagClass = (2);\r\n                break;\r\n            case 0x80:\r\n                this.tagClass = (3);\r\n                break;\r\n            case 0xC0:\r\n                this.tagClass = (4);\r\n                break;\r\n            default:\r\n                this.error = \"Unknown tag class\";\r\n                return -1;\r\n        }\r\n        this.isConstructed = (intBuffer[0] & 0x20) === 0x20;\r\n        this.isHexOnly = false;\r\n        const tagNumberMask = intBuffer[0] & 0x1F;\r\n        if (tagNumberMask !== 0x1F) {\r\n            this.tagNumber = (tagNumberMask);\r\n            this.blockLength = 1;\r\n        }\r\n        else {\r\n            let count = 1;\r\n            let intTagNumberBuffer = this.valueHexView = new Uint8Array(255);\r\n            let tagNumberBufferMaxLength = 255;\r\n            while (intBuffer[count] & 0x80) {\r\n                intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\r\n                count++;\r\n                if (count >= intBuffer.length) {\r\n                    this.error = \"End of input reached before message was fully decoded\";\r\n                    return -1;\r\n                }\r\n                if (count === tagNumberBufferMaxLength) {\r\n                    tagNumberBufferMaxLength += 255;\r\n                    const tempBufferView = new Uint8Array(tagNumberBufferMaxLength);\r\n                    for (let i = 0; i < intTagNumberBuffer.length; i++)\r\n                        tempBufferView[i] = intTagNumberBuffer[i];\r\n                    intTagNumberBuffer = this.valueHexView = new Uint8Array(tagNumberBufferMaxLength);\r\n                }\r\n            }\r\n            this.blockLength = (count + 1);\r\n            intTagNumberBuffer[count - 1] = intBuffer[count] & 0x7F;\r\n            const tempBufferView = new Uint8Array(count);\r\n            for (let i = 0; i < count; i++)\r\n                tempBufferView[i] = intTagNumberBuffer[i];\r\n            intTagNumberBuffer = this.valueHexView = new Uint8Array(count);\r\n            intTagNumberBuffer.set(tempBufferView);\r\n            if (this.blockLength <= 9)\r\n                this.tagNumber = pvutils.utilFromBase(intTagNumberBuffer, 7);\r\n            else {\r\n                this.isHexOnly = true;\r\n                this.warnings.push(\"Tag too long, represented as hex-coded\");\r\n            }\r\n        }\r\n        if (((this.tagClass === 1)) &&\r\n            (this.isConstructed)) {\r\n            switch (this.tagNumber) {\r\n                case 1:\r\n                case 2:\r\n                case 5:\r\n                case 6:\r\n                case 9:\r\n                case 13:\r\n                case 14:\r\n                case 23:\r\n                case 24:\r\n                case 31:\r\n                case 32:\r\n                case 33:\r\n                case 34:\r\n                    this.error = \"Constructed encoding used for primitive type\";\r\n                    return -1;\r\n            }\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            tagClass: this.tagClass,\r\n            tagNumber: this.tagNumber,\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalIdentificationBlock.NAME = \"identificationBlock\";\n\nclass LocalLengthBlock extends LocalBaseBlock {\r\n    constructor({ lenBlock = {}, } = {}) {\r\n        var _a, _b, _c;\r\n        super();\r\n        this.isIndefiniteForm = (_a = lenBlock.isIndefiniteForm) !== null && _a !== void 0 ? _a : false;\r\n        this.longFormUsed = (_b = lenBlock.longFormUsed) !== null && _b !== void 0 ? _b : false;\r\n        this.length = (_c = lenBlock.length) !== null && _c !== void 0 ? _c : 0;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = view.subarray(inputOffset, inputOffset + inputLength);\r\n        if (intBuffer.length === 0) {\r\n            this.error = \"Zero buffer length\";\r\n            return -1;\r\n        }\r\n        if (intBuffer[0] === 0xFF) {\r\n            this.error = \"Length block 0xFF is reserved by standard\";\r\n            return -1;\r\n        }\r\n        this.isIndefiniteForm = intBuffer[0] === 0x80;\r\n        if (this.isIndefiniteForm) {\r\n            this.blockLength = 1;\r\n            return (inputOffset + this.blockLength);\r\n        }\r\n        this.longFormUsed = !!(intBuffer[0] & 0x80);\r\n        if (this.longFormUsed === false) {\r\n            this.length = (intBuffer[0]);\r\n            this.blockLength = 1;\r\n            return (inputOffset + this.blockLength);\r\n        }\r\n        const count = intBuffer[0] & 0x7F;\r\n        if (count > 8) {\r\n            this.error = \"Too big integer\";\r\n            return -1;\r\n        }\r\n        if ((count + 1) > intBuffer.length) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        const lenOffset = inputOffset + 1;\r\n        const lengthBufferView = view.subarray(lenOffset, lenOffset + count);\r\n        if (lengthBufferView[count - 1] === 0x00)\r\n            this.warnings.push(\"Needlessly long encoded length\");\r\n        this.length = pvutils.utilFromBase(lengthBufferView, 8);\r\n        if (this.longFormUsed && (this.length <= 127))\r\n            this.warnings.push(\"Unnecessary usage of long length form\");\r\n        this.blockLength = count + 1;\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toBER(sizeOnly = false) {\r\n        let retBuf;\r\n        let retView;\r\n        if (this.length > 127)\r\n            this.longFormUsed = true;\r\n        if (this.isIndefiniteForm) {\r\n            retBuf = new ArrayBuffer(1);\r\n            if (sizeOnly === false) {\r\n                retView = new Uint8Array(retBuf);\r\n                retView[0] = 0x80;\r\n            }\r\n            return retBuf;\r\n        }\r\n        if (this.longFormUsed) {\r\n            const encodedBuf = pvutils.utilToBase(this.length, 8);\r\n            if (encodedBuf.byteLength > 127) {\r\n                this.error = \"Too big length\";\r\n                return (EMPTY_BUFFER);\r\n            }\r\n            retBuf = new ArrayBuffer(encodedBuf.byteLength + 1);\r\n            if (sizeOnly)\r\n                return retBuf;\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            retView = new Uint8Array(retBuf);\r\n            retView[0] = encodedBuf.byteLength | 0x80;\r\n            for (let i = 0; i < encodedBuf.byteLength; i++)\r\n                retView[i + 1] = encodedView[i];\r\n            return retBuf;\r\n        }\r\n        retBuf = new ArrayBuffer(1);\r\n        if (sizeOnly === false) {\r\n            retView = new Uint8Array(retBuf);\r\n            retView[0] = this.length;\r\n        }\r\n        return retBuf;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            isIndefiniteForm: this.isIndefiniteForm,\r\n            longFormUsed: this.longFormUsed,\r\n            length: this.length,\r\n        };\r\n    }\r\n}\r\nLocalLengthBlock.NAME = \"lengthBlock\";\n\nconst typeStore = {};\n\nclass BaseBlock extends LocalBaseBlock {\r\n    constructor({ name = EMPTY_STRING, optional = false, primitiveSchema, ...parameters } = {}, valueBlockType) {\r\n        super(parameters);\r\n        this.name = name;\r\n        this.optional = optional;\r\n        if (primitiveSchema) {\r\n            this.primitiveSchema = primitiveSchema;\r\n        }\r\n        this.idBlock = new LocalIdentificationBlock(parameters);\r\n        this.lenBlock = new LocalLengthBlock(parameters);\r\n        this.valueBlock = valueBlockType ? new valueBlockType(parameters) : new ValueBlock(parameters);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const _writer = writer || new ViewWriter();\r\n        if (!writer) {\r\n            prepareIndefiniteForm(this);\r\n        }\r\n        const idBlockBuf = this.idBlock.toBER(sizeOnly);\r\n        _writer.write(idBlockBuf);\r\n        if (this.lenBlock.isIndefiniteForm) {\r\n            _writer.write(new Uint8Array([0x80]).buffer);\r\n            this.valueBlock.toBER(sizeOnly, _writer);\r\n            _writer.write(new ArrayBuffer(2));\r\n        }\r\n        else {\r\n            const valueBlockBuf = this.valueBlock.toBER(sizeOnly);\r\n            this.lenBlock.length = valueBlockBuf.byteLength;\r\n            const lenBlockBuf = this.lenBlock.toBER(sizeOnly);\r\n            _writer.write(lenBlockBuf);\r\n            _writer.write(valueBlockBuf);\r\n        }\r\n        if (!writer) {\r\n            return _writer.final();\r\n        }\r\n        return EMPTY_BUFFER;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            idBlock: this.idBlock.toJSON(),\r\n            lenBlock: this.lenBlock.toJSON(),\r\n            valueBlock: this.valueBlock.toJSON(),\r\n            name: this.name,\r\n            optional: this.optional,\r\n        };\r\n        if (this.primitiveSchema)\r\n            object.primitiveSchema = this.primitiveSchema.toJSON();\r\n        return object;\r\n    }\r\n    toString(encoding = \"ascii\") {\r\n        if (encoding === \"ascii\") {\r\n            return this.onAsciiEncoding();\r\n        }\r\n        return pvtsutils.Convert.ToHex(this.toBER());\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${pvtsutils.Convert.ToHex(this.valueBlock.valueBeforeDecodeView)}`;\r\n    }\r\n    isEqual(other) {\r\n        if (this === other) {\r\n            return true;\r\n        }\r\n        if (!(other instanceof this.constructor)) {\r\n            return false;\r\n        }\r\n        const thisRaw = this.toBER();\r\n        const otherRaw = other.toBER();\r\n        return pvutils.isEqualBuffer(thisRaw, otherRaw);\r\n    }\r\n}\r\nBaseBlock.NAME = \"BaseBlock\";\r\nfunction prepareIndefiniteForm(baseBlock) {\r\n    if (baseBlock instanceof typeStore.Constructed) {\r\n        for (const value of baseBlock.valueBlock.value) {\r\n            if (prepareIndefiniteForm(value)) {\r\n                baseBlock.lenBlock.isIndefiniteForm = true;\r\n            }\r\n        }\r\n    }\r\n    return !!baseBlock.lenBlock.isIndefiniteForm;\r\n}\n\nclass BaseStringBlock extends BaseBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}, stringValueBlockType) {\r\n        super(parameters, stringValueBlockType);\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.value;\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.value = value;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        this.fromBuffer(this.valueBlock.valueHexView);\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : '${this.valueBlock.value}'`;\r\n    }\r\n}\r\nBaseStringBlock.NAME = \"BaseStringBlock\";\n\nclass LocalPrimitiveValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ isHexOnly = true, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isHexOnly = isHexOnly;\r\n    }\r\n}\r\nLocalPrimitiveValueBlock.NAME = \"PrimitiveValueBlock\";\n\nvar _a$w;\r\nclass Primitive extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalPrimitiveValueBlock);\r\n        this.idBlock.isConstructed = false;\r\n    }\r\n}\r\n_a$w = Primitive;\r\n(() => {\r\n    typeStore.Primitive = _a$w;\r\n})();\r\nPrimitive.NAME = \"PRIMITIVE\";\n\nfunction localChangeType(inputObject, newType) {\r\n    if (inputObject instanceof newType) {\r\n        return inputObject;\r\n    }\r\n    const newObject = new newType();\r\n    newObject.idBlock = inputObject.idBlock;\r\n    newObject.lenBlock = inputObject.lenBlock;\r\n    newObject.warnings = inputObject.warnings;\r\n    newObject.valueBeforeDecodeView = inputObject.valueBeforeDecodeView;\r\n    return newObject;\r\n}\r\nfunction localFromBER(inputBuffer, inputOffset = 0, inputLength = inputBuffer.length) {\r\n    const incomingOffset = inputOffset;\r\n    let returnObject = new BaseBlock({}, ValueBlock);\r\n    const baseBlock = new LocalBaseBlock();\r\n    if (!checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength)) {\r\n        returnObject.error = baseBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    const intBuffer = inputBuffer.subarray(inputOffset, inputOffset + inputLength);\r\n    if (!intBuffer.length) {\r\n        returnObject.error = \"Zero buffer length\";\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    let resultOffset = returnObject.idBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n    if (returnObject.idBlock.warnings.length) {\r\n        returnObject.warnings.concat(returnObject.idBlock.warnings);\r\n    }\r\n    if (resultOffset === -1) {\r\n        returnObject.error = returnObject.idBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    inputOffset = resultOffset;\r\n    inputLength -= returnObject.idBlock.blockLength;\r\n    resultOffset = returnObject.lenBlock.fromBER(inputBuffer, inputOffset, inputLength);\r\n    if (returnObject.lenBlock.warnings.length) {\r\n        returnObject.warnings.concat(returnObject.lenBlock.warnings);\r\n    }\r\n    if (resultOffset === -1) {\r\n        returnObject.error = returnObject.lenBlock.error;\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    inputOffset = resultOffset;\r\n    inputLength -= returnObject.lenBlock.blockLength;\r\n    if (!returnObject.idBlock.isConstructed &&\r\n        returnObject.lenBlock.isIndefiniteForm) {\r\n        returnObject.error = \"Indefinite length form used for primitive encoding form\";\r\n        return {\r\n            offset: -1,\r\n            result: returnObject\r\n        };\r\n    }\r\n    let newASN1Type = BaseBlock;\r\n    switch (returnObject.idBlock.tagClass) {\r\n        case 1:\r\n            if ((returnObject.idBlock.tagNumber >= 37) &&\r\n                (returnObject.idBlock.isHexOnly === false)) {\r\n                returnObject.error = \"UNIVERSAL 37 and upper tags are reserved by ASN.1 standard\";\r\n                return {\r\n                    offset: -1,\r\n                    result: returnObject\r\n                };\r\n            }\r\n            switch (returnObject.idBlock.tagNumber) {\r\n                case 0:\r\n                    if ((returnObject.idBlock.isConstructed) &&\r\n                        (returnObject.lenBlock.length > 0)) {\r\n                        returnObject.error = \"Type [UNIVERSAL 0] is reserved\";\r\n                        return {\r\n                            offset: -1,\r\n                            result: returnObject\r\n                        };\r\n                    }\r\n                    newASN1Type = typeStore.EndOfContent;\r\n                    break;\r\n                case 1:\r\n                    newASN1Type = typeStore.Boolean;\r\n                    break;\r\n                case 2:\r\n                    newASN1Type = typeStore.Integer;\r\n                    break;\r\n                case 3:\r\n                    newASN1Type = typeStore.BitString;\r\n                    break;\r\n                case 4:\r\n                    newASN1Type = typeStore.OctetString;\r\n                    break;\r\n                case 5:\r\n                    newASN1Type = typeStore.Null;\r\n                    break;\r\n                case 6:\r\n                    newASN1Type = typeStore.ObjectIdentifier;\r\n                    break;\r\n                case 10:\r\n                    newASN1Type = typeStore.Enumerated;\r\n                    break;\r\n                case 12:\r\n                    newASN1Type = typeStore.Utf8String;\r\n                    break;\r\n                case 13:\r\n                    newASN1Type = typeStore.RelativeObjectIdentifier;\r\n                    break;\r\n                case 14:\r\n                    newASN1Type = typeStore.TIME;\r\n                    break;\r\n                case 15:\r\n                    returnObject.error = \"[UNIVERSAL 15] is reserved by ASN.1 standard\";\r\n                    return {\r\n                        offset: -1,\r\n                        result: returnObject\r\n                    };\r\n                case 16:\r\n                    newASN1Type = typeStore.Sequence;\r\n                    break;\r\n                case 17:\r\n                    newASN1Type = typeStore.Set;\r\n                    break;\r\n                case 18:\r\n                    newASN1Type = typeStore.NumericString;\r\n                    break;\r\n                case 19:\r\n                    newASN1Type = typeStore.PrintableString;\r\n                    break;\r\n                case 20:\r\n                    newASN1Type = typeStore.TeletexString;\r\n                    break;\r\n                case 21:\r\n                    newASN1Type = typeStore.VideotexString;\r\n                    break;\r\n                case 22:\r\n                    newASN1Type = typeStore.IA5String;\r\n                    break;\r\n                case 23:\r\n                    newASN1Type = typeStore.UTCTime;\r\n                    break;\r\n                case 24:\r\n                    newASN1Type = typeStore.GeneralizedTime;\r\n                    break;\r\n                case 25:\r\n                    newASN1Type = typeStore.GraphicString;\r\n                    break;\r\n                case 26:\r\n                    newASN1Type = typeStore.VisibleString;\r\n                    break;\r\n                case 27:\r\n                    newASN1Type = typeStore.GeneralString;\r\n                    break;\r\n                case 28:\r\n                    newASN1Type = typeStore.UniversalString;\r\n                    break;\r\n                case 29:\r\n                    newASN1Type = typeStore.CharacterString;\r\n                    break;\r\n                case 30:\r\n                    newASN1Type = typeStore.BmpString;\r\n                    break;\r\n                case 31:\r\n                    newASN1Type = typeStore.DATE;\r\n                    break;\r\n                case 32:\r\n                    newASN1Type = typeStore.TimeOfDay;\r\n                    break;\r\n                case 33:\r\n                    newASN1Type = typeStore.DateTime;\r\n                    break;\r\n                case 34:\r\n                    newASN1Type = typeStore.Duration;\r\n                    break;\r\n                default: {\r\n                    const newObject = returnObject.idBlock.isConstructed\r\n                        ? new typeStore.Constructed()\r\n                        : new typeStore.Primitive();\r\n                    newObject.idBlock = returnObject.idBlock;\r\n                    newObject.lenBlock = returnObject.lenBlock;\r\n                    newObject.warnings = returnObject.warnings;\r\n                    returnObject = newObject;\r\n                }\r\n            }\r\n            break;\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n        default: {\r\n            newASN1Type = returnObject.idBlock.isConstructed\r\n                ? typeStore.Constructed\r\n                : typeStore.Primitive;\r\n        }\r\n    }\r\n    returnObject = localChangeType(returnObject, newASN1Type);\r\n    resultOffset = returnObject.fromBER(inputBuffer, inputOffset, returnObject.lenBlock.isIndefiniteForm ? inputLength : returnObject.lenBlock.length);\r\n    returnObject.valueBeforeDecodeView = inputBuffer.subarray(incomingOffset, incomingOffset + returnObject.blockLength);\r\n    return {\r\n        offset: resultOffset,\r\n        result: returnObject\r\n    };\r\n}\r\nfunction fromBER(inputBuffer) {\r\n    if (!inputBuffer.byteLength) {\r\n        const result = new BaseBlock({}, ValueBlock);\r\n        result.error = \"Input buffer has zero length\";\r\n        return {\r\n            offset: -1,\r\n            result\r\n        };\r\n    }\r\n    return localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).slice(), 0, inputBuffer.byteLength);\r\n}\n\nfunction checkLen(indefiniteLength, length) {\r\n    if (indefiniteLength) {\r\n        return 1;\r\n    }\r\n    return length;\r\n}\r\nclass LocalConstructedValueBlock extends ValueBlock {\r\n    constructor({ value = [], isIndefiniteForm = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n        this.isIndefiniteForm = isIndefiniteForm;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const view = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, view, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        this.valueBeforeDecodeView = view.subarray(inputOffset, inputOffset + inputLength);\r\n        if (this.valueBeforeDecodeView.length === 0) {\r\n            this.warnings.push(\"Zero buffer length\");\r\n            return inputOffset;\r\n        }\r\n        let currentOffset = inputOffset;\r\n        while (checkLen(this.isIndefiniteForm, inputLength) > 0) {\r\n            const returnObject = localFromBER(view, currentOffset, inputLength);\r\n            if (returnObject.offset === -1) {\r\n                this.error = returnObject.result.error;\r\n                this.warnings.concat(returnObject.result.warnings);\r\n                return -1;\r\n            }\r\n            currentOffset = returnObject.offset;\r\n            this.blockLength += returnObject.result.blockLength;\r\n            inputLength -= returnObject.result.blockLength;\r\n            this.value.push(returnObject.result);\r\n            if (this.isIndefiniteForm && returnObject.result.constructor.NAME === END_OF_CONTENT_NAME) {\r\n                break;\r\n            }\r\n        }\r\n        if (this.isIndefiniteForm) {\r\n            if (this.value[this.value.length - 1].constructor.NAME === END_OF_CONTENT_NAME) {\r\n                this.value.pop();\r\n            }\r\n            else {\r\n                this.warnings.push(\"No EndOfContent block encoded\");\r\n            }\r\n        }\r\n        return currentOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const _writer = writer || new ViewWriter();\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            this.value[i].toBER(sizeOnly, _writer);\r\n        }\r\n        if (!writer) {\r\n            return _writer.final();\r\n        }\r\n        return EMPTY_BUFFER;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            isIndefiniteForm: this.isIndefiniteForm,\r\n            value: [],\r\n        };\r\n        for (const value of this.value) {\r\n            object.value.push(value.toJSON());\r\n        }\r\n        return object;\r\n    }\r\n}\r\nLocalConstructedValueBlock.NAME = \"ConstructedValueBlock\";\n\nvar _a$v;\r\nclass Constructed extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalConstructedValueBlock);\r\n        this.idBlock.isConstructed = true;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        const resultOffset = this.valueBlock.fromBER(inputBuffer, inputOffset, (this.lenBlock.isIndefiniteForm) ? inputLength : this.lenBlock.length);\r\n        if (resultOffset === -1) {\r\n            this.error = this.valueBlock.error;\r\n            return resultOffset;\r\n        }\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        if (!this.valueBlock.error.length)\r\n            this.blockLength += this.valueBlock.blockLength;\r\n        return resultOffset;\r\n    }\r\n    onAsciiEncoding() {\r\n        const values = [];\r\n        for (const value of this.valueBlock.value) {\r\n            values.push(value.toString(\"ascii\").split(\"\\n\").map(o => `  ${o}`).join(\"\\n\"));\r\n        }\r\n        const blockName = this.idBlock.tagClass === 3\r\n            ? `[${this.idBlock.tagNumber}]`\r\n            : this.constructor.NAME;\r\n        return values.length\r\n            ? `${blockName} :\\n${values.join(\"\\n\")}`\r\n            : `${blockName} :`;\r\n    }\r\n}\r\n_a$v = Constructed;\r\n(() => {\r\n    typeStore.Constructed = _a$v;\r\n})();\r\nConstructed.NAME = \"CONSTRUCTED\";\n\nclass LocalEndOfContentValueBlock extends ValueBlock {\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        return inputOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return EMPTY_BUFFER;\r\n    }\r\n}\r\nLocalEndOfContentValueBlock.override = \"EndOfContentValueBlock\";\n\nvar _a$u;\r\nclass EndOfContent extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalEndOfContentValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 0;\r\n    }\r\n}\r\n_a$u = EndOfContent;\r\n(() => {\r\n    typeStore.EndOfContent = _a$u;\r\n})();\r\nEndOfContent.NAME = END_OF_CONTENT_NAME;\n\nvar _a$t;\r\nclass Null extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, ValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 5;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (this.lenBlock.length > 0)\r\n            this.warnings.push(\"Non-zero length of value block for Null type\");\r\n        if (!this.idBlock.error.length)\r\n            this.blockLength += this.idBlock.blockLength;\r\n        if (!this.lenBlock.error.length)\r\n            this.blockLength += this.lenBlock.blockLength;\r\n        this.blockLength += inputLength;\r\n        if ((inputOffset + inputLength) > inputBuffer.byteLength) {\r\n            this.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n            return -1;\r\n        }\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const retBuf = new ArrayBuffer(2);\r\n        if (!sizeOnly) {\r\n            const retView = new Uint8Array(retBuf);\r\n            retView[0] = 0x05;\r\n            retView[1] = 0x00;\r\n        }\r\n        if (writer) {\r\n            writer.write(retBuf);\r\n        }\r\n        return retBuf;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME}`;\r\n    }\r\n}\r\n_a$t = Null;\r\n(() => {\r\n    typeStore.Null = _a$t;\r\n})();\r\nNull.NAME = \"NULL\";\n\nclass LocalBooleanValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ value, ...parameters } = {}) {\r\n        super(parameters);\r\n        if (parameters.valueHex) {\r\n            this.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(parameters.valueHex);\r\n        }\r\n        else {\r\n            this.valueHexView = new Uint8Array(1);\r\n        }\r\n        if (value) {\r\n            this.value = value;\r\n        }\r\n    }\r\n    get value() {\r\n        for (const octet of this.valueHexView) {\r\n            if (octet > 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    set value(value) {\r\n        this.valueHexView[0] = value ? 0xFF : 0x00;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        this.valueHexView = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        if (inputLength > 1)\r\n            this.warnings.push(\"Boolean value encoded in more then 1 octet\");\r\n        this.isHexOnly = true;\r\n        pvutils.utilDecodeTC.call(this);\r\n        this.blockLength = inputLength;\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER() {\r\n        return this.valueHexView.slice();\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\nLocalBooleanValueBlock.NAME = \"BooleanValueBlock\";\n\nvar _a$s;\r\nclass Boolean extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalBooleanValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 1;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.value;\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.value = value;\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.getValue}`;\r\n    }\r\n}\r\n_a$s = Boolean;\r\n(() => {\r\n    typeStore.Boolean = _a$s;\r\n})();\r\nBoolean.NAME = \"BOOLEAN\";\n\nclass LocalOctetStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\r\n    constructor({ isConstructed = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isConstructed = isConstructed;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = 0;\r\n        if (this.isConstructed) {\r\n            this.isHexOnly = false;\r\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n            if (resultOffset === -1)\r\n                return resultOffset;\r\n            for (let i = 0; i < this.value.length; i++) {\r\n                const currentBlockName = this.value[i].constructor.NAME;\r\n                if (currentBlockName === END_OF_CONTENT_NAME) {\r\n                    if (this.isIndefiniteForm)\r\n                        break;\r\n                    else {\r\n                        this.error = \"EndOfContent is unexpected, OCTET STRING may consists of OCTET STRINGs only\";\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (currentBlockName !== OCTET_STRING_NAME) {\r\n                    this.error = \"OCTET STRING may consists of OCTET STRINGs only\";\r\n                    return -1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.isHexOnly = true;\r\n            resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n            this.blockLength = inputLength;\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        if (this.isConstructed)\r\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\r\n        return sizeOnly\r\n            ? new ArrayBuffer(this.valueHexView.byteLength)\r\n            : this.valueHexView.slice().buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalOctetStringValueBlock.NAME = \"OctetStringValueBlock\";\n\nvar _a$r;\r\nclass OctetString extends BaseBlock {\r\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\r\n        var _b, _c;\r\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\r\n        super({\r\n            idBlock: {\r\n                isConstructed: parameters.isConstructed,\r\n                ...idBlock,\r\n            },\r\n            lenBlock: {\r\n                ...lenBlock,\r\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\r\n            },\r\n            ...parameters,\r\n        }, LocalOctetStringValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 4;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        if (inputLength === 0) {\r\n            if (this.idBlock.error.length === 0)\r\n                this.blockLength += this.idBlock.blockLength;\r\n            if (this.lenBlock.error.length === 0)\r\n                this.blockLength += this.lenBlock.blockLength;\r\n            return inputOffset;\r\n        }\r\n        if (!this.valueBlock.isConstructed) {\r\n            const view = inputBuffer instanceof ArrayBuffer ? new Uint8Array(inputBuffer) : inputBuffer;\r\n            const buf = view.subarray(inputOffset, inputOffset + inputLength);\r\n            try {\r\n                if (buf.byteLength) {\r\n                    const asn = localFromBER(buf, 0, buf.byteLength);\r\n                    if (asn.offset !== -1 && asn.offset === inputLength) {\r\n                        this.valueBlock.value = [asn.result];\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\r\n    }\r\n    onAsciiEncoding() {\r\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\r\n            return Constructed.prototype.onAsciiEncoding.call(this);\r\n        }\r\n        return `${this.constructor.NAME} : ${pvtsutils.Convert.ToHex(this.valueBlock.valueHexView)}`;\r\n    }\r\n    getValue() {\r\n        if (!this.idBlock.isConstructed) {\r\n            return this.valueBlock.valueHexView.slice().buffer;\r\n        }\r\n        const array = [];\r\n        for (const content of this.valueBlock.value) {\r\n            if (content instanceof OctetString) {\r\n                array.push(content.valueBlock.valueHexView);\r\n            }\r\n        }\r\n        return pvtsutils.BufferSourceConverter.concat(array);\r\n    }\r\n}\r\n_a$r = OctetString;\r\n(() => {\r\n    typeStore.OctetString = _a$r;\r\n})();\r\nOctetString.NAME = OCTET_STRING_NAME;\n\nclass LocalBitStringValueBlock extends HexBlock(LocalConstructedValueBlock) {\r\n    constructor({ unusedBits = 0, isConstructed = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.unusedBits = unusedBits;\r\n        this.isConstructed = isConstructed;\r\n        this.blockLength = this.valueHexView.byteLength;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (!inputLength) {\r\n            return inputOffset;\r\n        }\r\n        let resultOffset = -1;\r\n        if (this.isConstructed) {\r\n            resultOffset = LocalConstructedValueBlock.prototype.fromBER.call(this, inputBuffer, inputOffset, inputLength);\r\n            if (resultOffset === -1)\r\n                return resultOffset;\r\n            for (const value of this.value) {\r\n                const currentBlockName = value.constructor.NAME;\r\n                if (currentBlockName === END_OF_CONTENT_NAME) {\r\n                    if (this.isIndefiniteForm)\r\n                        break;\r\n                    else {\r\n                        this.error = \"EndOfContent is unexpected, BIT STRING may consists of BIT STRINGs only\";\r\n                        return -1;\r\n                    }\r\n                }\r\n                if (currentBlockName !== BIT_STRING_NAME) {\r\n                    this.error = \"BIT STRING may consists of BIT STRINGs only\";\r\n                    return -1;\r\n                }\r\n                const valueBlock = value.valueBlock;\r\n                if ((this.unusedBits > 0) && (valueBlock.unusedBits > 0)) {\r\n                    this.error = \"Using of \\\"unused bits\\\" inside constructive BIT STRING allowed for least one only\";\r\n                    return -1;\r\n                }\r\n                this.unusedBits = valueBlock.unusedBits;\r\n            }\r\n            return resultOffset;\r\n        }\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.unusedBits = intBuffer[0];\r\n        if (this.unusedBits > 7) {\r\n            this.error = \"Unused bits for BitString must be in range 0-7\";\r\n            return -1;\r\n        }\r\n        if (!this.unusedBits) {\r\n            const buf = intBuffer.subarray(1);\r\n            try {\r\n                if (buf.byteLength) {\r\n                    const asn = localFromBER(buf, 0, buf.byteLength);\r\n                    if (asn.offset !== -1 && asn.offset === (inputLength - 1)) {\r\n                        this.value = [asn.result];\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n            }\r\n        }\r\n        this.valueHexView = intBuffer.subarray(1);\r\n        this.blockLength = intBuffer.length;\r\n        return (inputOffset + inputLength);\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        if (this.isConstructed) {\r\n            return LocalConstructedValueBlock.prototype.toBER.call(this, sizeOnly, writer);\r\n        }\r\n        if (sizeOnly) {\r\n            return new ArrayBuffer(this.valueHexView.byteLength + 1);\r\n        }\r\n        if (!this.valueHexView.byteLength) {\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(this.valueHexView.length + 1);\r\n        retView[0] = this.unusedBits;\r\n        retView.set(this.valueHexView, 1);\r\n        return retView.buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            unusedBits: this.unusedBits,\r\n            isConstructed: this.isConstructed,\r\n        };\r\n    }\r\n}\r\nLocalBitStringValueBlock.NAME = \"BitStringValueBlock\";\n\nvar _a$q;\r\nclass BitString extends BaseBlock {\r\n    constructor({ idBlock = {}, lenBlock = {}, ...parameters } = {}) {\r\n        var _b, _c;\r\n        (_b = parameters.isConstructed) !== null && _b !== void 0 ? _b : (parameters.isConstructed = !!((_c = parameters.value) === null || _c === void 0 ? void 0 : _c.length));\r\n        super({\r\n            idBlock: {\r\n                isConstructed: parameters.isConstructed,\r\n                ...idBlock,\r\n            },\r\n            lenBlock: {\r\n                ...lenBlock,\r\n                isIndefiniteForm: !!parameters.isIndefiniteForm,\r\n            },\r\n            ...parameters,\r\n        }, LocalBitStringValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 3;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        this.valueBlock.isConstructed = this.idBlock.isConstructed;\r\n        this.valueBlock.isIndefiniteForm = this.lenBlock.isIndefiniteForm;\r\n        return super.fromBER(inputBuffer, inputOffset, inputLength);\r\n    }\r\n    onAsciiEncoding() {\r\n        if (this.valueBlock.isConstructed || (this.valueBlock.value && this.valueBlock.value.length)) {\r\n            return Constructed.prototype.onAsciiEncoding.call(this);\r\n        }\r\n        else {\r\n            const bits = [];\r\n            const valueHex = this.valueBlock.valueHexView;\r\n            for (const byte of valueHex) {\r\n                bits.push(byte.toString(2).padStart(8, \"0\"));\r\n            }\r\n            const bitsStr = bits.join(\"\");\r\n            return `${this.constructor.NAME} : ${bitsStr.substring(0, bitsStr.length - this.valueBlock.unusedBits)}`;\r\n        }\r\n    }\r\n}\r\n_a$q = BitString;\r\n(() => {\r\n    typeStore.BitString = _a$q;\r\n})();\r\nBitString.NAME = BIT_STRING_NAME;\n\nvar _a$p;\r\nfunction viewAdd(first, second) {\r\n    const c = new Uint8Array([0]);\r\n    const firstView = new Uint8Array(first);\r\n    const secondView = new Uint8Array(second);\r\n    let firstViewCopy = firstView.slice(0);\r\n    const firstViewCopyLength = firstViewCopy.length - 1;\r\n    const secondViewCopy = secondView.slice(0);\r\n    const secondViewCopyLength = secondViewCopy.length - 1;\r\n    let value = 0;\r\n    const max = (secondViewCopyLength < firstViewCopyLength) ? firstViewCopyLength : secondViewCopyLength;\r\n    let counter = 0;\r\n    for (let i = max; i >= 0; i--, counter++) {\r\n        switch (true) {\r\n            case (counter < secondViewCopy.length):\r\n                value = firstViewCopy[firstViewCopyLength - counter] + secondViewCopy[secondViewCopyLength - counter] + c[0];\r\n                break;\r\n            default:\r\n                value = firstViewCopy[firstViewCopyLength - counter] + c[0];\r\n        }\r\n        c[0] = value / 10;\r\n        switch (true) {\r\n            case (counter >= firstViewCopy.length):\r\n                firstViewCopy = pvutils.utilConcatView(new Uint8Array([value % 10]), firstViewCopy);\r\n                break;\r\n            default:\r\n                firstViewCopy[firstViewCopyLength - counter] = value % 10;\r\n        }\r\n    }\r\n    if (c[0] > 0)\r\n        firstViewCopy = pvutils.utilConcatView(c, firstViewCopy);\r\n    return firstViewCopy;\r\n}\r\nfunction power2(n) {\r\n    if (n >= powers2.length) {\r\n        for (let p = powers2.length; p <= n; p++) {\r\n            const c = new Uint8Array([0]);\r\n            let digits = (powers2[p - 1]).slice(0);\r\n            for (let i = (digits.length - 1); i >= 0; i--) {\r\n                const newValue = new Uint8Array([(digits[i] << 1) + c[0]]);\r\n                c[0] = newValue[0] / 10;\r\n                digits[i] = newValue[0] % 10;\r\n            }\r\n            if (c[0] > 0)\r\n                digits = pvutils.utilConcatView(c, digits);\r\n            powers2.push(digits);\r\n        }\r\n    }\r\n    return powers2[n];\r\n}\r\nfunction viewSub(first, second) {\r\n    let b = 0;\r\n    const firstView = new Uint8Array(first);\r\n    const secondView = new Uint8Array(second);\r\n    const firstViewCopy = firstView.slice(0);\r\n    const firstViewCopyLength = firstViewCopy.length - 1;\r\n    const secondViewCopy = secondView.slice(0);\r\n    const secondViewCopyLength = secondViewCopy.length - 1;\r\n    let value;\r\n    let counter = 0;\r\n    for (let i = secondViewCopyLength; i >= 0; i--, counter++) {\r\n        value = firstViewCopy[firstViewCopyLength - counter] - secondViewCopy[secondViewCopyLength - counter] - b;\r\n        switch (true) {\r\n            case (value < 0):\r\n                b = 1;\r\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n                break;\r\n            default:\r\n                b = 0;\r\n                firstViewCopy[firstViewCopyLength - counter] = value;\r\n        }\r\n    }\r\n    if (b > 0) {\r\n        for (let i = (firstViewCopyLength - secondViewCopyLength + 1); i >= 0; i--, counter++) {\r\n            value = firstViewCopy[firstViewCopyLength - counter] - b;\r\n            if (value < 0) {\r\n                b = 1;\r\n                firstViewCopy[firstViewCopyLength - counter] = value + 10;\r\n            }\r\n            else {\r\n                b = 0;\r\n                firstViewCopy[firstViewCopyLength - counter] = value;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return firstViewCopy.slice();\r\n}\r\nclass LocalIntegerValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ value, ...parameters } = {}) {\r\n        super(parameters);\r\n        this._valueDec = 0;\r\n        if (parameters.valueHex) {\r\n            this.setValueHex();\r\n        }\r\n        if (value !== undefined) {\r\n            this.valueDec = value;\r\n        }\r\n    }\r\n    setValueHex() {\r\n        if (this.valueHexView.length >= 4) {\r\n            this.warnings.push(\"Too big Integer for decoding, hex only\");\r\n            this.isHexOnly = true;\r\n            this._valueDec = 0;\r\n        }\r\n        else {\r\n            this.isHexOnly = false;\r\n            if (this.valueHexView.length > 0) {\r\n                this._valueDec = pvutils.utilDecodeTC.call(this);\r\n            }\r\n        }\r\n    }\r\n    set valueDec(v) {\r\n        this._valueDec = v;\r\n        this.isHexOnly = false;\r\n        this.valueHexView = new Uint8Array(pvutils.utilEncodeTC(v));\r\n    }\r\n    get valueDec() {\r\n        return this._valueDec;\r\n    }\r\n    fromDER(inputBuffer, inputOffset, inputLength, expectedLength = 0) {\r\n        const offset = this.fromBER(inputBuffer, inputOffset, inputLength);\r\n        if (offset === -1)\r\n            return offset;\r\n        const view = this.valueHexView;\r\n        if ((view[0] === 0x00) && ((view[1] & 0x80) !== 0)) {\r\n            this.valueHexView = view.subarray(1);\r\n        }\r\n        else {\r\n            if (expectedLength !== 0) {\r\n                if (view.length < expectedLength) {\r\n                    if ((expectedLength - view.length) > 1)\r\n                        expectedLength = view.length + 1;\r\n                    this.valueHexView = view.subarray(expectedLength - view.length);\r\n                }\r\n            }\r\n        }\r\n        return offset;\r\n    }\r\n    toDER(sizeOnly = false) {\r\n        const view = this.valueHexView;\r\n        switch (true) {\r\n            case ((view[0] & 0x80) !== 0):\r\n                {\r\n                    const updatedView = new Uint8Array(this.valueHexView.length + 1);\r\n                    updatedView[0] = 0x00;\r\n                    updatedView.set(view, 1);\r\n                    this.valueHexView = updatedView;\r\n                }\r\n                break;\r\n            case ((view[0] === 0x00) && ((view[1] & 0x80) === 0)):\r\n                {\r\n                    this.valueHexView = this.valueHexView.subarray(1);\r\n                }\r\n                break;\r\n        }\r\n        return this.toBER(sizeOnly);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const resultOffset = super.fromBER(inputBuffer, inputOffset, inputLength);\r\n        if (resultOffset === -1) {\r\n            return resultOffset;\r\n        }\r\n        this.setValueHex();\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return sizeOnly\r\n            ? new ArrayBuffer(this.valueHexView.length)\r\n            : this.valueHexView.slice().buffer;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n        };\r\n    }\r\n    toString() {\r\n        const firstBit = (this.valueHexView.length * 8) - 1;\r\n        let digits = new Uint8Array((this.valueHexView.length * 8) / 3);\r\n        let bitNumber = 0;\r\n        let currentByte;\r\n        const asn1View = this.valueHexView;\r\n        let result = \"\";\r\n        let flag = false;\r\n        for (let byteNumber = (asn1View.byteLength - 1); byteNumber >= 0; byteNumber--) {\r\n            currentByte = asn1View[byteNumber];\r\n            for (let i = 0; i < 8; i++) {\r\n                if ((currentByte & 1) === 1) {\r\n                    switch (bitNumber) {\r\n                        case firstBit:\r\n                            digits = viewSub(power2(bitNumber), digits);\r\n                            result = \"-\";\r\n                            break;\r\n                        default:\r\n                            digits = viewAdd(digits, power2(bitNumber));\r\n                    }\r\n                }\r\n                bitNumber++;\r\n                currentByte >>= 1;\r\n            }\r\n        }\r\n        for (let i = 0; i < digits.length; i++) {\r\n            if (digits[i])\r\n                flag = true;\r\n            if (flag)\r\n                result += digitsString.charAt(digits[i]);\r\n        }\r\n        if (flag === false)\r\n            result += digitsString.charAt(0);\r\n        return result;\r\n    }\r\n}\r\n_a$p = LocalIntegerValueBlock;\r\nLocalIntegerValueBlock.NAME = \"IntegerValueBlock\";\r\n(() => {\r\n    Object.defineProperty(_a$p.prototype, \"valueHex\", {\r\n        set: function (v) {\r\n            this.valueHexView = new Uint8Array(v);\r\n            this.setValueHex();\r\n        },\r\n        get: function () {\r\n            return this.valueHexView.slice().buffer;\r\n        },\r\n    });\r\n})();\n\nvar _a$o;\r\nclass Integer extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalIntegerValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 2;\r\n    }\r\n    toBigInt() {\r\n        assertBigInt();\r\n        return BigInt(this.valueBlock.toString());\r\n    }\r\n    static fromBigInt(value) {\r\n        assertBigInt();\r\n        const bigIntValue = BigInt(value);\r\n        const writer = new ViewWriter();\r\n        const hex = bigIntValue.toString(16).replace(/^-/, \"\");\r\n        const view = new Uint8Array(pvtsutils.Convert.FromHex(hex));\r\n        if (bigIntValue < 0) {\r\n            const first = new Uint8Array(view.length + (view[0] & 0x80 ? 1 : 0));\r\n            first[0] |= 0x80;\r\n            const firstInt = BigInt(`0x${pvtsutils.Convert.ToHex(first)}`);\r\n            const secondInt = firstInt + bigIntValue;\r\n            const second = pvtsutils.BufferSourceConverter.toUint8Array(pvtsutils.Convert.FromHex(secondInt.toString(16)));\r\n            second[0] |= 0x80;\r\n            writer.write(second);\r\n        }\r\n        else {\r\n            if (view[0] & 0x80) {\r\n                writer.write(new Uint8Array([0]));\r\n            }\r\n            writer.write(view);\r\n        }\r\n        const res = new Integer({\r\n            valueHex: writer.final(),\r\n        });\r\n        return res;\r\n    }\r\n    convertToDER() {\r\n        const integer = new Integer({ valueHex: this.valueBlock.valueHexView });\r\n        integer.valueBlock.toDER();\r\n        return integer;\r\n    }\r\n    convertFromDER() {\r\n        return new Integer({\r\n            valueHex: this.valueBlock.valueHexView[0] === 0\r\n                ? this.valueBlock.valueHexView.subarray(1)\r\n                : this.valueBlock.valueHexView,\r\n        });\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString()}`;\r\n    }\r\n}\r\n_a$o = Integer;\r\n(() => {\r\n    typeStore.Integer = _a$o;\r\n})();\r\nInteger.NAME = \"INTEGER\";\n\nvar _a$n;\r\nclass Enumerated extends Integer {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 10;\r\n    }\r\n}\r\n_a$n = Enumerated;\r\n(() => {\r\n    typeStore.Enumerated = _a$n;\r\n})();\r\nEnumerated.NAME = \"ENUMERATED\";\n\nclass LocalSidValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ valueDec = -1, isFirstSid = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.valueDec = valueDec;\r\n        this.isFirstSid = isFirstSid;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (!inputLength) {\r\n            return inputOffset;\r\n        }\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength)) {\r\n            return -1;\r\n        }\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.valueHexView = new Uint8Array(inputLength);\r\n        for (let i = 0; i < inputLength; i++) {\r\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\r\n            this.blockLength++;\r\n            if ((intBuffer[i] & 0x80) === 0x00)\r\n                break;\r\n        }\r\n        const tempView = new Uint8Array(this.blockLength);\r\n        for (let i = 0; i < this.blockLength; i++) {\r\n            tempView[i] = this.valueHexView[i];\r\n        }\r\n        this.valueHexView = tempView;\r\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        if (this.valueHexView[0] === 0x00)\r\n            this.warnings.push(\"Needlessly long format of SID encoding\");\r\n        if (this.blockLength <= 8)\r\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\r\n        else {\r\n            this.isHexOnly = true;\r\n            this.warnings.push(\"Too big SID for decoding, hex only\");\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    set valueBigInt(value) {\r\n        assertBigInt();\r\n        let bits = BigInt(value).toString(2);\r\n        while (bits.length % 7) {\r\n            bits = \"0\" + bits;\r\n        }\r\n        const bytes = new Uint8Array(bits.length / 7);\r\n        for (let i = 0; i < bytes.length; i++) {\r\n            bytes[i] = parseInt(bits.slice(i * 7, i * 7 + 7), 2) + (i + 1 < bytes.length ? 0x80 : 0);\r\n        }\r\n        this.fromBER(bytes.buffer, 0, bytes.length);\r\n    }\r\n    toBER(sizeOnly) {\r\n        if (this.isHexOnly) {\r\n            if (sizeOnly)\r\n                return (new ArrayBuffer(this.valueHexView.byteLength));\r\n            const curView = this.valueHexView;\r\n            const retView = new Uint8Array(this.blockLength);\r\n            for (let i = 0; i < (this.blockLength - 1); i++)\r\n                retView[i] = curView[i] | 0x80;\r\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n            return retView.buffer;\r\n        }\r\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\r\n        if (encodedBuf.byteLength === 0) {\r\n            this.error = \"Error during encoding SID value\";\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(encodedBuf.byteLength);\r\n        if (!sizeOnly) {\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const len = encodedBuf.byteLength - 1;\r\n            for (let i = 0; i < len; i++)\r\n                retView[i] = encodedView[i] | 0x80;\r\n            retView[len] = encodedView[len];\r\n        }\r\n        return retView;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        if (this.isHexOnly)\r\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\r\n        else {\r\n            if (this.isFirstSid) {\r\n                let sidValue = this.valueDec;\r\n                if (this.valueDec <= 39)\r\n                    result = \"0.\";\r\n                else {\r\n                    if (this.valueDec <= 79) {\r\n                        result = \"1.\";\r\n                        sidValue -= 40;\r\n                    }\r\n                    else {\r\n                        result = \"2.\";\r\n                        sidValue -= 80;\r\n                    }\r\n                }\r\n                result += sidValue.toString();\r\n            }\r\n            else\r\n                result = this.valueDec.toString();\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n            isFirstSid: this.isFirstSid,\r\n        };\r\n    }\r\n}\r\nLocalSidValueBlock.NAME = \"sidBlock\";\n\nclass LocalObjectIdentifierValueBlock extends ValueBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = [];\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = inputOffset;\r\n        while (inputLength > 0) {\r\n            const sidBlock = new LocalSidValueBlock();\r\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n            if (resultOffset === -1) {\r\n                this.blockLength = 0;\r\n                this.error = sidBlock.error;\r\n                return resultOffset;\r\n            }\r\n            if (this.value.length === 0)\r\n                sidBlock.isFirstSid = true;\r\n            this.blockLength += sidBlock.blockLength;\r\n            inputLength -= sidBlock.blockLength;\r\n            this.value.push(sidBlock);\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly) {\r\n        const retBuffers = [];\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            const valueBuf = this.value[i].toBER(sizeOnly);\r\n            if (valueBuf.byteLength === 0) {\r\n                this.error = this.value[i].error;\r\n                return EMPTY_BUFFER;\r\n            }\r\n            retBuffers.push(valueBuf);\r\n        }\r\n        return concat(retBuffers);\r\n    }\r\n    fromString(string) {\r\n        this.value = [];\r\n        let pos1 = 0;\r\n        let pos2 = 0;\r\n        let sid = \"\";\r\n        let flag = false;\r\n        do {\r\n            pos2 = string.indexOf(\".\", pos1);\r\n            if (pos2 === -1)\r\n                sid = string.substring(pos1);\r\n            else\r\n                sid = string.substring(pos1, pos2);\r\n            pos1 = pos2 + 1;\r\n            if (flag) {\r\n                const sidBlock = this.value[0];\r\n                let plus = 0;\r\n                switch (sidBlock.valueDec) {\r\n                    case 0:\r\n                        break;\r\n                    case 1:\r\n                        plus = 40;\r\n                        break;\r\n                    case 2:\r\n                        plus = 80;\r\n                        break;\r\n                    default:\r\n                        this.value = [];\r\n                        return;\r\n                }\r\n                const parsedSID = parseInt(sid, 10);\r\n                if (isNaN(parsedSID))\r\n                    return;\r\n                sidBlock.valueDec = parsedSID + plus;\r\n                flag = false;\r\n            }\r\n            else {\r\n                const sidBlock = new LocalSidValueBlock();\r\n                if (sid > Number.MAX_SAFE_INTEGER) {\r\n                    assertBigInt();\r\n                    const sidValue = BigInt(sid);\r\n                    sidBlock.valueBigInt = sidValue;\r\n                }\r\n                else {\r\n                    sidBlock.valueDec = parseInt(sid, 10);\r\n                    if (isNaN(sidBlock.valueDec))\r\n                        return;\r\n                }\r\n                if (!this.value.length) {\r\n                    sidBlock.isFirstSid = true;\r\n                    flag = true;\r\n                }\r\n                this.value.push(sidBlock);\r\n            }\r\n        } while (pos2 !== -1);\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        let isHexOnly = false;\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            isHexOnly = this.value[i].isHexOnly;\r\n            let sidStr = this.value[i].toString();\r\n            if (i !== 0)\r\n                result = `${result}.`;\r\n            if (isHexOnly) {\r\n                sidStr = `{${sidStr}}`;\r\n                if (this.value[i].isFirstSid)\r\n                    result = `2.{${sidStr} - 80}`;\r\n                else\r\n                    result += sidStr;\r\n            }\r\n            else\r\n                result += sidStr;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            value: this.toString(),\r\n            sidArray: [],\r\n        };\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            object.sidArray.push(this.value[i].toJSON());\r\n        }\r\n        return object;\r\n    }\r\n}\r\nLocalObjectIdentifierValueBlock.NAME = \"ObjectIdentifierValueBlock\";\n\nvar _a$m;\r\nclass ObjectIdentifier extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalObjectIdentifierValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 6;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.toString();\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.fromString(value);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.getValue(),\r\n        };\r\n    }\r\n}\r\n_a$m = ObjectIdentifier;\r\n(() => {\r\n    typeStore.ObjectIdentifier = _a$m;\r\n})();\r\nObjectIdentifier.NAME = \"OBJECT IDENTIFIER\";\n\nclass LocalRelativeSidValueBlock extends HexBlock(LocalBaseBlock) {\r\n    constructor({ valueDec = 0, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.valueDec = valueDec;\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        if (inputLength === 0)\r\n            return inputOffset;\r\n        const inputView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        if (!checkBufferParams(this, inputView, inputOffset, inputLength))\r\n            return -1;\r\n        const intBuffer = inputView.subarray(inputOffset, inputOffset + inputLength);\r\n        this.valueHexView = new Uint8Array(inputLength);\r\n        for (let i = 0; i < inputLength; i++) {\r\n            this.valueHexView[i] = intBuffer[i] & 0x7F;\r\n            this.blockLength++;\r\n            if ((intBuffer[i] & 0x80) === 0x00)\r\n                break;\r\n        }\r\n        const tempView = new Uint8Array(this.blockLength);\r\n        for (let i = 0; i < this.blockLength; i++)\r\n            tempView[i] = this.valueHexView[i];\r\n        this.valueHexView = tempView;\r\n        if ((intBuffer[this.blockLength - 1] & 0x80) !== 0x00) {\r\n            this.error = \"End of input reached before message was fully decoded\";\r\n            return -1;\r\n        }\r\n        if (this.valueHexView[0] === 0x00)\r\n            this.warnings.push(\"Needlessly long format of SID encoding\");\r\n        if (this.blockLength <= 8)\r\n            this.valueDec = pvutils.utilFromBase(this.valueHexView, 7);\r\n        else {\r\n            this.isHexOnly = true;\r\n            this.warnings.push(\"Too big SID for decoding, hex only\");\r\n        }\r\n        return (inputOffset + this.blockLength);\r\n    }\r\n    toBER(sizeOnly) {\r\n        if (this.isHexOnly) {\r\n            if (sizeOnly)\r\n                return (new ArrayBuffer(this.valueHexView.byteLength));\r\n            const curView = this.valueHexView;\r\n            const retView = new Uint8Array(this.blockLength);\r\n            for (let i = 0; i < (this.blockLength - 1); i++)\r\n                retView[i] = curView[i] | 0x80;\r\n            retView[this.blockLength - 1] = curView[this.blockLength - 1];\r\n            return retView.buffer;\r\n        }\r\n        const encodedBuf = pvutils.utilToBase(this.valueDec, 7);\r\n        if (encodedBuf.byteLength === 0) {\r\n            this.error = \"Error during encoding SID value\";\r\n            return EMPTY_BUFFER;\r\n        }\r\n        const retView = new Uint8Array(encodedBuf.byteLength);\r\n        if (!sizeOnly) {\r\n            const encodedView = new Uint8Array(encodedBuf);\r\n            const len = encodedBuf.byteLength - 1;\r\n            for (let i = 0; i < len; i++)\r\n                retView[i] = encodedView[i] | 0x80;\r\n            retView[len] = encodedView[len];\r\n        }\r\n        return retView.buffer;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        if (this.isHexOnly)\r\n            result = pvtsutils.Convert.ToHex(this.valueHexView);\r\n        else {\r\n            result = this.valueDec.toString();\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            valueDec: this.valueDec,\r\n        };\r\n    }\r\n}\r\nLocalRelativeSidValueBlock.NAME = \"relativeSidBlock\";\n\nclass LocalRelativeObjectIdentifierValueBlock extends ValueBlock {\r\n    constructor({ value = EMPTY_STRING, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = [];\r\n        if (value) {\r\n            this.fromString(value);\r\n        }\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        let resultOffset = inputOffset;\r\n        while (inputLength > 0) {\r\n            const sidBlock = new LocalRelativeSidValueBlock();\r\n            resultOffset = sidBlock.fromBER(inputBuffer, resultOffset, inputLength);\r\n            if (resultOffset === -1) {\r\n                this.blockLength = 0;\r\n                this.error = sidBlock.error;\r\n                return resultOffset;\r\n            }\r\n            this.blockLength += sidBlock.blockLength;\r\n            inputLength -= sidBlock.blockLength;\r\n            this.value.push(sidBlock);\r\n        }\r\n        return resultOffset;\r\n    }\r\n    toBER(sizeOnly, writer) {\r\n        const retBuffers = [];\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            const valueBuf = this.value[i].toBER(sizeOnly);\r\n            if (valueBuf.byteLength === 0) {\r\n                this.error = this.value[i].error;\r\n                return EMPTY_BUFFER;\r\n            }\r\n            retBuffers.push(valueBuf);\r\n        }\r\n        return concat(retBuffers);\r\n    }\r\n    fromString(string) {\r\n        this.value = [];\r\n        let pos1 = 0;\r\n        let pos2 = 0;\r\n        let sid = \"\";\r\n        do {\r\n            pos2 = string.indexOf(\".\", pos1);\r\n            if (pos2 === -1)\r\n                sid = string.substring(pos1);\r\n            else\r\n                sid = string.substring(pos1, pos2);\r\n            pos1 = pos2 + 1;\r\n            const sidBlock = new LocalRelativeSidValueBlock();\r\n            sidBlock.valueDec = parseInt(sid, 10);\r\n            if (isNaN(sidBlock.valueDec))\r\n                return true;\r\n            this.value.push(sidBlock);\r\n        } while (pos2 !== -1);\r\n        return true;\r\n    }\r\n    toString() {\r\n        let result = \"\";\r\n        let isHexOnly = false;\r\n        for (let i = 0; i < this.value.length; i++) {\r\n            isHexOnly = this.value[i].isHexOnly;\r\n            let sidStr = this.value[i].toString();\r\n            if (i !== 0)\r\n                result = `${result}.`;\r\n            if (isHexOnly) {\r\n                sidStr = `{${sidStr}}`;\r\n                result += sidStr;\r\n            }\r\n            else\r\n                result += sidStr;\r\n        }\r\n        return result;\r\n    }\r\n    toJSON() {\r\n        const object = {\r\n            ...super.toJSON(),\r\n            value: this.toString(),\r\n            sidArray: [],\r\n        };\r\n        for (let i = 0; i < this.value.length; i++)\r\n            object.sidArray.push(this.value[i].toJSON());\r\n        return object;\r\n    }\r\n}\r\nLocalRelativeObjectIdentifierValueBlock.NAME = \"RelativeObjectIdentifierValueBlock\";\n\nvar _a$l;\r\nclass RelativeObjectIdentifier extends BaseBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters, LocalRelativeObjectIdentifierValueBlock);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 13;\r\n    }\r\n    getValue() {\r\n        return this.valueBlock.toString();\r\n    }\r\n    setValue(value) {\r\n        this.valueBlock.fromString(value);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.valueBlock.toString() || \"empty\"}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.getValue(),\r\n        };\r\n    }\r\n}\r\n_a$l = RelativeObjectIdentifier;\r\n(() => {\r\n    typeStore.RelativeObjectIdentifier = _a$l;\r\n})();\r\nRelativeObjectIdentifier.NAME = \"RelativeObjectIdentifier\";\n\nvar _a$k;\r\nclass Sequence extends Constructed {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 16;\r\n    }\r\n}\r\n_a$k = Sequence;\r\n(() => {\r\n    typeStore.Sequence = _a$k;\r\n})();\r\nSequence.NAME = \"SEQUENCE\";\n\nvar _a$j;\r\nclass Set extends Constructed {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 17;\r\n    }\r\n}\r\n_a$j = Set;\r\n(() => {\r\n    typeStore.Set = _a$j;\r\n})();\r\nSet.NAME = \"SET\";\n\nclass LocalStringValueBlock extends HexBlock(ValueBlock) {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.isHexOnly = true;\r\n        this.value = EMPTY_STRING;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            value: this.value,\r\n        };\r\n    }\r\n}\r\nLocalStringValueBlock.NAME = \"StringValueBlock\";\n\nclass LocalSimpleStringValueBlock extends LocalStringValueBlock {\r\n}\r\nLocalSimpleStringValueBlock.NAME = \"SimpleStringValueBlock\";\n\nclass LocalSimpleStringBlock extends BaseStringBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters, LocalSimpleStringValueBlock);\r\n    }\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.value = String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\r\n    }\r\n    fromString(inputString) {\r\n        const strLen = inputString.length;\r\n        const view = this.valueBlock.valueHexView = new Uint8Array(strLen);\r\n        for (let i = 0; i < strLen; i++)\r\n            view[i] = inputString.charCodeAt(i);\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalSimpleStringBlock.NAME = \"SIMPLE STRING\";\n\nclass LocalUtf8StringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n        try {\r\n            this.valueBlock.value = pvtsutils.Convert.ToUtf8String(inputBuffer);\r\n        }\r\n        catch (ex) {\r\n            this.warnings.push(`Error during \"decodeURIComponent\": ${ex}, using raw string`);\r\n            this.valueBlock.value = pvtsutils.Convert.ToBinary(inputBuffer);\r\n        }\r\n    }\r\n    fromString(inputString) {\r\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf8String(inputString));\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalUtf8StringValueBlock.NAME = \"Utf8StringValueBlock\";\n\nvar _a$i;\r\nclass Utf8String extends LocalUtf8StringValueBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 12;\r\n    }\r\n}\r\n_a$i = Utf8String;\r\n(() => {\r\n    typeStore.Utf8String = _a$i;\r\n})();\r\nUtf8String.NAME = \"UTF8String\";\n\nclass LocalBmpStringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        this.valueBlock.value = pvtsutils.Convert.ToUtf16String(inputBuffer);\r\n        this.valueBlock.valueHexView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer);\r\n    }\r\n    fromString(inputString) {\r\n        this.valueBlock.value = inputString;\r\n        this.valueBlock.valueHexView = new Uint8Array(pvtsutils.Convert.FromUtf16String(inputString));\r\n    }\r\n}\r\nLocalBmpStringValueBlock.NAME = \"BmpStringValueBlock\";\n\nvar _a$h;\r\nclass BmpString extends LocalBmpStringValueBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 30;\r\n    }\r\n}\r\n_a$h = BmpString;\r\n(() => {\r\n    typeStore.BmpString = _a$h;\r\n})();\r\nBmpString.NAME = \"BMPString\";\n\nclass LocalUniversalStringValueBlock extends LocalSimpleStringBlock {\r\n    fromBuffer(inputBuffer) {\r\n        const copyBuffer = ArrayBuffer.isView(inputBuffer) ? inputBuffer.slice().buffer : inputBuffer.slice(0);\r\n        const valueView = new Uint8Array(copyBuffer);\r\n        for (let i = 0; i < valueView.length; i += 4) {\r\n            valueView[i] = valueView[i + 3];\r\n            valueView[i + 1] = valueView[i + 2];\r\n            valueView[i + 2] = 0x00;\r\n            valueView[i + 3] = 0x00;\r\n        }\r\n        this.valueBlock.value = String.fromCharCode.apply(null, new Uint32Array(copyBuffer));\r\n    }\r\n    fromString(inputString) {\r\n        const strLength = inputString.length;\r\n        const valueHexView = this.valueBlock.valueHexView = new Uint8Array(strLength * 4);\r\n        for (let i = 0; i < strLength; i++) {\r\n            const codeBuf = pvutils.utilToBase(inputString.charCodeAt(i), 8);\r\n            const codeView = new Uint8Array(codeBuf);\r\n            if (codeView.length > 4)\r\n                continue;\r\n            const dif = 4 - codeView.length;\r\n            for (let j = (codeView.length - 1); j >= 0; j--)\r\n                valueHexView[i * 4 + j + dif] = codeView[j];\r\n        }\r\n        this.valueBlock.value = inputString;\r\n    }\r\n}\r\nLocalUniversalStringValueBlock.NAME = \"UniversalStringValueBlock\";\n\nvar _a$g;\r\nclass UniversalString extends LocalUniversalStringValueBlock {\r\n    constructor({ ...parameters } = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 28;\r\n    }\r\n}\r\n_a$g = UniversalString;\r\n(() => {\r\n    typeStore.UniversalString = _a$g;\r\n})();\r\nUniversalString.NAME = \"UniversalString\";\n\nvar _a$f;\r\nclass NumericString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 18;\r\n    }\r\n}\r\n_a$f = NumericString;\r\n(() => {\r\n    typeStore.NumericString = _a$f;\r\n})();\r\nNumericString.NAME = \"NumericString\";\n\nvar _a$e;\r\nclass PrintableString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 19;\r\n    }\r\n}\r\n_a$e = PrintableString;\r\n(() => {\r\n    typeStore.PrintableString = _a$e;\r\n})();\r\nPrintableString.NAME = \"PrintableString\";\n\nvar _a$d;\r\nclass TeletexString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 20;\r\n    }\r\n}\r\n_a$d = TeletexString;\r\n(() => {\r\n    typeStore.TeletexString = _a$d;\r\n})();\r\nTeletexString.NAME = \"TeletexString\";\n\nvar _a$c;\r\nclass VideotexString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 21;\r\n    }\r\n}\r\n_a$c = VideotexString;\r\n(() => {\r\n    typeStore.VideotexString = _a$c;\r\n})();\r\nVideotexString.NAME = \"VideotexString\";\n\nvar _a$b;\r\nclass IA5String extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 22;\r\n    }\r\n}\r\n_a$b = IA5String;\r\n(() => {\r\n    typeStore.IA5String = _a$b;\r\n})();\r\nIA5String.NAME = \"IA5String\";\n\nvar _a$a;\r\nclass GraphicString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 25;\r\n    }\r\n}\r\n_a$a = GraphicString;\r\n(() => {\r\n    typeStore.GraphicString = _a$a;\r\n})();\r\nGraphicString.NAME = \"GraphicString\";\n\nvar _a$9;\r\nclass VisibleString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 26;\r\n    }\r\n}\r\n_a$9 = VisibleString;\r\n(() => {\r\n    typeStore.VisibleString = _a$9;\r\n})();\r\nVisibleString.NAME = \"VisibleString\";\n\nvar _a$8;\r\nclass GeneralString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 27;\r\n    }\r\n}\r\n_a$8 = GeneralString;\r\n(() => {\r\n    typeStore.GeneralString = _a$8;\r\n})();\r\nGeneralString.NAME = \"GeneralString\";\n\nvar _a$7;\r\nclass CharacterString extends LocalSimpleStringBlock {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 29;\r\n    }\r\n}\r\n_a$7 = CharacterString;\r\n(() => {\r\n    typeStore.CharacterString = _a$7;\r\n})();\r\nCharacterString.NAME = \"CharacterString\";\n\nvar _a$6;\r\nclass UTCTime extends VisibleString {\r\n    constructor({ value, valueDate, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.year = 0;\r\n        this.month = 0;\r\n        this.day = 0;\r\n        this.hour = 0;\r\n        this.minute = 0;\r\n        this.second = 0;\r\n        if (value) {\r\n            this.fromString(value);\r\n            this.valueBlock.valueHexView = new Uint8Array(value.length);\r\n            for (let i = 0; i < value.length; i++)\r\n                this.valueBlock.valueHexView[i] = value.charCodeAt(i);\r\n        }\r\n        if (valueDate) {\r\n            this.fromDate(valueDate);\r\n            this.valueBlock.valueHexView = new Uint8Array(this.toBuffer());\r\n        }\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 23;\r\n    }\r\n    fromBuffer(inputBuffer) {\r\n        this.fromString(String.fromCharCode.apply(null, pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer)));\r\n    }\r\n    toBuffer() {\r\n        const str = this.toString();\r\n        const buffer = new ArrayBuffer(str.length);\r\n        const view = new Uint8Array(buffer);\r\n        for (let i = 0; i < str.length; i++)\r\n            view[i] = str.charCodeAt(i);\r\n        return buffer;\r\n    }\r\n    fromDate(inputDate) {\r\n        this.year = inputDate.getUTCFullYear();\r\n        this.month = inputDate.getUTCMonth() + 1;\r\n        this.day = inputDate.getUTCDate();\r\n        this.hour = inputDate.getUTCHours();\r\n        this.minute = inputDate.getUTCMinutes();\r\n        this.second = inputDate.getUTCSeconds();\r\n    }\r\n    toDate() {\r\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second)));\r\n    }\r\n    fromString(inputString) {\r\n        const parser = /(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})Z/ig;\r\n        const parserArray = parser.exec(inputString);\r\n        if (parserArray === null) {\r\n            this.error = \"Wrong input string for conversion\";\r\n            return;\r\n        }\r\n        const year = parseInt(parserArray[1], 10);\r\n        if (year >= 50)\r\n            this.year = 1900 + year;\r\n        else\r\n            this.year = 2000 + year;\r\n        this.month = parseInt(parserArray[2], 10);\r\n        this.day = parseInt(parserArray[3], 10);\r\n        this.hour = parseInt(parserArray[4], 10);\r\n        this.minute = parseInt(parserArray[5], 10);\r\n        this.second = parseInt(parserArray[6], 10);\r\n    }\r\n    toString(encoding = \"iso\") {\r\n        if (encoding === \"iso\") {\r\n            const outputArray = new Array(7);\r\n            outputArray[0] = pvutils.padNumber(((this.year < 2000) ? (this.year - 1900) : (this.year - 2000)), 2);\r\n            outputArray[1] = pvutils.padNumber(this.month, 2);\r\n            outputArray[2] = pvutils.padNumber(this.day, 2);\r\n            outputArray[3] = pvutils.padNumber(this.hour, 2);\r\n            outputArray[4] = pvutils.padNumber(this.minute, 2);\r\n            outputArray[5] = pvutils.padNumber(this.second, 2);\r\n            outputArray[6] = \"Z\";\r\n            return outputArray.join(\"\");\r\n        }\r\n        return super.toString(encoding);\r\n    }\r\n    onAsciiEncoding() {\r\n        return `${this.constructor.NAME} : ${this.toDate().toISOString()}`;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            year: this.year,\r\n            month: this.month,\r\n            day: this.day,\r\n            hour: this.hour,\r\n            minute: this.minute,\r\n            second: this.second,\r\n        };\r\n    }\r\n}\r\n_a$6 = UTCTime;\r\n(() => {\r\n    typeStore.UTCTime = _a$6;\r\n})();\r\nUTCTime.NAME = \"UTCTime\";\n\nvar _a$5;\r\nclass GeneralizedTime extends UTCTime {\r\n    constructor(parameters = {}) {\r\n        var _b;\r\n        super(parameters);\r\n        (_b = this.millisecond) !== null && _b !== void 0 ? _b : (this.millisecond = 0);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 24;\r\n    }\r\n    fromDate(inputDate) {\r\n        super.fromDate(inputDate);\r\n        this.millisecond = inputDate.getUTCMilliseconds();\r\n    }\r\n    toDate() {\r\n        return (new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)));\r\n    }\r\n    fromString(inputString) {\r\n        let isUTC = false;\r\n        let timeString = \"\";\r\n        let dateTimeString = \"\";\r\n        let fractionPart = 0;\r\n        let parser;\r\n        let hourDifference = 0;\r\n        let minuteDifference = 0;\r\n        if (inputString[inputString.length - 1] === \"Z\") {\r\n            timeString = inputString.substring(0, inputString.length - 1);\r\n            isUTC = true;\r\n        }\r\n        else {\r\n            const number = new Number(inputString[inputString.length - 1]);\r\n            if (isNaN(number.valueOf()))\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            timeString = inputString;\r\n        }\r\n        if (isUTC) {\r\n            if (timeString.indexOf(\"+\") !== -1)\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            if (timeString.indexOf(\"-\") !== -1)\r\n                throw new Error(\"Wrong input string for conversion\");\r\n        }\r\n        else {\r\n            let multiplier = 1;\r\n            let differencePosition = timeString.indexOf(\"+\");\r\n            let differenceString = \"\";\r\n            if (differencePosition === -1) {\r\n                differencePosition = timeString.indexOf(\"-\");\r\n                multiplier = -1;\r\n            }\r\n            if (differencePosition !== -1) {\r\n                differenceString = timeString.substring(differencePosition + 1);\r\n                timeString = timeString.substring(0, differencePosition);\r\n                if ((differenceString.length !== 2) && (differenceString.length !== 4))\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                let number = parseInt(differenceString.substring(0, 2), 10);\r\n                if (isNaN(number.valueOf()))\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                hourDifference = multiplier * number;\r\n                if (differenceString.length === 4) {\r\n                    number = parseInt(differenceString.substring(2, 4), 10);\r\n                    if (isNaN(number.valueOf()))\r\n                        throw new Error(\"Wrong input string for conversion\");\r\n                    minuteDifference = multiplier * number;\r\n                }\r\n            }\r\n        }\r\n        let fractionPointPosition = timeString.indexOf(\".\");\r\n        if (fractionPointPosition === -1)\r\n            fractionPointPosition = timeString.indexOf(\",\");\r\n        if (fractionPointPosition !== -1) {\r\n            const fractionPartCheck = new Number(`0${timeString.substring(fractionPointPosition)}`);\r\n            if (isNaN(fractionPartCheck.valueOf()))\r\n                throw new Error(\"Wrong input string for conversion\");\r\n            fractionPart = fractionPartCheck.valueOf();\r\n            dateTimeString = timeString.substring(0, fractionPointPosition);\r\n        }\r\n        else\r\n            dateTimeString = timeString;\r\n        switch (true) {\r\n            case (dateTimeString.length === 8):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1)\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n                break;\r\n            case (dateTimeString.length === 10):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    let fractionResult = 60 * fractionPart;\r\n                    this.minute = Math.floor(fractionResult);\r\n                    fractionResult = 60 * (fractionResult - this.minute);\r\n                    this.second = Math.floor(fractionResult);\r\n                    fractionResult = 1000 * (fractionResult - this.second);\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            case (dateTimeString.length === 12):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    let fractionResult = 60 * fractionPart;\r\n                    this.second = Math.floor(fractionResult);\r\n                    fractionResult = 1000 * (fractionResult - this.second);\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            case (dateTimeString.length === 14):\r\n                parser = /(\\d{4})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/ig;\r\n                if (fractionPointPosition !== -1) {\r\n                    const fractionResult = 1000 * fractionPart;\r\n                    this.millisecond = Math.floor(fractionResult);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Wrong input string for conversion\");\r\n        }\r\n        const parserArray = parser.exec(dateTimeString);\r\n        if (parserArray === null)\r\n            throw new Error(\"Wrong input string for conversion\");\r\n        for (let j = 1; j < parserArray.length; j++) {\r\n            switch (j) {\r\n                case 1:\r\n                    this.year = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 2:\r\n                    this.month = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 3:\r\n                    this.day = parseInt(parserArray[j], 10);\r\n                    break;\r\n                case 4:\r\n                    this.hour = parseInt(parserArray[j], 10) + hourDifference;\r\n                    break;\r\n                case 5:\r\n                    this.minute = parseInt(parserArray[j], 10) + minuteDifference;\r\n                    break;\r\n                case 6:\r\n                    this.second = parseInt(parserArray[j], 10);\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Wrong input string for conversion\");\r\n            }\r\n        }\r\n        if (isUTC === false) {\r\n            const tempDate = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);\r\n            this.year = tempDate.getUTCFullYear();\r\n            this.month = tempDate.getUTCMonth();\r\n            this.day = tempDate.getUTCDay();\r\n            this.hour = tempDate.getUTCHours();\r\n            this.minute = tempDate.getUTCMinutes();\r\n            this.second = tempDate.getUTCSeconds();\r\n            this.millisecond = tempDate.getUTCMilliseconds();\r\n        }\r\n    }\r\n    toString(encoding = \"iso\") {\r\n        if (encoding === \"iso\") {\r\n            const outputArray = [];\r\n            outputArray.push(pvutils.padNumber(this.year, 4));\r\n            outputArray.push(pvutils.padNumber(this.month, 2));\r\n            outputArray.push(pvutils.padNumber(this.day, 2));\r\n            outputArray.push(pvutils.padNumber(this.hour, 2));\r\n            outputArray.push(pvutils.padNumber(this.minute, 2));\r\n            outputArray.push(pvutils.padNumber(this.second, 2));\r\n            if (this.millisecond !== 0) {\r\n                outputArray.push(\".\");\r\n                outputArray.push(pvutils.padNumber(this.millisecond, 3));\r\n            }\r\n            outputArray.push(\"Z\");\r\n            return outputArray.join(\"\");\r\n        }\r\n        return super.toString(encoding);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ...super.toJSON(),\r\n            millisecond: this.millisecond,\r\n        };\r\n    }\r\n}\r\n_a$5 = GeneralizedTime;\r\n(() => {\r\n    typeStore.GeneralizedTime = _a$5;\r\n})();\r\nGeneralizedTime.NAME = \"GeneralizedTime\";\n\nvar _a$4;\r\nclass DATE extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 31;\r\n    }\r\n}\r\n_a$4 = DATE;\r\n(() => {\r\n    typeStore.DATE = _a$4;\r\n})();\r\nDATE.NAME = \"DATE\";\n\nvar _a$3;\r\nclass TimeOfDay extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 32;\r\n    }\r\n}\r\n_a$3 = TimeOfDay;\r\n(() => {\r\n    typeStore.TimeOfDay = _a$3;\r\n})();\r\nTimeOfDay.NAME = \"TimeOfDay\";\n\nvar _a$2;\r\nclass DateTime extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 33;\r\n    }\r\n}\r\n_a$2 = DateTime;\r\n(() => {\r\n    typeStore.DateTime = _a$2;\r\n})();\r\nDateTime.NAME = \"DateTime\";\n\nvar _a$1;\r\nclass Duration extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 34;\r\n    }\r\n}\r\n_a$1 = Duration;\r\n(() => {\r\n    typeStore.Duration = _a$1;\r\n})();\r\nDuration.NAME = \"Duration\";\n\nvar _a;\r\nclass TIME extends Utf8String {\r\n    constructor(parameters = {}) {\r\n        super(parameters);\r\n        this.idBlock.tagClass = 1;\r\n        this.idBlock.tagNumber = 14;\r\n    }\r\n}\r\n_a = TIME;\r\n(() => {\r\n    typeStore.TIME = _a;\r\n})();\r\nTIME.NAME = \"TIME\";\n\nclass Any {\r\n    constructor({ name = EMPTY_STRING, optional = false, } = {}) {\r\n        this.name = name;\r\n        this.optional = optional;\r\n    }\r\n}\n\nclass Choice extends Any {\r\n    constructor({ value = [], ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n    }\r\n}\n\nclass Repeated extends Any {\r\n    constructor({ value = new Any(), local = false, ...parameters } = {}) {\r\n        super(parameters);\r\n        this.value = value;\r\n        this.local = local;\r\n    }\r\n}\n\nclass RawData {\r\n    constructor({ data = EMPTY_VIEW } = {}) {\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(data);\r\n    }\r\n    get data() {\r\n        return this.dataView.slice().buffer;\r\n    }\r\n    set data(value) {\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(value);\r\n    }\r\n    fromBER(inputBuffer, inputOffset, inputLength) {\r\n        const endLength = inputOffset + inputLength;\r\n        this.dataView = pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer).subarray(inputOffset, endLength);\r\n        return endLength;\r\n    }\r\n    toBER(sizeOnly) {\r\n        return this.dataView.slice().buffer;\r\n    }\r\n}\n\nfunction compareSchema(root, inputData, inputSchema) {\r\n    if (inputSchema instanceof Choice) {\r\n        for (let j = 0; j < inputSchema.value.length; j++) {\r\n            const result = compareSchema(root, inputData, inputSchema.value[j]);\r\n            if (result.verified) {\r\n                return {\r\n                    verified: true,\r\n                    result: root\r\n                };\r\n            }\r\n        }\r\n        {\r\n            const _result = {\r\n                verified: false,\r\n                result: {\r\n                    error: \"Wrong values for Choice type\"\r\n                },\r\n            };\r\n            if (inputSchema.hasOwnProperty(NAME))\r\n                _result.name = inputSchema.name;\r\n            return _result;\r\n        }\r\n    }\r\n    if (inputSchema instanceof Any) {\r\n        if (inputSchema.hasOwnProperty(NAME))\r\n            root[inputSchema.name] = inputData;\r\n        return {\r\n            verified: true,\r\n            result: root\r\n        };\r\n    }\r\n    if ((root instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong root object\" }\r\n        };\r\n    }\r\n    if ((inputData instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 data\" }\r\n        };\r\n    }\r\n    if ((inputSchema instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((ID_BLOCK in inputSchema) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((FROM_BER in inputSchema.idBlock) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if ((TO_BER in inputSchema.idBlock) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    const encodedId = inputSchema.idBlock.toBER(false);\r\n    if (encodedId.byteLength === 0) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Error encoding idBlock for ASN.1 schema\" }\r\n        };\r\n    }\r\n    const decodedOffset = inputSchema.idBlock.fromBER(encodedId, 0, encodedId.byteLength);\r\n    if (decodedOffset === -1) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Error decoding idBlock for ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(TAG_CLASS) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.tagClass !== inputData.idBlock.tagClass) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(TAG_NUMBER) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.tagNumber !== inputData.idBlock.tagNumber) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.hasOwnProperty(IS_CONSTRUCTED) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isConstructed !== inputData.idBlock.isConstructed) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (!(IS_HEX_ONLY in inputSchema.idBlock)) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema\" }\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isHexOnly !== inputData.idBlock.isHexOnly) {\r\n        return {\r\n            verified: false,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.idBlock.isHexOnly) {\r\n        if ((VALUE_HEX_VIEW in inputSchema.idBlock) === false) {\r\n            return {\r\n                verified: false,\r\n                result: { error: \"Wrong ASN.1 schema\" }\r\n            };\r\n        }\r\n        const schemaView = inputSchema.idBlock.valueHexView;\r\n        const asn1View = inputData.idBlock.valueHexView;\r\n        if (schemaView.length !== asn1View.length) {\r\n            return {\r\n                verified: false,\r\n                result: root\r\n            };\r\n        }\r\n        for (let i = 0; i < schemaView.length; i++) {\r\n            if (schemaView[i] !== asn1View[1]) {\r\n                return {\r\n                    verified: false,\r\n                    result: root\r\n                };\r\n            }\r\n        }\r\n    }\r\n    if (inputSchema.name) {\r\n        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n        if (inputSchema.name)\r\n            root[inputSchema.name] = inputData;\r\n    }\r\n    if (inputSchema instanceof typeStore.Constructed) {\r\n        let admission = 0;\r\n        let result = {\r\n            verified: false,\r\n            result: {\r\n                error: \"Unknown error\",\r\n            }\r\n        };\r\n        let maxLength = inputSchema.valueBlock.value.length;\r\n        if (maxLength > 0) {\r\n            if (inputSchema.valueBlock.value[0] instanceof Repeated) {\r\n                maxLength = inputData.valueBlock.value.length;\r\n            }\r\n        }\r\n        if (maxLength === 0) {\r\n            return {\r\n                verified: true,\r\n                result: root\r\n            };\r\n        }\r\n        if ((inputData.valueBlock.value.length === 0) &&\r\n            (inputSchema.valueBlock.value.length !== 0)) {\r\n            let _optional = true;\r\n            for (let i = 0; i < inputSchema.valueBlock.value.length; i++)\r\n                _optional = _optional && (inputSchema.valueBlock.value[i].optional || false);\r\n            if (_optional) {\r\n                return {\r\n                    verified: true,\r\n                    result: root\r\n                };\r\n            }\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name)\r\n                    delete root[inputSchema.name];\r\n            }\r\n            root.error = \"Inconsistent object length\";\r\n            return {\r\n                verified: false,\r\n                result: root\r\n            };\r\n        }\r\n        for (let i = 0; i < maxLength; i++) {\r\n            if ((i - admission) >= inputData.valueBlock.value.length) {\r\n                if (inputSchema.valueBlock.value[i].optional === false) {\r\n                    const _result = {\r\n                        verified: false,\r\n                        result: root\r\n                    };\r\n                    root.error = \"Inconsistent length between ASN.1 data and schema\";\r\n                    if (inputSchema.name) {\r\n                        inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                        if (inputSchema.name) {\r\n                            delete root[inputSchema.name];\r\n                            _result.name = inputSchema.name;\r\n                        }\r\n                    }\r\n                    return _result;\r\n                }\r\n            }\r\n            else {\r\n                if (inputSchema.valueBlock.value[0] instanceof Repeated) {\r\n                    result = compareSchema(root, inputData.valueBlock.value[i], inputSchema.valueBlock.value[0].value);\r\n                    if (result.verified === false) {\r\n                        if (inputSchema.valueBlock.value[0].optional)\r\n                            admission++;\r\n                        else {\r\n                            if (inputSchema.name) {\r\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                                if (inputSchema.name)\r\n                                    delete root[inputSchema.name];\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                    if ((NAME in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].name.length > 0)) {\r\n                        let arrayRoot = {};\r\n                        if ((LOCAL in inputSchema.valueBlock.value[0]) && (inputSchema.valueBlock.value[0].local))\r\n                            arrayRoot = inputData;\r\n                        else\r\n                            arrayRoot = root;\r\n                        if (typeof arrayRoot[inputSchema.valueBlock.value[0].name] === \"undefined\")\r\n                            arrayRoot[inputSchema.valueBlock.value[0].name] = [];\r\n                        arrayRoot[inputSchema.valueBlock.value[0].name].push(inputData.valueBlock.value[i]);\r\n                    }\r\n                }\r\n                else {\r\n                    result = compareSchema(root, inputData.valueBlock.value[i - admission], inputSchema.valueBlock.value[i]);\r\n                    if (result.verified === false) {\r\n                        if (inputSchema.valueBlock.value[i].optional)\r\n                            admission++;\r\n                        else {\r\n                            if (inputSchema.name) {\r\n                                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                                if (inputSchema.name)\r\n                                    delete root[inputSchema.name];\r\n                            }\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (result.verified === false) {\r\n            const _result = {\r\n                verified: false,\r\n                result: root\r\n            };\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name) {\r\n                    delete root[inputSchema.name];\r\n                    _result.name = inputSchema.name;\r\n                }\r\n            }\r\n            return _result;\r\n        }\r\n        return {\r\n            verified: true,\r\n            result: root\r\n        };\r\n    }\r\n    if (inputSchema.primitiveSchema &&\r\n        (VALUE_HEX_VIEW in inputData.valueBlock)) {\r\n        const asn1 = localFromBER(inputData.valueBlock.valueHexView);\r\n        if (asn1.offset === -1) {\r\n            const _result = {\r\n                verified: false,\r\n                result: asn1.result\r\n            };\r\n            if (inputSchema.name) {\r\n                inputSchema.name = inputSchema.name.replace(/^\\s+|\\s+$/g, EMPTY_STRING);\r\n                if (inputSchema.name) {\r\n                    delete root[inputSchema.name];\r\n                    _result.name = inputSchema.name;\r\n                }\r\n            }\r\n            return _result;\r\n        }\r\n        return compareSchema(root, asn1.result, inputSchema.primitiveSchema);\r\n    }\r\n    return {\r\n        verified: true,\r\n        result: root\r\n    };\r\n}\r\nfunction verifySchema(inputBuffer, inputSchema) {\r\n    if ((inputSchema instanceof Object) === false) {\r\n        return {\r\n            verified: false,\r\n            result: { error: \"Wrong ASN.1 schema type\" }\r\n        };\r\n    }\r\n    const asn1 = localFromBER(pvtsutils.BufferSourceConverter.toUint8Array(inputBuffer));\r\n    if (asn1.offset === -1) {\r\n        return {\r\n            verified: false,\r\n            result: asn1.result\r\n        };\r\n    }\r\n    return compareSchema(asn1.result, asn1.result, inputSchema);\r\n}\n\nexport { Any, BaseBlock, BaseStringBlock, BitString, BmpString, Boolean, CharacterString, Choice, Constructed, DATE, DateTime, Duration, EndOfContent, Enumerated, GeneralString, GeneralizedTime, GraphicString, HexBlock, IA5String, Integer, Null, NumericString, ObjectIdentifier, OctetString, Primitive, PrintableString, RawData, RelativeObjectIdentifier, Repeated, Sequence, Set, TIME, TeletexString, TimeOfDay, UTCTime, UniversalString, Utf8String, ValueBlock, VideotexString, ViewWriter, VisibleString, compareSchema, fromBER, verifySchema };\n", "/*!\n Copyright (c) Peculiar Ventures, LLC\n*/\n\nfunction getUTCDate(date) {\r\n    return new Date(date.getTime() + (date.getTimezoneOffset() * 60000));\r\n}\r\nfunction getParametersValue(parameters, name, defaultValue) {\r\n    var _a;\r\n    if ((parameters instanceof Object) === false) {\r\n        return defaultValue;\r\n    }\r\n    return (_a = parameters[name]) !== null && _a !== void 0 ? _a : defaultValue;\r\n}\r\nfunction bufferToHexCodes(inputBuffer, inputOffset = 0, inputLength = (inputBuffer.byteLength - inputOffset), insertSpace = false) {\r\n    let result = \"\";\r\n    for (const item of (new Uint8Array(inputBuffer, inputOffset, inputLength))) {\r\n        const str = item.toString(16).toUpperCase();\r\n        if (str.length === 1) {\r\n            result += \"0\";\r\n        }\r\n        result += str;\r\n        if (insertSpace) {\r\n            result += \" \";\r\n        }\r\n    }\r\n    return result.trim();\r\n}\r\nfunction checkBufferParams(baseBlock, inputBuffer, inputOffset, inputLength) {\r\n    if (!(inputBuffer instanceof ArrayBuffer)) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer must be \\\"ArrayBuffer\\\"\";\r\n        return false;\r\n    }\r\n    if (!inputBuffer.byteLength) {\r\n        baseBlock.error = \"Wrong parameter: inputBuffer has zero length\";\r\n        return false;\r\n    }\r\n    if (inputOffset < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputOffset less than zero\";\r\n        return false;\r\n    }\r\n    if (inputLength < 0) {\r\n        baseBlock.error = \"Wrong parameter: inputLength less than zero\";\r\n        return false;\r\n    }\r\n    if ((inputBuffer.byteLength - inputOffset - inputLength) < 0) {\r\n        baseBlock.error = \"End of input reached before message was fully decoded (inconsistent offset and length values)\";\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction utilFromBase(inputBuffer, inputBase) {\r\n    let result = 0;\r\n    if (inputBuffer.length === 1) {\r\n        return inputBuffer[0];\r\n    }\r\n    for (let i = (inputBuffer.length - 1); i >= 0; i--) {\r\n        result += inputBuffer[(inputBuffer.length - 1) - i] * Math.pow(2, inputBase * i);\r\n    }\r\n    return result;\r\n}\r\nfunction utilToBase(value, base, reserved = (-1)) {\r\n    const internalReserved = reserved;\r\n    let internalValue = value;\r\n    let result = 0;\r\n    let biggest = Math.pow(2, base);\r\n    for (let i = 1; i < 8; i++) {\r\n        if (value < biggest) {\r\n            let retBuf;\r\n            if (internalReserved < 0) {\r\n                retBuf = new ArrayBuffer(i);\r\n                result = i;\r\n            }\r\n            else {\r\n                if (internalReserved < i) {\r\n                    return (new ArrayBuffer(0));\r\n                }\r\n                retBuf = new ArrayBuffer(internalReserved);\r\n                result = internalReserved;\r\n            }\r\n            const retView = new Uint8Array(retBuf);\r\n            for (let j = (i - 1); j >= 0; j--) {\r\n                const basis = Math.pow(2, j * base);\r\n                retView[result - j - 1] = Math.floor(internalValue / basis);\r\n                internalValue -= (retView[result - j - 1]) * basis;\r\n            }\r\n            return retBuf;\r\n        }\r\n        biggest *= Math.pow(2, base);\r\n    }\r\n    return new ArrayBuffer(0);\r\n}\r\nfunction utilConcatBuf(...buffers) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const buffer of buffers) {\r\n        outputLength += buffer.byteLength;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const buffer of buffers) {\r\n        retView.set(new Uint8Array(buffer), prevLength);\r\n        prevLength += buffer.byteLength;\r\n    }\r\n    return retBuf;\r\n}\r\nfunction utilConcatView(...views) {\r\n    let outputLength = 0;\r\n    let prevLength = 0;\r\n    for (const view of views) {\r\n        outputLength += view.length;\r\n    }\r\n    const retBuf = new ArrayBuffer(outputLength);\r\n    const retView = new Uint8Array(retBuf);\r\n    for (const view of views) {\r\n        retView.set(view, prevLength);\r\n        prevLength += view.length;\r\n    }\r\n    return retView;\r\n}\r\nfunction utilDecodeTC() {\r\n    const buf = new Uint8Array(this.valueHex);\r\n    if (this.valueHex.byteLength >= 2) {\r\n        const condition1 = (buf[0] === 0xFF) && (buf[1] & 0x80);\r\n        const condition2 = (buf[0] === 0x00) && ((buf[1] & 0x80) === 0x00);\r\n        if (condition1 || condition2) {\r\n            this.warnings.push(\"Needlessly long format\");\r\n        }\r\n    }\r\n    const bigIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const bigIntView = new Uint8Array(bigIntBuffer);\r\n    for (let i = 0; i < this.valueHex.byteLength; i++) {\r\n        bigIntView[i] = 0;\r\n    }\r\n    bigIntView[0] = (buf[0] & 0x80);\r\n    const bigInt = utilFromBase(bigIntView, 8);\r\n    const smallIntBuffer = new ArrayBuffer(this.valueHex.byteLength);\r\n    const smallIntView = new Uint8Array(smallIntBuffer);\r\n    for (let j = 0; j < this.valueHex.byteLength; j++) {\r\n        smallIntView[j] = buf[j];\r\n    }\r\n    smallIntView[0] &= 0x7F;\r\n    const smallInt = utilFromBase(smallIntView, 8);\r\n    return (smallInt - bigInt);\r\n}\r\nfunction utilEncodeTC(value) {\r\n    const modValue = (value < 0) ? (value * (-1)) : value;\r\n    let bigInt = 128;\r\n    for (let i = 1; i < 8; i++) {\r\n        if (modValue <= bigInt) {\r\n            if (value < 0) {\r\n                const smallInt = bigInt - modValue;\r\n                const retBuf = utilToBase(smallInt, 8, i);\r\n                const retView = new Uint8Array(retBuf);\r\n                retView[0] |= 0x80;\r\n                return retBuf;\r\n            }\r\n            let retBuf = utilToBase(modValue, 8, i);\r\n            let retView = new Uint8Array(retBuf);\r\n            if (retView[0] & 0x80) {\r\n                const tempBuf = retBuf.slice(0);\r\n                const tempView = new Uint8Array(tempBuf);\r\n                retBuf = new ArrayBuffer(retBuf.byteLength + 1);\r\n                retView = new Uint8Array(retBuf);\r\n                for (let k = 0; k < tempBuf.byteLength; k++) {\r\n                    retView[k + 1] = tempView[k];\r\n                }\r\n                retView[0] = 0x00;\r\n            }\r\n            return retBuf;\r\n        }\r\n        bigInt *= Math.pow(2, 8);\r\n    }\r\n    return (new ArrayBuffer(0));\r\n}\r\nfunction isEqualBuffer(inputBuffer1, inputBuffer2) {\r\n    if (inputBuffer1.byteLength !== inputBuffer2.byteLength) {\r\n        return false;\r\n    }\r\n    const view1 = new Uint8Array(inputBuffer1);\r\n    const view2 = new Uint8Array(inputBuffer2);\r\n    for (let i = 0; i < view1.length; i++) {\r\n        if (view1[i] !== view2[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction padNumber(inputNumber, fullLength) {\r\n    const str = inputNumber.toString(10);\r\n    if (fullLength < str.length) {\r\n        return \"\";\r\n    }\r\n    const dif = fullLength - str.length;\r\n    const padding = new Array(dif);\r\n    for (let i = 0; i < dif; i++) {\r\n        padding[i] = \"0\";\r\n    }\r\n    const paddingString = padding.join(\"\");\r\n    return paddingString.concat(str);\r\n}\r\nconst base64Template = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\nconst base64UrlTemplate = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\";\r\nfunction toBase64(input, useUrlTemplate = false, skipPadding = false, skipLeadingZeros = false) {\r\n    let i = 0;\r\n    let flag1 = 0;\r\n    let flag2 = 0;\r\n    let output = \"\";\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    if (skipLeadingZeros) {\r\n        let nonZeroPosition = 0;\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input.charCodeAt(i) !== 0) {\r\n                nonZeroPosition = i;\r\n                break;\r\n            }\r\n        }\r\n        input = input.slice(nonZeroPosition);\r\n    }\r\n    while (i < input.length) {\r\n        const chr1 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag1 = 1;\r\n        }\r\n        const chr2 = input.charCodeAt(i++);\r\n        if (i >= input.length) {\r\n            flag2 = 1;\r\n        }\r\n        const chr3 = input.charCodeAt(i++);\r\n        const enc1 = chr1 >> 2;\r\n        const enc2 = ((chr1 & 0x03) << 4) | (chr2 >> 4);\r\n        let enc3 = ((chr2 & 0x0F) << 2) | (chr3 >> 6);\r\n        let enc4 = chr3 & 0x3F;\r\n        if (flag1 === 1) {\r\n            enc3 = enc4 = 64;\r\n        }\r\n        else {\r\n            if (flag2 === 1) {\r\n                enc4 = 64;\r\n            }\r\n        }\r\n        if (skipPadding) {\r\n            if (enc3 === 64) {\r\n                output += `${template.charAt(enc1)}${template.charAt(enc2)}`;\r\n            }\r\n            else {\r\n                if (enc4 === 64) {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}`;\r\n                }\r\n                else {\r\n                    output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            output += `${template.charAt(enc1)}${template.charAt(enc2)}${template.charAt(enc3)}${template.charAt(enc4)}`;\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction fromBase64(input, useUrlTemplate = false, cutTailZeros = false) {\r\n    const template = (useUrlTemplate) ? base64UrlTemplate : base64Template;\r\n    function indexOf(toSearch) {\r\n        for (let i = 0; i < 64; i++) {\r\n            if (template.charAt(i) === toSearch)\r\n                return i;\r\n        }\r\n        return 64;\r\n    }\r\n    function test(incoming) {\r\n        return ((incoming === 64) ? 0x00 : incoming);\r\n    }\r\n    let i = 0;\r\n    let output = \"\";\r\n    while (i < input.length) {\r\n        const enc1 = indexOf(input.charAt(i++));\r\n        const enc2 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc3 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const enc4 = (i >= input.length) ? 0x00 : indexOf(input.charAt(i++));\r\n        const chr1 = (test(enc1) << 2) | (test(enc2) >> 4);\r\n        const chr2 = ((test(enc2) & 0x0F) << 4) | (test(enc3) >> 2);\r\n        const chr3 = ((test(enc3) & 0x03) << 6) | test(enc4);\r\n        output += String.fromCharCode(chr1);\r\n        if (enc3 !== 64) {\r\n            output += String.fromCharCode(chr2);\r\n        }\r\n        if (enc4 !== 64) {\r\n            output += String.fromCharCode(chr3);\r\n        }\r\n    }\r\n    if (cutTailZeros) {\r\n        const outputLength = output.length;\r\n        let nonZeroStart = (-1);\r\n        for (let i = (outputLength - 1); i >= 0; i--) {\r\n            if (output.charCodeAt(i) !== 0) {\r\n                nonZeroStart = i;\r\n                break;\r\n            }\r\n        }\r\n        if (nonZeroStart !== (-1)) {\r\n            output = output.slice(0, nonZeroStart + 1);\r\n        }\r\n        else {\r\n            output = \"\";\r\n        }\r\n    }\r\n    return output;\r\n}\r\nfunction arrayBufferToString(buffer) {\r\n    let resultString = \"\";\r\n    const view = new Uint8Array(buffer);\r\n    for (const element of view) {\r\n        resultString += String.fromCharCode(element);\r\n    }\r\n    return resultString;\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    const stringLength = str.length;\r\n    const resultBuffer = new ArrayBuffer(stringLength);\r\n    const resultView = new Uint8Array(resultBuffer);\r\n    for (let i = 0; i < stringLength; i++) {\r\n        resultView[i] = str.charCodeAt(i);\r\n    }\r\n    return resultBuffer;\r\n}\r\nconst log2 = Math.log(2);\r\nfunction nearestPowerOf2(length) {\r\n    const base = (Math.log(length) / log2);\r\n    const floor = Math.floor(base);\r\n    const round = Math.round(base);\r\n    return ((floor === round) ? floor : round);\r\n}\r\nfunction clearProps(object, propsArray) {\r\n    for (const prop of propsArray) {\r\n        delete object[prop];\r\n    }\r\n}\n\nexport { arrayBufferToString, bufferToHexCodes, checkBufferParams, clearProps, fromBase64, getParametersValue, getUTCDate, isEqualBuffer, nearestPowerOf2, padNumber, stringToArrayBuffer, toBase64, utilConcatBuf, utilConcatView, utilDecodeTC, utilEncodeTC, utilFromBase, utilToBase };\n", "/**\n * @file Key Import\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport * as asn1js from 'asn1js';\nimport { handleError } from '../../lib/error';\nimport { ENCODING, decode, guessEncoding } from '../../lib/encode';\nimport { addKey } from './keys';\n\n/**\n * ASN.1 Schema for Public Keys\n * @link https://github.com/PeculiarVentures/PKI.js/blob/ace03e1c1f141d0c52da26360012e58ebe77932a/src/PublicKeyInfo.ts#L137\n */\nconst PUBLIC_KEY_SCHEMA = new asn1js.Sequence({\n  value: [\n    new asn1js.Sequence({\n      name: 'encryptionAlgorithm',\n      value: [\n        new asn1js.ObjectIdentifier({ name: 'algorithm' }),\n        new asn1js.Any({ name: 'parameters', optional: true }),\n      ],\n    }),\n    new asn1js.BitString({ name: 'key' }),\n  ],\n});\n\n/**\n * ASN.1 Schema for Private Keys\n * @link https://github.com/PeculiarVentures/PKI.js/blob/ace03e1c1f141d0c52da26360012e58ebe77932a/src/PrivateKeyInfo.ts#L102\n */\nconst PRIVATE_KEY_SCHEMA = new asn1js.Sequence({\n  value: [\n    new asn1js.Integer({ name: 'version' }),\n    new asn1js.Sequence({\n      name: 'encryptionAlgorithm',\n      value: [\n        new asn1js.ObjectIdentifier({ name: 'algorithm' }),\n        new asn1js.Any({ name: 'parameters', optional: true }),\n      ],\n    }),\n    new asn1js.OctetString({ name: 'key' }),\n    new asn1js.Constructed({\n      optional: true,\n      idBlock: {\n        tagClass: 3, // CONTEXT-SPECIFIC\n        tagNumber: 0, // [0]\n      },\n      value: [\n        new asn1js.Repeated({\n          name: 'attributes',\n          value: new asn1js.Sequence({\n            value: [\n              new asn1js.ObjectIdentifier({}),\n              new asn1js.Set({ value: [new asn1js.Repeated({ value: new asn1js.Any() })] }),\n            ],\n          }),\n        }),\n      ],\n    }),\n  ],\n});\n\nconst section = document.querySelector<HTMLElement>('#encryption [data-tab=\"import-keys\"]')!;\nconst importButton = section.querySelector<HTMLButtonElement>('button');\nconst textarea = section.querySelector<HTMLTextAreaElement>('textarea')!;\nconst algorithmSelect = section.querySelector<HTMLSelectElement>('.algorithm select')!;\nconst keyTypeSelect = section.querySelector<HTMLSelectElement>('.key-type select')!;\n\n// Update settings based on textarea detection\n// setTimeout is needed to await the browser paste to complete\ntextarea.addEventListener('paste', () => setTimeout(() => {\n  const { value } = textarea;\n  const encoding = guessEncoding(value);\n  let isSymmetric = false;\n  let isPrivate = false;\n  let format: string;\n  let keyData: ArrayBuffer | object | undefined;\n  let algorithm: string = 'AES-GCM';\n  const keyUsages: KeyUsage[] = [];\n\n  // Detect key type\n  try {\n    switch (encoding) {\n      // JSON Web Keys\n      case ENCODING.JSON: {\n        const jwk = JSON.parse(value);\n\n        // kty parameter is required in a JWK\n        if (jwk && jwk.kty) {\n          format = 'jwk';\n          keyData = jwk;\n          keyUsages.push(...jwk.key_ops);\n          if (jwk.d) isPrivate = true;\n\n          if (jwk.kty === 'oct') isSymmetric = true;\n          switch (true) {\n            case /^A\\d+CBC$/.test(jwk.alg): algorithm = 'AES-CBC'; break;\n            case /^A\\d+CTR$/.test(jwk.alg): algorithm = 'AES-CTR'; break;\n            case /^A\\d+GCM$/.test(jwk.alg): algorithm = 'AES-GCM'; break;\n            case /^HS\\d+$/.test(jwk.alg): algorithm = 'HMAC'; break;\n            case /^RSA-OAEP-\\d+$/.test(jwk.alg): algorithm = 'RSA-OAEP'; break;\n            case /^PS\\d+$/.test(jwk.alg): algorithm = 'RSA-PSS'; break;\n            case /^RS\\d+$/.test(jwk.alg): algorithm = 'RSASSA-PKCS1-v1_5'; break;\n            default:\n              // No alg for ECDSA\n              if (jwk.kty === 'EC') algorithm = 'ECDSA';\n          }\n        } else throw new Error('JSON object is not a valid JSON Web Key');\n        break;\n      }\n\n      // PKCS#8 and SPKI are DER-encoded ASN.1 structures. When Base64 encoded and\n      // a header -----BEGIN {something}----- and footer -----END {something}-----\n      // are added, the DER-encoded structure is PEM-encoded.\n      case ENCODING.PEM:\n      default: {\n        if (encoding === ENCODING.PEM) {\n          // Decode PEM to DER\n          const der = value.match(/^-{5}BEGIN (.+)-{5}(?:\\r\\n?|\\n)((?:[0-9a-zA-Z+/]{4})*[0-9a-zA-Z+/]{2}[0-9a-zA-Z+/=]{2})(\\r\\n?|\\n)-{5}END .+-{5}(\\r\\n?|\\n)?$/);\n          if (der && der.length > 2) keyData = decode(der[2], ENCODING.BASE64);\n        } else keyData = decode(value, encoding);\n\n        // Decode DER to ASN.1\n        const asn = asn1js.fromBER(keyData as ArrayBuffer);\n        const root = asn.result;\n        let schema: asn1js.CompareSchemaResult | undefined;\n\n        // Is this a public key?\n        schema = asn1js.compareSchema(\n          root,\n          root,\n          PUBLIC_KEY_SCHEMA,\n        );\n        format = 'spki';\n\n        // Or a private key?\n        if (!schema || !schema.verified) {\n          schema = asn1js.compareSchema(\n            root,\n            root,\n            PRIVATE_KEY_SCHEMA,\n          );\n          isPrivate = true;\n          format = 'pkcs8';\n        }\n\n        if (!schema || !schema.verified) {\n          console.log('Input does not look like a PEM-encoded, ASN.1 DER-encoded, or JSON-encoded cryptokey. Assuming raw.');\n          format = 'raw';\n          isSymmetric = true;\n          algorithm = 'AES-GCM'; // Could also be CBC or CTR modes, or HMAC\n          break;\n        }\n\n        console.debug('schema', schema);\n\n        const algorithmId = schema.result.algorithm.valueBlock.toString();\n        switch (algorithmId) {\n          case '1.2.840.10045.2.1': // ECDSA\n            console.debug('algorithm', 'ecdsa', 'isPrivate?', isPrivate);\n            algorithm = 'ECDSA';\n            break;\n          case '1.2.840.113549.1.1.1': // RSA\n            console.debug('algorithm', 'rsa', 'isPrivate?', isPrivate);\n            algorithm = 'RSASSA-PKCS1-v1_5'; // Could also be PSS or OAEP mode\n            break;\n          default:\n            throw new Error(`Unknown algorithm ID ${algorithmId}`);\n        }\n\n        if (isPrivate) keyUsages.push('decrypt', 'sign');\n        else keyUsages.push('encrypt', 'verify');\n      }\n    }\n  } catch (e) { handleError(e); }\n  console.debug(format!, keyData, algorithm, keyUsages, isSymmetric);\n\n  // Set fields for user\n  algorithmSelect.value = algorithm;\n  if (isSymmetric) {\n    keyTypeSelect.parentElement!.style.display = 'none';\n  } else {\n    keyTypeSelect.parentElement!.style.display = 'flex';\n    keyTypeSelect.value = isPrivate ? 'private' : 'public';\n  }\n}, 0));\n\n// Import key\nimportButton?.addEventListener('click', async () => {\n  const { value } = textarea;\n  const encoding = guessEncoding(value);\n  let isPrivate = false;\n\n  let format: KeyFormat;\n  let keyData: ArrayBuffer | JsonWebKey;\n  let algorithm: RsaHashedImportParams | EcKeyImportParams\n  | HmacImportParams | AlgorithmIdentifier | AesKeyAlgorithm;\n  const extractable = !!section.querySelector<HTMLInputElement>('.extractable input')?.checked;\n  const keyUsages: KeyUsage[] = [];\n\n  const keyName = section.querySelector<HTMLInputElement>('.name input')?.value;\n  const saveKey = !!section.querySelector<HTMLInputElement>('.save input')?.checked;\n\n  // Detect key type\n  try {\n    if (!keyName) throw new Error('A key name is required.');\n\n    switch (encoding) {\n      // JSON Web Keys\n      case ENCODING.JSON: {\n        const jwk = JSON.parse(value);\n\n        // kty parameter is required in a JWK\n        if (jwk && jwk.kty) {\n          format = 'jwk';\n          keyData = jwk as JsonWebKey;\n          keyUsages.push(...jwk.key_ops);\n\n          switch (true) {\n            case /^A\\d+CBC$/.test(jwk.alg): algorithm = 'AES-CBC' as AlgorithmIdentifier; break;\n            case /^A\\d+CTR$/.test(jwk.alg): algorithm = 'AES-CTR' as AlgorithmIdentifier; break;\n            case /^A\\d+GCM$/.test(jwk.alg): algorithm = 'AES-GCM' as AlgorithmIdentifier; break;\n            case /^HS\\d+$/.test(jwk.alg):\n              algorithm = {\n                name: 'HMAC',\n                hash: `SHA-${jwk.alg.match(/^HS(\\d{1,3})$/)[1]}`, // alg options: HS1, HS256, HS384, HS512\n              } as HmacImportParams;\n              break;\n            case jwk.kty === 'RSA': {\n              const [, algId, hashBits] = jwk.alg.match(/^(.+?)-?(\\d{1,3})?$/);\n\n              let name: string;\n              switch (algId) {\n                case 'RSA-OAEP': name = 'RSA-OAEP'; break;\n                case 'RS': name = 'RSASSA-PKCS1-v1_5'; break;\n                case 'PS': name = 'RSA-PSS'; break;\n                default: throw new Error(`RSA Algorithm \"${jwk.alg}\" is not supported.`);\n              }\n\n              let hash: string;\n              switch (hashBits) {\n                case undefined: case '1': hash = 'SHA-1'; break;\n                case '256': case '384': case '512': hash = `SHA-${hashBits}`; break;\n                default: throw new Error(`RSA Algorithm \"${jwk.alg}\" is not supported.`);\n              }\n\n              algorithm = { name, hash } as RsaHashedImportParams;\n              break;\n            }\n            // TODO: ECDH\n            case jwk.kty === 'EC': algorithm = { name: 'ECDSA', namedCurve: jwk.crv } as EcKeyImportParams; break;\n            default: throw new Error(`Unsupported key type \"${jwk.kty}\"${jwk.alg ? ` with algorithm \"${jwk.alg}\"` : ''}.`);\n          }\n        } else throw new Error('JSON object is not a valid JSON Web Key');\n        break;\n      }\n\n      // PKCS#8 and SPKI are DER-encoded ASN.1 structures. When Base64 encoded and\n      // a header -----BEGIN {something}----- and footer -----END {something}-----\n      // are added, the DER-encoded structure is PEM-encoded.\n      case ENCODING.PEM:\n      default: {\n        if (encoding === ENCODING.PEM) {\n          // Decode PEM to DER\n          const der = value.match(/^-{5}BEGIN (.+)-{5}(?:\\r\\n?|\\n)((?:[0-9a-zA-Z+/]{4})*[0-9a-zA-Z+/]{2}[0-9a-zA-Z+/=]{2})(\\r\\n?|\\n)-{5}END .+-{5}(\\r\\n?|\\n)?$/);\n          if (der && der.length > 2) keyData = decode(der[2], ENCODING.BASE64);\n          else throw new Error('Invalid PEM encoding.');\n        } else keyData = decode(value, encoding);\n\n        // Decode DER to ASN.1\n        const asn = asn1js.fromBER(keyData);\n        const root = asn.result;\n        let schema: asn1js.CompareSchemaResult | undefined;\n\n        // Is this a public key?\n        schema = asn1js.compareSchema(\n          root,\n          root,\n          PUBLIC_KEY_SCHEMA,\n        );\n        format = 'spki';\n\n        // Or a private key?\n        if (!schema || !schema.verified) {\n          schema = asn1js.compareSchema(\n            root,\n            root,\n            PRIVATE_KEY_SCHEMA,\n          );\n          isPrivate = true;\n          format = 'pkcs8';\n        }\n\n        if (!schema || !schema.verified) {\n          console.log('Input does not look like a PEM-encoded, ASN.1 DER-encoded, or JSON-encoded cryptokey. Assuming raw.');\n          format = 'raw';\n          algorithm = algorithmSelect.value as AlgorithmIdentifier;\n          keyUsages.push('encrypt', 'decrypt'); // TODO: differentiate for HMAC; exclude options that don't make sense\n          break;\n        }\n\n        const algorithmId = schema.result.algorithm.valueBlock.toString();\n        switch (algorithmId) {\n          // TODO: Extract curve and hash settings from DER data\n          case '1.2.840.10045.2.1': algorithm = 'ECDSA'; break;\n          case '1.2.840.113549.1.1.1': algorithm = 'RSASSA-PKCS1-v1_5'; break; // Could also be PSS or OAEP mode\n          // TODO: ECDH\n          default:\n            throw new Error(`Unknown algorithm ID \"${algorithmId}\"`);\n        }\n\n        if (isPrivate) keyUsages.push('decrypt', 'sign');\n        else keyUsages.push('encrypt', 'verify');\n      }\n    }\n\n    // importKey overloads do not overlap\n    let key: CryptoKey;\n    if (format === 'jwk') {\n      key = await crypto.subtle\n        .importKey(format, keyData as JsonWebKey, algorithm, extractable, keyUsages);\n    } else {\n      key = await crypto.subtle\n        .importKey(format, keyData as ArrayBuffer, algorithm, extractable, keyUsages);\n    }\n\n    addKey(keyName, key, saveKey);\n  } catch (e) { handleError(e); }\n});\n", "/**\n * @file Contains functionality for bcrypt hashing and verification\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * Web Crypto API does not include bcrypt support; however, the bcrypt.js\n * library runs in the browser and uses Web Crypto API's PRNG for secure\n * random data to use in its salt generation function.  The JS implementation\n * of bcrypt is around 30% slower than native implementations, so the progress\n * bar really comes in handy here.\n */\n\nimport * as bcrypt from 'bcryptjs';\nimport { showResults } from '../../lib/result';\nimport load from '../../lib/loader';\nimport { handleError } from '../../lib/error';\n\n// Update bcrypt cost iterations count\nconst bcryptControl = document.querySelector<HTMLDivElement>('#hash-bcrypt .control.cost span:first-child')!;\nconst bcryptCost = document.querySelector<HTMLInputElement>('#hash-bcrypt input.cost')!;\n\nbcryptCost.addEventListener('change', () => {\n  const value = parseInt(bcryptCost.value, 10);\n  bcryptControl.textContent = `Cost \u2022 ${(2 ** value).toLocaleString()} iterations`;\n});\n\n// Bcrypt finish and progress functions\nconst bcryptComplete = (\n  button: HTMLButtonElement,\n  text: string | null,\n) => (error: Error | null, result: string | boolean) => {\n  // TODO: Determine whether we should return or throw here; execution continues\n  if (error) handleError(error);\n\n  if (typeof result === 'boolean') {\n    showResults([{ label: 'Bcrypt Verification Result', value: String(result) }]);\n  } else {\n    const sansHash = bcrypt.getSalt(result); // Like $2a$10$uTzw7mkyaPz.6Kb.H0d/sO\n    const salt = sansHash.replace(/^.+\\$/, '');\n    const hash = result.substring(sansHash.length);\n\n    showResults([\n      { label: 'Bcrypt String', value: result, filename: 'bcrypt-string' },\n      { label: 'Salt', value: salt, filename: 'bcrypt-salt' },\n      { label: 'Hash', value: hash, filename: 'bcrypt-hash' },\n    ]);\n  }\n\n  const btn = button;\n  btn.textContent = text;\n  btn.disabled = false;\n};\n\nconst bcryptProgress = (button: HTMLButtonElement) => (num: number) => {\n  load(num * 100);\n  const btn = button;\n  btn.textContent = `${String(num * 100).substring(0, 4)}%`;\n};\n\n// Generate bcrypt\nconst bcryptHashButton = document.querySelector<HTMLButtonElement>('#hash-bcrypt button');\nbcryptHashButton?.addEventListener('click', () => {\n  load(0);\n  bcryptHashButton.disabled = true;\n\n  try {\n    const cost = parseInt(bcryptCost.value, 10) || 10;\n    const password = document.querySelector<HTMLInputElement>('#hash-bcrypt .password input')!;\n\n    bcrypt.hash(\n      password.value,\n      cost,\n      bcryptComplete(bcryptHashButton, bcryptHashButton.textContent),\n      bcryptProgress(bcryptHashButton),\n    );\n  } catch (e) { handleError(e); }\n});\n\n// Verify bcrypt\nconst bcryptVerifyButton = document.querySelector<HTMLButtonElement>('#verify-bcrypt button');\nbcryptVerifyButton?.addEventListener('click', async () => {\n  load(0);\n  bcryptVerifyButton.disabled = true;\n\n  const password = document.querySelector<HTMLInputElement>('#verify-bcrypt .password input')!;\n  const hash = document.querySelector<HTMLInputElement>('#verify-bcrypt .hash input')!;\n\n  try {\n    bcrypt.compare(\n      password.value,\n      hash.value,\n      bcryptComplete(bcryptVerifyButton, bcryptVerifyButton.textContent),\n      bcryptProgress(bcryptVerifyButton),\n    );\n  } catch (e) { handleError(e); }\n});\n", "/**\n * @file Contains functionality for PBKDF2 hashing and verification\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * Web Crypto API includes native support for the Password-Based Key\n * Derivation Function 2 (PBKDF2).\n */\n\nimport { showResults } from '../../lib/result';\nimport { ENCODING, decode, encode } from '../../lib/encode';\nimport load from '../../lib/loader';\nimport { handleError } from '../../lib/error';\n\nconst hashSettings = document.querySelector<HTMLElement>('#hash-PBKDF2')!;\nconst prfSelect = hashSettings.querySelector<HTMLSelectElement>('.prf-select')!;\nconst lengthInput = hashSettings.querySelector<HTMLInputElement>('input.derivation-length')!;\nconst iterationsInput = hashSettings.querySelector<HTMLInputElement>('input.iterations')!;\nconst saltEncoding = hashSettings.querySelector<HTMLSelectElement>('select.input-encoding')!;\nconst saltInput = hashSettings.querySelector<HTMLInputElement>('input.salt')!;\nconst passwordInput = hashSettings.querySelector<HTMLInputElement>('.password input')!;\nconst button = hashSettings.querySelector<HTMLButtonElement>('button');\n\n// Update Output Length\nlengthInput?.addEventListener('change', () => {\n  const ol = document.querySelector('#passwords menu .output-length span');\n  if (ol) ol.textContent = `${parseInt(lengthInput.value, 10) * 8} bits`;\n});\n\n// Update Block Size\nprfSelect?.addEventListener('change', () => {\n  const bs = document.querySelector('#passwords menu .block-size span');\n  if (bs) bs.textContent = String(prfSelect.selectedOptions[0].dataset.bs);\n});\n\n// Hash password\nbutton?.addEventListener('click', async () => {\n  load(0);\n  button.disabled = true;\n\n  try {\n    const password = (new TextEncoder()).encode(passwordInput.value);\n    const key = await crypto.subtle.importKey('raw', password, { name: 'PBKDF2' }, false, ['deriveBits']);\n\n    let salt: ArrayBuffer;\n    if (saltInput.value) {\n      const radix = Number(saltEncoding.selectedOptions[0].value);\n      salt = decode(saltInput.value, radix);\n    } else salt = crypto.getRandomValues(new Uint8Array(16)).buffer; // 128 bits recommended by NIST\n\n    const hash = prfSelect.selectedOptions[0].dataset.alg;\n    const iterations = Number(iterationsInput.value.length ? iterationsInput.value : 100000);\n    const algorithm = {\n      name: 'PBKDF2',\n      salt,\n      hash,\n      iterations,\n    };\n\n    const length = Number(lengthInput.value.length ? lengthInput.value : 32) * 8;\n    if (length < 0) throw new Error('Byte length must be positive');\n    const derivation = await crypto.subtle.deriveBits(algorithm, key, length);\n\n    // PHC String Format requires that the = symbol only be used in the parameter map.  The hash\n    // MUST be in B64 format, which is Base64 without the padding.  Here we choose to represent\n    // the salt in the same format, as well.\n    const toB64 = (base64: string) => base64.replace(/=/g, '');\n    const b64Salt = toB64(encode(salt, ENCODING.BASE64));\n    const b64Hash = toB64(encode(derivation, ENCODING.BASE64));\n    const hashString = `$pbkdf2$prf=hmac-${hash!.toLowerCase()},c=${iterations},dklen=${length}$${b64Salt}$${b64Hash}`;\n\n    showResults([{\n      label: 'PBKDF2 String in PHC String Format (recommended by author)', value: hashString, filename: 'pbkdf2-string',\n    }, {\n      label: 'Hash', value: derivation, defaultEncoding: ENCODING.BASE64, filename: 'pbkdf2-hash',\n    }, {\n      label: 'Salt', value: salt, defaultEncoding: ENCODING.BASE64, filename: 'pbkdf2-salt',\n    }]);\n  } catch (e) { handleError(e); }\n\n  button.disabled = false;\n});\n", "/**\n * @file Contains functionality for the Secure Remote Password (SRP) Protocol\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * The Secure Remote Password (SRP) Protocol is a Password-Authenticated Key\n * Exchange (PAKE) protocol, and enables a user and a server to authenticate\n * themselves to each other without the user ever transmitting their password\n * to the server.  Instead, the server stores a salt and verifier, and a proof\n * process occurs in both directions.\n */\n\nimport {\n  createVerifierAndSalt, SRPClientSession, SRPParameters, SRPRoutines, SRPServerSession,\n} from 'tssrp6a';\nimport { Result, showResults } from '../../lib/result';\nimport { handleError } from '../../lib/error';\nimport { ENCODING } from '../../lib/encode';\n\ntype SRPSettings = {\n  strict: boolean,\n  primeGroup: number,\n  hashAlgorithm: string,\n};\n\ntype Routines = { routines: SRPRoutines };\n\ntype SRPIdentity = {\n  username: string,\n  password: string,\n};\n\ntype SRPClientOutputs = {\n  salt: bigint,\n  verifier: bigint,\n};\n\ntype SRPProofParameters = {\n  salt: bigint,\n  serverPublicKey: bigint,\n};\n\ntype RegisterParameters = Routines & SRPIdentity;\ntype AuthenticateParameters = RegisterParameters & SRPClientOutputs;\ntype ProveClientParameters = RegisterParameters & SRPProofParameters;\n\n// Strictly enfore 6a by including the identity in the verifier\nclass SRP6aRoutines extends SRPRoutines {\n  public computeIdentityHash(I: string, P: string): Promise<ArrayBuffer> {\n    return this.hash((new TextEncoder()).encode(`${I}:${P}`).buffer);\n  }\n}\n\n// Get SRP parameters\nconst getSRPRoutines = ({ strict, primeGroup, hashAlgorithm }: SRPSettings) => {\n  const group = SRPParameters.PrimeGroup[primeGroup];\n  const hash = SRPParameters.H[hashAlgorithm];\n  const params = new SRPParameters(group, hash);\n\n  return strict ? new SRP6aRoutines(params) : new SRPRoutines(params);\n};\n\n// Produce a salt and verifier to send to server during account registration\nconst register = async ({ routines, username, password }: RegisterParameters) => {\n  const { s: salt, v: verifier } = await createVerifierAndSalt(\n    routines,\n    username,\n    password,\n  );\n  return { salt, verifier };\n};\n\n// Perform only the client proof generation step\nconst proveClient = async (settings: ProveClientParameters) => {\n  const {\n    routines,\n    username, password,\n    salt, serverPublicKey,\n  } = settings;\n\n  const client = new SRPClientSession(routines);\n\n  const clientStep1 = await client.step1(username, password);\n  // Client sends server username; server gets salt and verifier from user record\n  // Server produces private key b and public key B, though B is provided here\n  // Server sends client the salt and its public key B\n  // Client produces public key A and proof M1\n  const clientStep2 = await clientStep1.step2(salt, serverPublicKey);\n  // Client sends public key A and proof M1 to server\n\n  const { A, M1 } = clientStep2;\n  return { A, M1 };\n};\n\n// Produce client and server authentication process\nconst authenticate = async (settings: AuthenticateParameters) => {\n  const {\n    routines,\n    username, password,\n    salt, verifier,\n  } = settings;\n\n  const client = new SRPClientSession(routines);\n  const server = new SRPServerSession(routines);\n\n  const clientStep1 = await client.step1(username, password);\n  // Client sends server username; server gets salt and verifier from user record\n  // Server produces private key b and public key B\n  const serverStep1 = await server.step1(username, salt, verifier);\n  // Server sends client the salt and its public key B\n  // Client produces public key A and proof M1\n  const clientStep2 = await clientStep1.step2(salt, serverStep1.B);\n  // Client sends public key A and proof M1 to server\n  // Server produces proof M2, authenticating user\n  const serverStep2 = await serverStep1.step2(clientStep2.A, clientStep2.M1);\n  // Server sends proof M2 to client\n  // Client authenticates server\n  await clientStep2.step3(serverStep2);\n\n  const { B } = serverStep1;\n  const { A, M1 } = clientStep2;\n  const M2 = serverStep2;\n  return {\n    B, A, M1, M2,\n  };\n};\n\nconst registerSection = document.querySelector<HTMLElement>('#register-SRP')!;\nconst registerButton = registerSection.querySelector<HTMLButtonElement>('button')!;\nconst authenticateSection = document.querySelector<HTMLElement>('#authenticate-SRP')!;\nconst authenticateButton = authenticateSection.querySelector<HTMLButtonElement>('button')!;\nconst proveIdentitySection = document.querySelector<HTMLElement>('#prove-identity-SRP')!;\nconst proveIdentityButton = proveIdentitySection.querySelector<HTMLButtonElement>('button')!;\n\nregisterButton.addEventListener('click', async () => {\n  const strict = registerSection.querySelector<HTMLInputElement>('input.strict')!.checked;\n  const primeGroup = Number(registerSection.querySelector<HTMLSelectElement>('select.prime-group')!.selectedOptions[0].value);\n  const hashAlgorithm = String(registerSection.querySelector<HTMLSelectElement>('select.hash-algorithm')!.selectedOptions[0].dataset.alg);\n  const username = registerSection.querySelector<HTMLInputElement>('input.identity')?.value || '';\n  const password = registerSection.querySelector<HTMLInputElement>('input[type=\"password\"]')?.value || '';\n\n  try {\n    const routines = getSRPRoutines({ strict, primeGroup, hashAlgorithm });\n    const { salt, verifier } = await register({ routines, username, password });\n\n    showResults([{\n      label: 'Salt \u2022 Store in user record', value: salt.toString(), defaultEncoding: ENCODING.BIGINT, filename: 'srp-salt',\n    }, {\n      label: 'Verifier \u2022 Store in user record', value: verifier.toString(), defaultEncoding: ENCODING.BIGINT, filename: 'srp-verifier',\n    }, {\n      label: 'Prime', value: SRPParameters.PrimeGroup[primeGroup].N.toString(), defaultEncoding: ENCODING.BIGINT, filename: 'srp-prime',\n    }]);\n  } catch (e) { handleError(e); }\n});\n\nauthenticateButton.addEventListener('click', async () => {\n  const strict = authenticateSection.querySelector<HTMLInputElement>('input.strict')!.checked;\n  const primeGroup = Number(authenticateSection.querySelector<HTMLSelectElement>('select.prime-group')!.selectedOptions[0].value);\n  const hashAlgorithm = String(authenticateSection.querySelector<HTMLSelectElement>('select.hash-algorithm')!.selectedOptions[0].dataset.alg);\n  const username = authenticateSection.querySelector<HTMLInputElement>('input.identity')?.value || '';\n  const password = authenticateSection.querySelector<HTMLInputElement>('input[type=\"password\"]')?.value || '';\n\n  try {\n    const salt = BigInt(authenticateSection.querySelector<HTMLTextAreaElement>('.salt textarea')?.value || '');\n    const verifier = BigInt(authenticateSection.querySelector<HTMLTextAreaElement>('.verifier textarea')?.value || '');\n    const routines = getSRPRoutines({ strict, primeGroup, hashAlgorithm });\n    const results: Result[] = [];\n\n    const {\n      B, A, M1, M2,\n    } = await authenticate({\n      routines, username, password, salt, verifier,\n    });\n\n    results.push({\n      label: 'Client Public Key A', value: A.toString(), defaultEncoding: ENCODING.BIGINT, filename: 'srp-client-public-key',\n    });\n    results.push({\n      label: 'Client Proof M1', value: M1.toString(), defaultEncoding: ENCODING.BIGINT, filename: 'srp-client-proof',\n    });\n    results.push({\n      label: 'Server Public Key B', value: B.toString(), defaultEncoding: ENCODING.BIGINT, filename: 'srp-server-public-key',\n    });\n    results.push({\n      label: 'Server Proof M2', value: M2.toString(), defaultEncoding: ENCODING.BIGINT, filename: 'srp-server-proof',\n    });\n\n    showResults(results);\n  } catch (e) { handleError(e); }\n});\n\nproveIdentityButton.addEventListener('click', async () => {\n  const strict = proveIdentitySection.querySelector<HTMLInputElement>('input.strict')!.checked;\n  const primeGroup = Number(proveIdentitySection.querySelector<HTMLSelectElement>('select.prime-group')!.selectedOptions[0].value);\n  const hashAlgorithm = String(proveIdentitySection.querySelector<HTMLSelectElement>('select.hash-algorithm')!.selectedOptions[0].dataset.alg);\n  const username = proveIdentitySection.querySelector<HTMLInputElement>('input.identity')?.value || '';\n  const password = proveIdentitySection.querySelector<HTMLInputElement>('input[type=\"password\"]')?.value || '';\n  const publicKey = proveIdentitySection.querySelector<HTMLTextAreaElement>('.public-key textarea')?.value || '';\n\n  try {\n    const salt = BigInt(proveIdentitySection.querySelector<HTMLTextAreaElement>('.salt textarea')?.value || '');\n    const routines = getSRPRoutines({ strict, primeGroup, hashAlgorithm });\n    const results: Result[] = [];\n\n    // If the user defines the server public key B, then we cannot emulate\n    // server-side functions.  So, we can only do the client proof.\n    const serverPublicKey = BigInt(publicKey);\n    const { A, M1 } = await proveClient({\n      routines, username, password, salt, serverPublicKey,\n    });\n\n    results.push({\n      label: 'Client Public Key A', value: A.toString(), defaultEncoding: ENCODING.BIGINT, filename: 'srp-client-public-key',\n    });\n    results.push({\n      label: 'Client Proof M1', value: M1.toString(), defaultEncoding: ENCODING.BIGINT, filename: 'srp-client-proof',\n    });\n\n    showResults(results);\n  } catch (e) { handleError(e); }\n});\n", "/**\n * @file Contains functionality for hashing and verification of passwords\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * Due to their pervasive and high-value nature, passwords require special\n * application of digest functions to reduce abuse.  In particular, they\n * benefit from salting to mitigate rainbow attacks, and key stretching to\n * drastically increase the energy required to brute force them.\n */\n\nimport { hideResults } from '../../lib/result';\nimport './bcrypt';\nimport './pbkdf2';\nimport './srp';\n\nconst algorithm = document.querySelector<HTMLSelectElement>('#passwords menu .algorithm select')!;\nconst operation = document.querySelector<HTMLSelectElement>('#passwords .operation')!;\n\nconst updateView = () => {\n  const op = operation.selectedOptions[0].value;\n  const hash = algorithm.selectedOptions[0].dataset.alg;\n  const target = document.querySelector(`#passwords #${op}-${hash}`);\n\n  const settings = document.querySelectorAll('#passwords .subsection > .settings');\n  settings.forEach((setting) => setting.classList.remove('active'));\n  target?.classList.add('active');\n};\n\nconst updateStats = () => {\n  const menu = document.querySelector('#passwords menu')!;\n  const blockSize = menu.querySelector('.block-size span')!;\n  const method = menu.querySelector('.method span')!;\n  const specification = menu.querySelector('.specification span')!;\n\n  // Update statistics\n  const selected = algorithm.selectedOptions[0].dataset;\n  blockSize.textContent = selected.bs || '';\n  method.textContent = selected.method || '';\n  specification.textContent = selected.spec || '';\n\n  // Update operation list\n  operation.textContent = '';\n  selected.operations?.split(' ').forEach((op, i) => {\n    const option = document.createElement('option');\n    if (i === 0) option.selected = true;\n    option.value = op;\n    option.textContent = `${op[0].toUpperCase()}${op.substring(1).replace('-', ' ')}`;\n    operation.appendChild(option);\n  });\n\n  hideResults();\n  updateView();\n};\n\nalgorithm.addEventListener('change', updateStats);\noperation.addEventListener('change', updateView);\n", "/**\n * @file Disables form submissions and handles other common form functionality\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport { guessEncoding } from './encode';\n\nconst submit = (event: Event) => {\n  event.preventDefault();\n  if (!(event.target as HTMLFormElement).checkValidity()) event.stopImmediatePropagation();\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.querySelectorAll('form')?.forEach((form) => form.addEventListener('submit', submit));\n});\n\n/**\n * Guess encoding of input-encoding fields, used by any control that should\n * accept an input of arbitrary encoding, such as digest verification,\n * encryption IVs and counters, or salt values.\n */\nconst checkInputEncoding = (encodingSelect: HTMLSelectElement, input: HTMLInputElement) => () => {\n  const encoding = guessEncoding(input.value);\n\n  if (encoding) { // UNKNOWN is radix 0, a falsey value\n    encodingSelect.childNodes.forEach((op) => {\n      const option = op as HTMLOptionElement;\n      if (Number(option.value) === encoding) option.selected = true;\n    });\n  }\n};\n\n// Check input encoding of multi select fields\nconst multiElements = document.querySelectorAll<HTMLSelectElement>('label.multi');\nmultiElements.forEach((element) => {\n  const input = element.querySelector('input')!;\n  const select = element.querySelector('select')!;\n  input.addEventListener('paste', () => setTimeout(checkInputEncoding(select, input), 0));\n});\n", "/**\n * @file Handles functionality for \"Operation Areas\"\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n *\n * Operation Areas are used in sections like Digest and Encryption,\n * and consume content and produce statistics to aid the user in\n * cryptographic operations.\n */\n\nimport { guessEncoding } from './encode';\n\nconst opAreas = document.querySelectorAll<HTMLElement>('.operation-area');\n\n/**\n * Guess encoding of textarea content\n */\nconst checkTextareaEncoding = (textarea: HTMLTextAreaElement) => () => {\n  const encodingSelect = textarea.parentElement!.querySelector('.encoding select') || textarea.parentElement!.parentElement!.querySelector('.encoding select');\n  const encoding = guessEncoding(textarea.value);\n\n  if (encoding) { // UNKNOWN is radix 0, a falsey value\n    encodingSelect?.childNodes.forEach((op) => {\n      const option = op as HTMLOptionElement;\n      if (Number(option.value) === encoding) option.selected = true;\n    });\n  }\n};\n\nopAreas.forEach((opArea) => {\n  const textareas = opArea.querySelectorAll<HTMLTextAreaElement>('textarea');\n\n  // If user is typing, it's probably plain text, so let's just check onpaste\n  // We use setTimeout to allow the paste to complete before evaluating the whole textarea contents\n  textareas.forEach((textarea) => {\n    textarea.addEventListener('paste', () => setTimeout(checkTextareaEncoding(textarea), 0));\n\n    // Character Count\n    textarea.addEventListener('input', () => {\n      const characterCount = textarea.parentElement!.querySelector('.character-count') || textarea.parentElement!.parentElement!.querySelector('.character-count');\n\n      if (characterCount) {\n        const count = textarea.value.length;\n        if (count === 1) characterCount.textContent = '1 character';\n        else characterCount.textContent = `${count} characters`;\n      }\n    });\n  });\n});\n\n/**\n * Drag and Drop operations for textareas\n */\n\nconst preventDefault = (event: Event) => {\n  event.stopPropagation();\n  event.preventDefault();\n};\n\nconst classState = (element: HTMLElement, add: boolean) => () => {\n  if (add) element.classList.add('dragover');\n  else element.classList.remove('dragover');\n};\n\nopAreas.forEach((opArea) => {\n  const textareas = opArea.querySelectorAll<HTMLTextAreaElement>('.input > textarea');\n\n  textareas.forEach((textarea) => {\n    // Drag-and-drop\n    textarea?.addEventListener('dragenter', preventDefault);\n    textarea?.addEventListener('dragenter', classState(textarea, true));\n    textarea?.addEventListener('dragover', preventDefault);\n    textarea?.addEventListener('dragover', classState(textarea, true));\n    textarea?.addEventListener('dragleave', classState(textarea, false));\n    textarea?.addEventListener('dragend', classState(textarea, false));\n    textarea?.addEventListener('drop', preventDefault);\n    textarea?.addEventListener('drop', classState(textarea, false));\n  });\n});\n\n/**\n * Prevent drops outside of textareas\n */\n\nconst disallowDrop = (event: DragEvent) => {\n  const e = event;\n  const target = e.target as HTMLElement;\n  if (target?.nodeName !== 'TEXTAREA' && e.dataTransfer) {\n    e.preventDefault();\n    e.dataTransfer.effectAllowed = 'none';\n    e.dataTransfer.dropEffect = 'none';\n  }\n};\n\nwindow.addEventListener('dragover', disallowDrop);\nwindow.addEventListener('dragenter', disallowDrop);\nwindow.addEventListener('drop', disallowDrop);\n", "/**\n * @file Handles tab logic\n * @author Micah Henning <hello@micah.soy>\n * @copyright (C) 2024 Micah Henning\n * license GPL-3.0-or-later\n */\n\nimport { hideResults } from './result';\n\nconst tabsElements = document.querySelectorAll('.tabs');\n\ntabsElements.forEach((tabsElement) => {\n  const tabs = Array.from(tabsElement.children) as HTMLElement[];\n  const parent = tabsElement.parentElement!;\n  const sections = parent.querySelectorAll(':scope [data-tab]');\n\n  tabs.forEach((tab) => {\n    if (tab.classList.contains('datum')) return; // don't interact with stats\n\n    tab.addEventListener('click', () => {\n      tabs.forEach((t) => t.classList.remove('active'));\n      sections?.forEach((s) => s.classList.remove('active'));\n\n      tab.classList.add('active');\n      parent.querySelector(`[data-tab=\"${tab.dataset.target}\"]`)?.classList.add('active');\n\n      hideResults();\n    });\n  });\n});\n"],
  "mappings": "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AAY,WAAY,UAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,UAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,QAAY,UAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,SAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,UAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,SAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,SAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,UAAY,UAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,UAAY,UAChD,WAAY,WAAY,WAAY,WAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,UAAY,UAAY,UAChD,WAAY,UAAY,WAAY,UAAY,WAChD,WAAY,SAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,UAAY,UAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,SAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,UAAY,WAAY,WAAY,UAChD,WAAY,SAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,UAAY,UAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,UAChD,UAAY,WAAY,UAAY,UAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,UAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,SAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,UAChD,UAAY,WAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,SAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,UAAY,UAChD,SAAY,WAAY,WAAY,WAAY,UAChD,UAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,UAAY,UAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,QAChD,UAAY,UAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,UAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,UAAY,SAAY,WAChD,SAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,SAAY,SAAY,WAAY,WAChD,WAAY,WAAY,UAAY,UAAY,WAChD,UAAY,WAAY,WAAY,SAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,UAAY,UAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,SAAY,UAAY,WAChD,UAAY,WAAY,WAAY,UAAY,SAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,SAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,UAAY,UAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,UAAY,WAAY,WAAY,UAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,UAAY,WAAY,UAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,WAAY,UAAY,UAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,UAAY,SAAY,SAChD,WAAY,WAAY,WAAY,WAAY,WAChD,WAAY,WAAY,WAAY,SACxC,EAOIC,EAAS,CACT,WAAY,WAAY,WAAY,WAAY,WAChD,UACJ,EAUA,SAASC,EAAUC,EAAIzB,EAAK0B,EAAGC,EAAG,CAC9B,IAAIT,EACAD,EAAIQ,EAAGzB,CAAG,EACV4B,EAAIH,EAAGzB,EAAM,CAAC,EAElB,OAAAiB,GAAKS,EAAE,CAAC,EAoBRR,EAAKS,EAAEV,IAAM,EAAE,EACfC,GAAKS,EAAE,IAAUV,GAAK,GAAM,GAAK,EACjCC,GAAKS,EAAE,IAAUV,GAAK,EAAK,GAAK,EAChCC,GAAKS,EAAE,IAASV,EAAI,GAAK,EACzBW,GAAKV,EAAIQ,EAAE,CAAC,EACZR,EAAKS,EAAEC,IAAM,EAAE,EACfV,GAAKS,EAAE,IAAUC,GAAK,GAAM,GAAK,EACjCV,GAAKS,EAAE,IAAUC,GAAK,EAAK,GAAK,EAChCV,GAAKS,EAAE,IAASC,EAAI,GAAK,EACzBX,GAAKC,EAAIQ,EAAE,CAAC,EAEZR,EAAKS,EAAEV,IAAM,EAAE,EACfC,GAAKS,EAAE,IAAUV,GAAK,GAAM,GAAK,EACjCC,GAAKS,EAAE,IAAUV,GAAK,EAAK,GAAK,EAChCC,GAAKS,EAAE,IAASV,EAAI,GAAK,EACzBW,GAAKV,EAAIQ,EAAE,CAAC,EACZR,EAAKS,EAAEC,IAAM,EAAE,EACfV,GAAKS,EAAE,IAAUC,GAAK,GAAM,GAAK,EACjCV,GAAKS,EAAE,IAAUC,GAAK,EAAK,GAAK,EAChCV,GAAKS,EAAE,IAASC,EAAI,GAAK,EACzBX,GAAKC,EAAIQ,EAAE,CAAC,EAEZR,EAAKS,EAAEV,IAAM,EAAE,EACfC,GAAKS,EAAE,IAAUV,GAAK,GAAM,GAAK,EACjCC,GAAKS,EAAE,IAAUV,GAAK,EAAK,GAAK,EAChCC,GAAKS,EAAE,IAASV,EAAI,GAAK,EACzBW,GAAKV,EAAIQ,EAAE,CAAC,EACZR,EAAKS,EAAEC,IAAM,EAAE,EACfV,GAAKS,EAAE,IAAUC,GAAK,GAAM,GAAK,EACjCV,GAAKS,EAAE,IAAUC,GAAK,EAAK,GAAK,EAChCV,GAAKS,EAAE,IAASC,EAAI,GAAK,EACzBX,GAAKC,EAAIQ,EAAE,CAAC,EAEZR,EAAKS,EAAEV,IAAM,EAAE,EACfC,GAAKS,EAAE,IAAUV,GAAK,GAAM,GAAK,EACjCC,GAAKS,EAAE,IAAUV,GAAK,EAAK,GAAK,EAChCC,GAAKS,EAAE,IAASV,EAAI,GAAK,EACzBW,GAAKV,EAAIQ,EAAE,CAAC,EACZR,EAAKS,EAAEC,IAAM,EAAE,EACfV,GAAKS,EAAE,IAAUC,GAAK,GAAM,GAAK,EACjCV,GAAKS,EAAE,IAAUC,GAAK,EAAK,GAAK,EAChCV,GAAKS,EAAE,IAASC,EAAI,GAAK,EACzBX,GAAKC,EAAIQ,EAAE,CAAC,EAEZR,EAAKS,EAAEV,IAAM,EAAE,EACfC,GAAKS,EAAE,IAAUV,GAAK,GAAM,GAAK,EACjCC,GAAKS,EAAE,IAAUV,GAAK,EAAK,GAAK,EAChCC,GAAKS,EAAE,IAASV,EAAI,GAAK,EACzBW,GAAKV,EAAIQ,EAAE,CAAC,EACZR,EAAKS,EAAEC,IAAM,EAAE,EACfV,GAAKS,EAAE,IAAUC,GAAK,GAAM,GAAK,EACjCV,GAAKS,EAAE,IAAUC,GAAK,EAAK,GAAK,EAChCV,GAAKS,EAAE,IAASC,EAAI,GAAK,EACzBX,GAAKC,EAAIQ,EAAE,EAAE,EAEbR,EAAKS,EAAEV,IAAM,EAAE,EACfC,GAAKS,EAAE,IAAUV,GAAK,GAAM,GAAK,EACjCC,GAAKS,EAAE,IAAUV,GAAK,EAAK,GAAK,EAChCC,GAAKS,EAAE,IAASV,EAAI,GAAK,EACzBW,GAAKV,EAAIQ,EAAE,EAAE,EACbR,EAAKS,EAAEC,IAAM,EAAE,EACfV,GAAKS,EAAE,IAAUC,GAAK,GAAM,GAAK,EACjCV,GAAKS,EAAE,IAAUC,GAAK,EAAK,GAAK,EAChCV,GAAKS,EAAE,IAASC,EAAI,GAAK,EACzBX,GAAKC,EAAIQ,EAAE,EAAE,EAEbR,EAAKS,EAAEV,IAAM,EAAE,EACfC,GAAKS,EAAE,IAAUV,GAAK,GAAM,GAAK,EACjCC,GAAKS,EAAE,IAAUV,GAAK,EAAK,GAAK,EAChCC,GAAKS,EAAE,IAASV,EAAI,GAAK,EACzBW,GAAKV,EAAIQ,EAAE,EAAE,EACbR,EAAKS,EAAEC,IAAM,EAAE,EACfV,GAAKS,EAAE,IAAUC,GAAK,GAAM,GAAK,EACjCV,GAAKS,EAAE,IAAUC,GAAK,EAAK,GAAK,EAChCV,GAAKS,EAAE,IAASC,EAAI,GAAK,EACzBX,GAAKC,EAAIQ,EAAE,EAAE,EAEbR,EAAKS,EAAEV,IAAM,EAAE,EACfC,GAAKS,EAAE,IAAUV,GAAK,GAAM,GAAK,EACjCC,GAAKS,EAAE,IAAUV,GAAK,EAAK,GAAK,EAChCC,GAAKS,EAAE,IAASV,EAAI,GAAK,EACzBW,GAAKV,EAAIQ,EAAE,EAAE,EACbR,EAAKS,EAAEC,IAAM,EAAE,EACfV,GAAKS,EAAE,IAAUC,GAAK,GAAM,GAAK,EACjCV,GAAKS,EAAE,IAAUC,GAAK,EAAK,GAAK,EAChCV,GAAKS,EAAE,IAASC,EAAI,GAAK,EACzBX,GAAKC,EAAIQ,EAAE,EAAE,EAEbD,EAAGzB,CAAG,EAAI4B,EAAIF,EAAEP,EAAsB,CAAC,EACvCM,EAAGzB,EAAM,CAAC,EAAIiB,EACPQ,CACX,CAQA,SAASI,EAAcC,EAAMC,EAAM,CAC/B,QAAS3C,EAAI,EAAG4C,EAAO,EAAG5C,EAAI,EAAG,EAAEA,EAC/B4C,EAAQA,GAAQ,EAAMF,EAAKC,CAAI,EAAI,IACnCA,GAAQA,EAAO,GAAKD,EAAK,OAC7B,MAAO,CAAE,IAAKE,EAAM,KAAMD,CAAK,CACnC,CAQA,SAASE,GAAKC,EAAKR,EAAGC,EAAG,CAMrB,QALIQ,EAAS,EACTV,EAAK,CAAC,EAAG,CAAC,EACVW,EAAOV,EAAE,OACTrB,EAAOsB,EAAE,OACTU,EACKjD,EAAI,EAAGA,EAAIgD,EAAMhD,IACtBiD,EAAKR,EAAcK,EAAKC,CAAM,EAC9BA,EAASE,EAAG,KACZX,EAAEtC,CAAC,EAAIsC,EAAEtC,CAAC,EAAIiD,EAAG,IACrB,IAAKjD,EAAI,EAAGA,EAAIgD,EAAMhD,GAAK,EACvBqC,EAAKD,EAAUC,EAAI,EAAGC,EAAGC,CAAC,EAC1BD,EAAEtC,CAAC,EAAIqC,EAAG,CAAC,EACXC,EAAEtC,EAAI,CAAC,EAAIqC,EAAG,CAAC,EACnB,IAAKrC,EAAI,EAAGA,EAAIiB,EAAMjB,GAAK,EACvBqC,EAAKD,EAAUC,EAAI,EAAGC,EAAGC,CAAC,EAC1BA,EAAEvC,CAAC,EAAIqC,EAAG,CAAC,EACXE,EAAEvC,EAAI,CAAC,EAAIqC,EAAG,CAAC,CACvB,CAUA,SAASa,GAAQR,EAAMI,EAAKR,EAAGC,EAAG,CAM9B,QALII,EAAO,EACPN,EAAK,CAAC,EAAG,CAAC,EACVW,EAAOV,EAAE,OACTrB,EAAOsB,EAAE,OACTU,EACKjD,EAAI,EAAGA,EAAIgD,EAAMhD,IACtBiD,EAAKR,EAAcK,EAAKH,CAAI,EAC5BA,EAAOM,EAAG,KACVX,EAAEtC,CAAC,EAAIsC,EAAEtC,CAAC,EAAIiD,EAAG,IAErB,IADAN,EAAO,EACF3C,EAAI,EAAGA,EAAIgD,EAAMhD,GAAK,EACvBiD,EAAKR,EAAcC,EAAMC,CAAI,EAC7BA,EAAOM,EAAG,KACVZ,EAAG,CAAC,GAAKY,EAAG,IACZA,EAAKR,EAAcC,EAAMC,CAAI,EAC7BA,EAAOM,EAAG,KACVZ,EAAG,CAAC,GAAKY,EAAG,IACZZ,EAAKD,EAAUC,EAAI,EAAGC,EAAGC,CAAC,EAC1BD,EAAEtC,CAAC,EAAIqC,EAAG,CAAC,EACXC,EAAEtC,EAAI,CAAC,EAAIqC,EAAG,CAAC,EACnB,IAAKrC,EAAI,EAAGA,EAAIiB,EAAMjB,GAAK,EACvBiD,EAAKR,EAAcC,EAAMC,CAAI,EAC7BA,EAAOM,EAAG,KACVZ,EAAG,CAAC,GAAKY,EAAG,IACZA,EAAKR,EAAcC,EAAMC,CAAI,EAC7BA,EAAOM,EAAG,KACVZ,EAAG,CAAC,GAAKY,EAAG,IACZZ,EAAKD,EAAUC,EAAI,EAAGC,EAAGC,CAAC,EAC1BA,EAAEvC,CAAC,EAAIqC,EAAG,CAAC,EACXE,EAAEvC,EAAI,CAAC,EAAIqC,EAAG,CAAC,CACvB,CAaA,SAASc,GAAO,EAAGrE,EAAMH,EAAQM,EAAUS,EAAkB,CACzD,IAAI0D,EAAQjB,EAAO,MAAM,EACrBkB,EAAOD,EAAM,OACbhE,EAGJ,GAAIT,EAAS,GAAKA,EAAS,GAEvB,GADAS,EAAM,MAAM,oCAAoCT,CAAM,EAClDM,EAAU,CACVE,EAASF,EAAS,KAAK,KAAMG,CAAG,CAAC,EACjC,MACJ,KACI,OAAMA,EAEd,GAAIN,EAAK,SAAWE,EAEhB,GADAI,EAAK,MAAM,wBAAwBN,EAAK,OAAO,OAAOE,CAAe,EACjEC,EAAU,CACVE,EAASF,EAAS,KAAK,KAAMG,CAAG,CAAC,EACjC,MACJ,KACI,OAAMA,EAEdT,EAAU,GAAKA,IAAY,EAE3B,IAAI2D,EAAGC,EAAGvC,EAAI,EAAGsD,EAGb,YACAhB,EAAI,IAAI,WAAWL,CAAM,EACzBM,EAAI,IAAI,WAAWL,CAAM,IAEzBI,EAAIL,EAAO,MAAM,EACjBM,EAAIL,EAAO,MAAM,GAGrBgB,GAAQpE,EAAM,EAAGwD,EAAGC,CAAC,EAOrB,SAASgB,IAAO,CAGZ,GAFI7D,GACAA,EAAiBM,EAAIrB,CAAM,EAC3BqB,EAAIrB,EAEJ,QADI6E,GAAQ,KAAK,IAAI,EACdxD,EAAIrB,IACPqB,EAAIA,EAAI,EACR6C,GAAK,EAAGP,EAAGC,CAAC,EACZM,GAAK/D,EAAMwD,EAAGC,CAAC,EACX,OAAK,IAAI,EAAIiB,GAAQxB,KAAzB,KAGD,CACH,IAAKhC,EAAI,EAAGA,EAAI,GAAIA,IAChB,IAAKsD,EAAI,EAAGA,EAAKD,GAAQ,EAAIC,IACzBlB,EAAUgB,EAAOE,GAAK,EAAGhB,EAAGC,CAAC,EACrC,IAAIkB,EAAM,CAAC,EACX,IAAKzD,EAAI,EAAGA,EAAIqD,EAAMrD,IAClByD,EAAI,MAAOL,EAAMpD,CAAC,GAAK,GAAM,OAAU,CAAC,EACxCyD,EAAI,MAAOL,EAAMpD,CAAC,GAAK,GAAM,OAAU,CAAC,EACxCyD,EAAI,MAAOL,EAAMpD,CAAC,GAAK,EAAK,OAAU,CAAC,EACvCyD,EAAI,MAAML,EAAMpD,CAAC,EAAI,OAAU,CAAC,EACpC,GAAIf,EAAU,CACVA,EAAS,KAAMwE,CAAG,EAClB,MACJ,KACI,QAAOA,CACf,CACIxE,GACAE,EAASoE,EAAI,CACrB,CAGA,GAAI,OAAOtE,EAAa,IACpBsE,GAAK,MAKL,SADIhE,KAEA,GAAI,OAAOA,GAAMgE,GAAK,GAAO,IACzB,OAAOhE,IAAO,CAAC,CAE/B,CAYA,SAASE,GAAMD,EAAGV,EAAMG,EAAUS,EAAkB,CAChD,IAAIN,EACJ,GAAI,OAAOI,GAAM,UAAY,OAAOV,GAAS,SAEzC,GADAM,EAAM,MAAM,qCAAqC,EAC7CH,EAAU,CACVE,EAASF,EAAS,KAAK,KAAMG,CAAG,CAAC,EACjC,MACJ,KAEI,OAAMA,EAId,IAAIsE,EAAOX,EACX,GAAIjE,EAAK,OAAO,CAAC,IAAM,KAAOA,EAAK,OAAO,CAAC,IAAM,IAE7C,GADAM,EAAM,MAAM,yBAAyBN,EAAK,UAAU,EAAE,CAAC,CAAC,EACpDG,EAAU,CACVE,EAASF,EAAS,KAAK,KAAMG,CAAG,CAAC,EACjC,MACJ,KAEI,OAAMA,EAEd,GAAIN,EAAK,OAAO,CAAC,IAAM,IACnB4E,EAAQ,KACRX,EAAS,MACR,CAED,GADAW,EAAQ5E,EAAK,OAAO,CAAC,EAChB4E,IAAU,KAAOA,IAAU,KAAOA,IAAU,KAAQ5E,EAAK,OAAO,CAAC,IAAM,IAExE,GADAM,EAAM,MAAM,0BAA0BN,EAAK,UAAU,EAAE,CAAC,CAAC,EACrDG,EAAU,CACVE,EAASF,EAAS,KAAK,KAAMG,CAAG,CAAC,EACjC,MACJ,KACI,OAAMA,EAEd2D,EAAS,CACb,CAGA,GAAIjE,EAAK,OAAOiE,EAAS,CAAC,EAAI,IAE1B,GADA3D,EAAM,MAAM,qBAAqB,EAC7BH,EAAU,CACVE,EAASF,EAAS,KAAK,KAAMG,CAAG,CAAC,EACjC,MACJ,KACI,OAAMA,EAEd,IAAIuE,EAAK,SAAS7E,EAAK,UAAUiE,EAAQA,EAAS,CAAC,EAAG,EAAE,EAAI,GACxDa,EAAK,SAAS9E,EAAK,UAAUiE,EAAS,EAAGA,EAAS,CAAC,EAAG,EAAE,EACxDpE,EAASgF,EAAKC,EACdC,EAAY/E,EAAK,UAAUiE,EAAS,EAAGA,EAAS,EAAE,EACtDvD,GAAKkE,GAAS,IAAM,KAAS,GAE7B,IAAII,EAAY1D,EAAcZ,CAAC,EAC3BuE,GAAQ/C,EAAc6C,EAAW7E,CAAe,EAQpD,SAASgF,GAAOC,GAAO,CACnB,IAAI1E,EAAM,CAAC,EACX,OAAAA,EAAI,KAAK,IAAI,EACTmE,GAAS,KACTnE,EAAI,KAAKmE,CAAK,EAClBnE,EAAI,KAAK,GAAG,EACRZ,EAAS,IACTY,EAAI,KAAK,GAAG,EAChBA,EAAI,KAAKZ,EAAO,SAAS,CAAC,EAC1BY,EAAI,KAAK,GAAG,EACZA,EAAI,KAAKR,EAAcgF,GAAOA,GAAM,MAAM,CAAC,EAC3CxE,EAAI,KAAKR,EAAckF,GAAO9B,EAAO,OAAS,EAAI,CAAC,CAAC,EAC7C5C,EAAI,KAAK,EAAE,CACtB,CAGA,GAAI,OAAON,EAAY,IACnB,OAAO+E,GAAOb,GAAOW,EAAWC,GAAOpF,CAAM,CAAC,EAI9CwE,GAAOW,EAAWC,GAAOpF,EAAQ,SAASS,GAAK6E,EAAO,CAC9C7E,GACAH,EAASG,GAAK,IAAI,EAElBH,EAAS,KAAM+E,GAAOC,CAAK,CAAC,CACpC,EAAGvE,CAAgB,CAE3B,CAUA,OAAArB,EAAO,aAAeU,EAUtBV,EAAO,aAAe2C,EAEf3C,CACX,CAAC,ICl2CD,IAAA6F,GAAAC,GAAAC,IAAA,cA2BA,IAAMC,GAAoB,uBACpBC,GAAN,MAAMC,CAAsB,CACxB,OAAO,cAAcC,EAAM,CACvB,OAAO,OAAO,UAAU,SAAS,KAAKA,CAAI,IAAMH,EACpD,CACA,OAAO,cAAcG,EAAM,CACvB,OAAI,KAAK,cAAcA,CAAI,EAChBA,EAEPA,EAAK,aAAeA,EAAK,OAAO,YAGhCA,EAAK,aAAe,GAAKA,EAAK,aAAeA,EAAK,OAAO,WAClDA,EAAK,OAET,KAAK,aAAaA,EAAK,MAAM,EAC/B,MAAMA,EAAK,WAAYA,EAAK,WAAaA,EAAK,UAAU,EACxD,MACT,CACA,OAAO,aAAaA,EAAM,CACtB,OAAO,KAAK,OAAOA,EAAM,UAAU,CACvC,CACA,OAAO,OAAOA,EAAMC,EAAM,CACtB,GAAID,EAAK,cAAgBC,EACrB,OAAOD,EAEX,GAAI,KAAK,cAAcA,CAAI,EACvB,OAAO,IAAIC,EAAKD,CAAI,EAExB,GAAI,KAAK,kBAAkBA,CAAI,EAC3B,OAAO,IAAIC,EAAKD,EAAK,OAAQA,EAAK,WAAYA,EAAK,UAAU,EAEjE,MAAM,IAAI,UAAU,sEAAsE,CAC9F,CACA,OAAO,eAAeA,EAAM,CACxB,OAAO,KAAK,kBAAkBA,CAAI,GAC3B,KAAK,cAAcA,CAAI,CAClC,CACA,OAAO,kBAAkBA,EAAM,CAC3B,OAAO,YAAY,OAAOA,CAAI,GACtBA,GAAQ,KAAK,cAAcA,EAAK,MAAM,CAClD,CACA,OAAO,QAAQE,EAAGC,EAAG,CACjB,IAAMC,EAAQL,EAAsB,aAAaG,CAAC,EAC5CG,EAAQN,EAAsB,aAAaI,CAAC,EAClD,GAAIC,EAAM,SAAWC,EAAM,WACvB,MAAO,GAEX,QAASC,EAAI,EAAGA,EAAIF,EAAM,OAAQE,IAC9B,GAAIF,EAAME,CAAC,IAAMD,EAAMC,CAAC,EACpB,MAAO,GAGf,MAAO,EACX,CACA,OAAO,UAAUC,EAAM,CACnB,IAAIC,EACA,MAAM,QAAQD,EAAK,CAAC,CAAC,GAAK,EAAEA,EAAK,CAAC,YAAa,WAG1C,MAAM,QAAQA,EAAK,CAAC,CAAC,GAAKA,EAAK,CAAC,YAAa,SAFlDC,EAAUD,EAAK,CAAC,EAMZA,EAAKA,EAAK,OAAS,CAAC,YAAa,SACjCC,EAAUD,EAAK,MAAM,EAAGA,EAAK,OAAS,CAAC,EAGvCC,EAAUD,EAGlB,IAAIE,EAAO,EACX,QAAWC,KAAUF,EACjBC,GAAQC,EAAO,WAEnB,IAAMC,EAAM,IAAI,WAAWF,CAAI,EAC3BG,EAAS,EACb,QAAWF,KAAUF,EAAS,CAC1B,IAAMK,EAAO,KAAK,aAAaH,CAAM,EACrCC,EAAI,IAAIE,EAAMD,CAAM,EACpBA,GAAUC,EAAK,MACnB,CACA,OAAIN,EAAKA,EAAK,OAAS,CAAC,YAAa,SAC1B,KAAK,OAAOI,EAAKJ,EAAKA,EAAK,OAAS,CAAC,CAAC,EAE1CI,EAAI,MACf,CACJ,EAEMG,GAAc,SACdC,GAAY,eACZC,GAAe,mEACfC,GAAkB,mBAClBC,GAAN,KAAoB,CAChB,OAAO,WAAWC,EAAM,CACpB,IAAMC,EAAI,SAAS,mBAAmBD,CAAI,CAAC,EACrCE,EAAY,IAAI,WAAWD,EAAE,MAAM,EACzC,QAASd,EAAI,EAAGA,EAAIc,EAAE,OAAQd,IAC1Be,EAAUf,CAAC,EAAIc,EAAE,WAAWd,CAAC,EAEjC,OAAOe,EAAU,MACrB,CACA,OAAO,SAASX,EAAQ,CACpB,IAAMY,EAAMxB,GAAsB,aAAaY,CAAM,EACjDa,EAAgB,GACpB,QAASjB,EAAI,EAAGA,EAAIgB,EAAI,OAAQhB,IAC5BiB,GAAiB,OAAO,aAAaD,EAAIhB,CAAC,CAAC,EAG/C,OADsB,mBAAmB,OAAOiB,CAAa,CAAC,CAElE,CACJ,EACMC,GAAN,KAAqB,CACjB,OAAO,SAASd,EAAQe,EAAe,GAAO,CAC1C,IAAMC,EAAc5B,GAAsB,cAAcY,CAAM,EACxDiB,EAAW,IAAI,SAASD,CAAW,EACrCf,EAAM,GACV,QAAS,EAAI,EAAG,EAAIe,EAAY,WAAY,GAAK,EAAG,CAChD,IAAME,EAAOD,EAAS,UAAU,EAAGF,CAAY,EAC/Cd,GAAO,OAAO,aAAaiB,CAAI,CACnC,CACA,OAAOjB,CACX,CACA,OAAO,WAAWQ,EAAMM,EAAe,GAAO,CAC1C,IAAMd,EAAM,IAAI,YAAYQ,EAAK,OAAS,CAAC,EACrCQ,EAAW,IAAI,SAAShB,CAAG,EACjC,QAASL,EAAI,EAAGA,EAAIa,EAAK,OAAQb,IAC7BqB,EAAS,UAAUrB,EAAI,EAAGa,EAAK,WAAWb,CAAC,EAAGmB,CAAY,EAE9D,OAAOd,CACX,CACJ,EACMkB,GAAN,MAAMC,CAAQ,CACV,OAAO,MAAM9B,EAAM,CACf,OAAO,OAAOA,IAASc,IAChBC,GAAU,KAAKf,CAAI,CAC9B,CACA,OAAO,SAASA,EAAM,CAClB,OAAO,OAAOA,IAASc,IAChBE,GAAa,KAAKhB,CAAI,CACjC,CACA,OAAO,YAAYA,EAAM,CACrB,OAAO,OAAOA,IAASc,IAChBG,GAAgB,KAAKjB,CAAI,CACpC,CACA,OAAO,SAASU,EAAQqB,EAAM,OAAQ,CAClC,IAAMT,EAAMxB,GAAsB,aAAaY,CAAM,EACrD,OAAQqB,EAAI,YAAY,EAAG,CACvB,IAAK,OACD,OAAO,KAAK,aAAaT,CAAG,EAChC,IAAK,SACD,OAAO,KAAK,SAASA,CAAG,EAC5B,IAAK,MACD,OAAO,KAAK,MAAMA,CAAG,EACzB,IAAK,SACD,OAAO,KAAK,SAASA,CAAG,EAC5B,IAAK,YACD,OAAO,KAAK,YAAYA,CAAG,EAC/B,IAAK,UACD,OAAOE,GAAe,SAASF,EAAK,EAAI,EAC5C,IAAK,QACL,IAAK,UACD,OAAOE,GAAe,SAASF,CAAG,EACtC,QACI,MAAM,IAAI,MAAM,6BAA6BS,CAAG,GAAG,CAC3D,CACJ,CACA,OAAO,WAAWC,EAAKD,EAAM,OAAQ,CACjC,GAAI,CAACC,EACD,OAAO,IAAI,YAAY,CAAC,EAE5B,OAAQD,EAAI,YAAY,EAAG,CACvB,IAAK,OACD,OAAO,KAAK,eAAeC,CAAG,EAClC,IAAK,SACD,OAAO,KAAK,WAAWA,CAAG,EAC9B,IAAK,MACD,OAAO,KAAK,QAAQA,CAAG,EAC3B,IAAK,SACD,OAAO,KAAK,WAAWA,CAAG,EAC9B,IAAK,YACD,OAAO,KAAK,cAAcA,CAAG,EACjC,IAAK,UACD,OAAOR,GAAe,WAAWQ,EAAK,EAAI,EAC9C,IAAK,QACL,IAAK,UACD,OAAOR,GAAe,WAAWQ,CAAG,EACxC,QACI,MAAM,IAAI,MAAM,6BAA6BD,CAAG,GAAG,CAC3D,CACJ,CACA,OAAO,SAASrB,EAAQ,CACpB,IAAMY,EAAMxB,GAAsB,aAAaY,CAAM,EACrD,GAAI,OAAO,KAAS,IAAa,CAC7B,IAAMuB,EAAS,KAAK,SAASX,EAAK,QAAQ,EAC1C,OAAO,KAAKW,CAAM,CACtB,KAEI,QAAO,OAAO,KAAKX,CAAG,EAAE,SAAS,QAAQ,CAEjD,CACA,OAAO,WAAWY,EAAQ,CACtB,IAAMC,EAAY,KAAK,aAAaD,CAAM,EAC1C,GAAI,CAACC,EACD,OAAO,IAAI,YAAY,CAAC,EAE5B,GAAI,CAACL,EAAQ,SAASK,CAAS,EAC3B,MAAM,IAAI,UAAU,6CAA6C,EAErE,OAAI,OAAO,KAAS,IACT,KAAK,WAAW,KAAKA,CAAS,CAAC,EAG/B,IAAI,WAAW,OAAO,KAAKA,EAAW,QAAQ,CAAC,EAAE,MAEhE,CACA,OAAO,cAAcC,EAAW,CAC5B,IAAMD,EAAY,KAAK,aAAaC,CAAS,EAC7C,GAAI,CAACD,EACD,OAAO,IAAI,YAAY,CAAC,EAE5B,GAAI,CAACL,EAAQ,YAAYK,CAAS,EAC9B,MAAM,IAAI,UAAU,+CAA+C,EAEvE,OAAO,KAAK,WAAW,KAAK,cAAcA,EAAU,QAAQ,MAAO,GAAG,EAAE,QAAQ,MAAO,GAAG,CAAC,CAAC,CAChG,CACA,OAAO,YAAYnC,EAAM,CACrB,OAAO,KAAK,SAASA,CAAI,EAAE,QAAQ,MAAO,GAAG,EAAE,QAAQ,MAAO,GAAG,EAAE,QAAQ,MAAO,EAAE,CACxF,CACA,OAAO,eAAemB,EAAMkB,EAAWP,EAAQ,sBAAuB,CAClE,OAAQO,EAAU,CACd,IAAK,QACD,OAAO,KAAK,WAAWlB,CAAI,EAC/B,IAAK,OACD,OAAOD,GAAc,WAAWC,CAAI,EACxC,IAAK,QACL,IAAK,UACD,OAAOK,GAAe,WAAWL,CAAI,EACzC,IAAK,UACL,IAAK,OACD,OAAOK,GAAe,WAAWL,EAAM,EAAI,EAC/C,QACI,MAAM,IAAI,MAAM,6BAA6BkB,CAAQ,GAAG,CAChE,CACJ,CACA,OAAO,aAAa3B,EAAQ2B,EAAWP,EAAQ,sBAAuB,CAClE,OAAQO,EAAU,CACd,IAAK,QACD,OAAO,KAAK,SAAS3B,CAAM,EAC/B,IAAK,OACD,OAAOQ,GAAc,SAASR,CAAM,EACxC,IAAK,QACL,IAAK,UACD,OAAOc,GAAe,SAASd,CAAM,EACzC,IAAK,UACL,IAAK,OACD,OAAOc,GAAe,SAASd,EAAQ,EAAI,EAC/C,QACI,MAAM,IAAI,MAAM,6BAA6B2B,CAAQ,GAAG,CAChE,CACJ,CACA,OAAO,WAAWlB,EAAM,CACpB,IAAMmB,EAAenB,EAAK,OACpBoB,EAAa,IAAI,WAAWD,CAAY,EAC9C,QAAShC,EAAI,EAAGA,EAAIgC,EAAchC,IAC9BiC,EAAWjC,CAAC,EAAIa,EAAK,WAAWb,CAAC,EAErC,OAAOiC,EAAW,MACtB,CACA,OAAO,SAAS7B,EAAQ,CACpB,IAAMY,EAAMxB,GAAsB,aAAaY,CAAM,EACjDC,EAAM,GACV,QAASL,EAAI,EAAGA,EAAIgB,EAAI,OAAQhB,IAC5BK,GAAO,OAAO,aAAaW,EAAIhB,CAAC,CAAC,EAErC,OAAOK,CACX,CACA,OAAO,MAAMD,EAAQ,CACjB,IAAMY,EAAMxB,GAAsB,aAAaY,CAAM,EACjD8B,EAAS,GACPC,EAAMnB,EAAI,OAChB,QAAShB,EAAI,EAAGA,EAAImC,EAAKnC,IAAK,CAC1B,IAAMoC,EAAOpB,EAAIhB,CAAC,EACdoC,EAAO,KACPF,GAAU,KAEdA,GAAUE,EAAK,SAAS,EAAE,CAC9B,CACA,OAAOF,CACX,CACA,OAAO,QAAQG,EAAW,CACtB,IAAIR,EAAY,KAAK,aAAaQ,CAAS,EAC3C,GAAI,CAACR,EACD,OAAO,IAAI,YAAY,CAAC,EAE5B,GAAI,CAACL,EAAQ,MAAMK,CAAS,EACxB,MAAM,IAAI,UAAU,yCAAyC,EAE7DA,EAAU,OAAS,IACnBA,EAAY,IAAIA,CAAS,IAE7B,IAAMxB,EAAM,IAAI,WAAWwB,EAAU,OAAS,CAAC,EAC/C,QAAS7B,EAAI,EAAGA,EAAI6B,EAAU,OAAQ7B,EAAIA,EAAI,EAAG,CAC7C,IAAMsC,EAAIT,EAAU,MAAM7B,EAAGA,EAAI,CAAC,EAClCK,EAAIL,EAAI,CAAC,EAAI,SAASsC,EAAG,EAAE,CAC/B,CACA,OAAOjC,EAAI,MACf,CACA,OAAO,cAAcD,EAAQe,EAAe,GAAO,CAC/C,OAAOD,GAAe,SAASd,EAAQe,CAAY,CACvD,CACA,OAAO,gBAAgBN,EAAMM,EAAe,GAAO,CAC/C,OAAOD,GAAe,WAAWL,EAAMM,CAAY,CACvD,CACA,OAAO,cAAcS,EAAQ,CACzB,IAAMW,EAAW,EAAKX,EAAO,OAAS,EACtC,GAAIW,EAAW,EACX,QAASvC,EAAI,EAAGA,EAAIuC,EAAUvC,IAC1B4B,GAAU,IAGlB,OAAOA,CACX,CACA,OAAO,aAAalC,EAAM,CACtB,OAAoDA,GAAK,QAAQ,aAAc,EAAE,GAAM,EAC3F,CACJ,EACA6B,GAAQ,sBAAwB,OAEhC,SAASiB,GAAOC,KAAWC,EAAS,CAChC,IAAMrC,EAAM,UAAU,CAAC,EACvB,QAASL,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACvC,IAAM2C,EAAM,UAAU3C,CAAC,EACvB,QAAW4C,KAAQD,EACftC,EAAIuC,CAAI,EAAID,EAAIC,CAAI,CAE5B,CACA,OAAOvC,CACX,CACA,SAASwC,MAAW7B,EAAK,CACrB,IAAM8B,EAAkB9B,EAAI,IAAK+B,GAASA,EAAK,UAAU,EAAE,OAAO,CAACC,EAAMC,IAAQD,EAAOC,CAAG,EACrF5C,EAAM,IAAI,WAAWyC,CAAe,EACtCI,EAAa,EACjB,OAAAlC,EAAI,IAAK+B,GAAS,IAAI,WAAWA,CAAI,CAAC,EAAE,QAASI,GAAQ,CACrD,QAAWC,KAASD,EAChB9C,EAAI6C,GAAY,EAAIE,CAE5B,CAAC,EACM/C,EAAI,MACf,CACA,SAASgD,GAAQC,EAAQC,EAAQ,CAI7B,GAHI,EAAED,GAAUC,IAGZD,EAAO,aAAeC,EAAO,WAC7B,MAAO,GAEX,IAAMC,EAAK,IAAI,WAAWF,CAAM,EAC1BG,EAAK,IAAI,WAAWF,CAAM,EAChC,QAASvD,EAAI,EAAGA,EAAIsD,EAAO,WAAYtD,IACnC,GAAIwD,EAAGxD,CAAC,IAAMyD,EAAGzD,CAAC,EACd,MAAO,GAGf,MAAO,EACX,CAEAV,GAAQ,sBAAwBE,GAChCF,GAAQ,QAAUiC,GAClBjC,GAAQ,OAASkD,GACjBlD,GAAQ,QAAUuD,GAClBvD,GAAQ,QAAU+D,4GCrYlB,GAAI,CACF,IAAMK,EACH,OAAO,OAAW,KAAe,OAAO,QAEzC,GAAQ,QAAQ,EAAE,UAEpB,GAAIA,EAAW,CACb,GAAI,CAACA,EAAU,OACb,MAAM,IAAI,MACR,oFAAoF,EAGxF,IAAMC,EACHC,GAAoCC,GACnCH,EAAU,OAAO,OAAOE,EAAWC,CAAI,EAC3CC,GAAA,eAAiB,CACf,YAAaJ,EAAU,gBAAgB,KAAKA,CAAS,EACrD,cAAe,CACb,KAAMC,EAA6B,OAAO,EAC1C,OAAQA,EAA6B,SAAS,EAC9C,OAAQA,EAA6B,SAAS,EAC9C,OAAQA,EAA6B,SAAS,QAG7C,CAGL,IAAMI,EAAa,GAAQ,QAAQ,EAC7BC,EACHJ,GAAoCC,GACnCE,EAAW,WAAWH,CAAS,EAAE,OAAOC,CAAI,EAAE,OAAM,EAAG,OAE3DC,GAAA,eAAiB,CACf,YAAaC,EAAW,eACxB,cAAe,CACb,KAAMC,EAA6B,MAAM,EACzC,OAAQA,EAA6B,QAAQ,EAC7C,OAAQA,EAA6B,QAAQ,EAC7C,OAAQA,EAA6B,QAAQ,WAI5CC,EAAG,CACV,cAAQ,MAAMA,CAAC,EACT,IAAI,MACR,gEAAgE,2GCtDpE,IAAAC,GAAA,KASaC,GAAb,MAAaC,CAAa,CAOxB,YACkBC,EAAyBD,EAAc,WAAW,IAAI,EACtDE,EAAkBF,EAAc,EAAE,OAAM,CAIxD,GALgB,KAAA,WAAAC,EACA,KAAA,EAAAC,EAEhB,KAAK,MAAQ,KAAK,WAAW,EAAE,SAAS,CAAC,EAAE,OAEvC,CAACA,EACH,MAAM,IAAI,MAAM,wBAAwB,CAE5C,GAhBFC,GAAA,cAAAJ,GAmBAA,GAAc,WAAa,CACzB,IAAK,CACH,EAAG,OACD,gFAAgF,EAElF,EAAG,OAAO,CAAC,GAEb,IAAK,CACH,EAAG,OACD,6JAA6J,EAE/J,EAAG,OAAO,CAAC,GAEb,IAAK,CACH,EAAG,OACD,0OAA0O,EAE5O,EAAG,OAAO,CAAC,GAEb,KAAM,CACJ,EAAG,OACD,uTAAuT,EAEzT,EAAG,OAAO,CAAC,GAEb,KAAM,CACJ,EAAG,OACD,idAAid,EAEnd,EAAG,OAAO,CAAC,GAEb,KAAM,CACJ,EAAG,OACD,2mBAA2mB,EAE7mB,EAAG,OAAO,CAAC,IAIfA,GAAc,EAAI,CAChB,KAAMD,GAAA,eAAe,cAAc,KACnC,OAAQA,GAAA,eAAe,cAAc,OACrC,OAAQA,GAAA,eAAe,cAAc,OACrC,OAAQA,GAAA,eAAe,cAAc,6nBCrEvC,IAAAM,GAAA,KAEMC,GAAe,OAAO,CAAC,EACvBC,GAAc,OAAO,CAAC,EACtBC,GAAc,OAAO,CAAC,EAEfC,GAAuBC,GAA0B,CAC5D,IAAMC,EAAMD,EAAE,SAAS,EAAE,EACnBE,EAAc,IAAI,YAAY,KAAK,KAAKD,EAAI,OAAS,CAAC,CAAC,EACvDE,EAAK,IAAI,WAAWD,CAAW,EACjCE,EAAS,EAETH,EAAI,OAAS,IAAM,IACrBE,EAAG,CAAC,EAAI,SAASF,EAAI,CAAC,EAAG,EAAE,EAC3BG,EAAS,GAEX,QAASC,EAAI,EAAGA,EAAIH,EAAY,WAAYG,IAC1CF,EAAGE,EAAID,CAAM,EAAI,SACfH,EAAI,MAAM,EAAII,EAAID,EAAQ,EAAIC,EAAI,EAAID,CAAM,EAC5C,EAAE,EAGN,OAAOF,CACT,EAjBaI,EAAA,oBAAmBP,GAmBzB,IAAMQ,GAAuBL,GAAoC,CACtE,IAAMD,EAAgB,CAAA,EAEtB,WAAI,WAAWC,CAAW,EAAE,QAASG,GAAK,CACxCJ,EAAI,MAAM,IAAMI,EAAE,SAAS,EAAE,GAAG,MAAM,EAAE,CAAC,CAC3C,CAAC,EACM,OAAO,KAAKJ,EAAI,KAAK,EAAE,CAAC,EAAE,CACnC,EAPaK,EAAA,oBAAmBC,GAahC,SAAgBC,GAAoBC,EAAW,CAC7C,OAAO,IAAI,YAAW,EAAG,OAAOA,CAAG,EAAE,MACvC,CAFAH,EAAA,oBAAAE,GAWO,IAAME,GAAsB,CACjCR,EACAS,IACe,CACf,IAAMR,EAAK,IAAI,WAAWD,CAAW,EACrC,GAAIC,EAAG,OAASQ,EAAc,CAC5B,IAAMC,EAAM,IAAI,WAAWD,CAAY,EACvC,OAAAC,EAAI,KAAK,EAAG,EAAGD,EAAeR,EAAG,MAAM,EACvCS,EAAI,IAAIT,EAAIQ,EAAeR,EAAG,MAAM,EAC7BS,EAET,OAAOT,CACT,EAZaG,EAAA,oBAAmBI,GAchC,SAAgBG,GACdC,KACGC,EAAqB,CAExB,IAAMC,EAASD,EAAO,OAAO,CAACE,EAAGC,IAAMD,EAAIC,EAAE,WAAY,CAAC,EACpDC,EAAS,IAAI,WAAWH,CAAM,EACpC,QAASZ,EAAS,EAAGC,EAAI,EAAGA,EAAIU,EAAO,OAAQV,IAC7Cc,EAAO,IAAI,IAAI,WAAWJ,EAAOV,CAAC,CAAC,EAAGD,CAAM,EAC5CA,GAAUW,EAAOV,CAAC,EAAE,WAEtB,OAAOS,EAAW,EAAEK,CAAM,CAC5B,CAXAb,EAAA,KAAAO,GAaA,SAAgBO,GACdN,EACAO,KACGN,EAAqB,CAExB,IAAMO,EAAeP,EAAO,IAAKb,GAC/BI,EAAA,oBAAoBJ,EAAamB,CAAS,CAAC,EAE7C,OAAOR,GAAKC,EAAY,GAAGQ,CAAY,CACzC,CATAhB,EAAA,WAAAc,GAgBA,SAAgBG,GAAqBC,EAAyB,GAAE,CAC9D,IAAMrB,EAAK,IAAI,WAAW,KAAK,KAAK,KAAK,KAAKqB,EAAiB,CAAC,CAAC,CAAC,EAClE,OAAA7B,GAAA,eAAe,YAAYQ,CAAE,EACtBA,EACJ,OAAO,CAACM,EAAKJ,IAAK,CACjB,IAAMJ,EAAMI,EAAE,SAAS,EAAE,EAAE,SAAQ,EACnC,OAAIJ,EAAI,SAAW,EACVQ,EAAM,IAAMR,EAEdQ,EAAMR,CACf,EAAG,EAAE,EACJ,MAAM,EAAGuB,CAAc,CAC5B,CAZAlB,EAAA,qBAAAiB,GAcA,SAAgBE,GAAqBC,EAAmB,GAAE,CACxD,OAAOpB,EAAA,oBAAoBqB,GAAeD,CAAQ,CAAC,CACrD,CAFApB,EAAA,qBAAAmB,GAIA,SAAsBG,GACpBC,EACAC,EACAC,EACAC,EAAS,0CAET,GAAI,CAACF,GAAK,CAACA,EAAE,KAAI,EACf,MAAM,IAAI,MAAM,yCAAyC,EAG3D,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,4BAA4B,EAG9C,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,+BAA+B,EAGjD,IAAMC,EAAI,MAAMJ,EAAS,SAASC,EAAGC,EAAGC,CAAC,EAEzC,OAAOH,EAAS,gBAAgBI,CAAC,CACnC,CAAC,EArBD3B,EAAA,eAAAsB,GA4BA,SAAsBM,GACpBL,EACAC,EACAE,EACAG,EAAe,0CAEf,IAAMJ,EAAI,MAAMF,EAAS,mBAAmBM,CAAM,EAElD,MAAO,CACL,EAAAJ,EACA,EAAG,MAAMH,GAAeC,EAAUC,EAAGC,EAAGC,CAAC,EAE7C,CAAC,EAZD1B,EAAA,sBAAA4B,GAcO,IAAME,GACXtB,GACmBuB,GAAA,OAAA,OAAA,OAAA,WAAA,CACnB,OAAC,MAAMxB,GAAKC,EAAYR,EAAA,oBAAoB,OAAO,CAAC,CAAC,CAAC,GAAG,WAAa,CAAC,CAAA,EAH5DA,EAAA,aAAY8B,GAWzB,SAAgBE,GAAOL,EAAWM,EAAaC,EAAW,CACxD,IAAIC,EAAiB5C,GACrB,KAAO0C,EAAM3C,IACP2C,EAAMzC,IAAOD,IACf4C,EAAUR,EAAIQ,EAAUD,EACxBD,GAAO1C,KAEPoC,EAAKA,EAAIA,EAAKO,EACdD,GAAOzC,IAGX,OAAO2C,CACT,CAZAnC,EAAA,OAAAgC,GAcA,IAAMX,GAAkBD,GAAiC,CACvD,IAAMvB,EAAK,IAAI,WAAWuB,CAAQ,EAClC,OAAA/B,GAAA,eAAe,YAAYQ,CAAE,EACtBA,EAAG,MACZ,+aCtLA,IAAAuC,EAAA,KAoBaC,GAAb,KAAwB,CACtB,YAA4BC,EAAyB,CAAzB,KAAA,WAAAA,CAA4B,CAEjD,QAAQC,EAAiB,CAC9B,OAAOH,EAAA,KAAK,KAAK,WAAY,GAAGG,CAAE,CACpC,CAEO,cAAcA,EAAiB,CACpC,IAAMC,EAAe,KAAK,OAAO,KAAK,WAAW,MAAQ,GAAK,CAAC,EAC/D,OAAOJ,EAAA,WAAW,KAAK,WAAYI,EAAc,GAAGD,CAAE,CACxD,CAEa,UAAQ,0CACnB,OAAOH,EAAA,oBACL,MAAM,KAAK,WACTA,EAAA,oBAAoB,KAAK,WAAW,WAAW,CAAC,EAChDA,EAAA,oBAAoB,KAAK,WAAW,WAAW,CAAC,CAAC,CAClD,CAEL,CAAC,EAEY,mBAAmBK,EAAiB,0CAC/C,IAAMC,EAAQ,MAAMN,EAAA,aAAa,KAAK,UAAU,EAG1CO,EAAYF,GAAa,EAAIC,EAAS,EAC5C,OAAON,EAAA,qBAAqBO,CAAS,CACvC,CAAC,EAEY,SAASC,EAAWC,EAAWC,EAAS,0CACnD,OAAOV,EAAA,oBACL,MAAM,KAAK,KACTA,EAAA,oBAAoBS,CAAC,EACrB,MAAM,KAAK,oBAAoBD,EAAGE,CAAC,CAAC,CACrC,CAEL,CAAC,EAEY,cACXD,EACAE,EAAyB,0CAEzB,OAAOX,EAAA,oBACL,MAAM,KAAK,KAAKA,EAAA,oBAAoBS,CAAC,EAAGE,CAAY,CAAC,CAEzD,CAAC,EAEY,oBAAoBC,EAAWF,EAAS,0CACnD,OAAO,MAAM,KAAK,KAAKV,EAAA,oBAAoBU,CAAC,CAAC,CAC/C,CAAC,EAEM,gBAAgBG,EAAS,CAC9B,OAAOb,EAAA,OACL,KAAK,WAAW,WAAW,EAC3Ba,EACA,KAAK,WAAW,WAAW,CAAC,CAEhC,CAEO,sBAAoB,CACzB,IAAMC,EAAU,KAAK,IAAI,IAAK,KAAK,WAAW,KAAK,EAC/CC,EAEJ,GACEA,EAAKf,EAAA,qBAAqBc,EAAU,CAAC,EAAI,KAAK,WAAW,WAAW,QAC7DC,IAAO,OAAO,CAAC,GAExB,OAAOA,CACT,CAEO,yBAAyBC,EAAS,CACvC,OAAOhB,EAAA,OACL,KAAK,WAAW,WAAW,EAC3BgB,EACA,KAAK,WAAW,WAAW,CAAC,CAEhC,CAEO,mBAAmBC,EAAa,CACrC,OAAOA,EAAQ,KAAK,WAAW,WAAW,IAAM,OAAO,CAAC,CAC1D,CAEa,SAASC,EAAWC,EAAS,0CACxC,OAAOnB,EAAA,oBACL,MAAM,KAAK,WAAWA,EAAA,oBAAoBkB,CAAC,EAAGlB,EAAA,oBAAoBmB,CAAC,CAAC,CAAC,CAEzE,CAAC,EAEY,sBACXC,EACAC,EACAH,EACAC,EACAG,EAAS,0CAET,OAAOtB,EAAA,oBACL,MAAM,KAAK,KACTA,EAAA,oBAAoBkB,CAAC,EACrBlB,EAAA,oBAAoBmB,CAAC,EACrBnB,EAAA,oBAAoBsB,CAAC,CAAC,CACvB,CAEL,CAAC,EAEY,sBACXJ,EACAK,EACAD,EAAS,0CAET,OAAOtB,EAAA,oBACL,MAAM,KAAK,KACTA,EAAA,oBAAoBkB,CAAC,EACrBlB,EAAA,oBAAoBuB,CAAE,EACtBvB,EAAA,oBAAoBsB,CAAC,CAAC,CACvB,CAEL,CAAC,EAEM,wBACLE,EACAX,EACAY,EACAT,EACAG,EAAS,CAET,IAAMO,EAAI,KAAK,WAAW,WAAW,EAC/BC,EAAMF,EAAIZ,EAAIG,EACdY,EAAO5B,EAAA,OAAO,KAAK,WAAW,WAAW,EAAGa,EAAGa,CAAC,EAAIF,EAAKE,EAE/D,OAAO1B,EAAA,OAAOmB,EAAIO,EAAIE,EAAKD,EAAKD,CAAC,CACnC,GAlIFG,GAAA,YAAA5B,ueCjBA,IAAa6B,GAAb,KAA6B,CAC3B,YAA6BC,EAAqB,CAArB,KAAA,SAAAA,CAAwB,CACxC,MAIXC,EAIAC,EAAoB,0CAEpB,GAAI,CAACD,GAAU,CAACA,EAAO,KAAI,EACzB,MAAM,IAAI,MAAM,0CAA0C,EAE5D,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,gCAAgC,EAGlD,IAAMC,EAAK,MAAM,KAAK,SAAS,oBAAoBF,EAAQC,CAAY,EACvE,OAAO,IAAIE,GAAsB,KAAK,SAAUH,EAAQE,CAAE,CAC5D,CAAC,IArBHE,GAAA,iBAAAN,GA6BA,IAAaK,GAAb,MAAaE,CAAqB,CAChC,YACmBN,EAIAO,EAIDJ,EAAe,CARd,KAAA,SAAAH,EAIA,KAAA,EAAAO,EAID,KAAA,GAAAJ,CACf,CAEU,MAIXK,EAIAC,EAAS,0CAET,GAAI,CAACD,EACH,MAAM,IAAI,MAAM,2BAA2B,EAG7C,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,0CAA0C,EAG5D,IAAMC,EAAI,MAAM,KAAK,SAAS,cAAcF,EAAM,KAAK,EAAE,EACnDG,EAAI,KAAK,SAAS,qBAAoB,EACtCC,EAAI,KAAK,SAAS,yBAAyBD,CAAC,EAC5CE,EAAI,MAAM,KAAK,SAAS,SAAQ,EAChCC,EAAI,MAAM,KAAK,SAAS,SAASF,EAAGH,CAAC,EACrCM,EAAI,KAAK,SAAS,wBAAwBF,EAAGH,EAAGI,EAAGH,EAAGF,CAAC,EACvDO,EAAK,MAAM,KAAK,SAAS,sBAAsB,KAAK,EAAGR,EAAMI,EAAGH,EAAGM,CAAC,EAE1E,OAAO,IAAIE,GAAsB,KAAK,SAAUL,EAAGI,EAAID,CAAC,CAC1D,CAAC,EAEM,QAAM,CACX,MAAO,CAAE,EAAG,KAAK,EAAG,GAAI,MAAM,KAAK,IAAI,WAAW,KAAK,EAAE,CAAC,CAAC,CAC7D,CAEO,OAAO,UACZf,EACAkB,EAAiC,CAEjC,OAAO,IAAIZ,EACTN,EACAkB,EAAM,EACN,IAAI,WAAWA,EAAM,EAAE,EAAE,MAAM,CAEnC,GAvDFb,GAAA,sBAAAD,GAgEA,IAAaa,GAAb,MAAaE,CAAqB,CAChC,YACmBnB,EAIDY,EAIAI,EAIAD,EAAS,CAZR,KAAA,SAAAf,EAID,KAAA,EAAAY,EAIA,KAAA,GAAAI,EAIA,KAAA,EAAAD,CACf,CAEU,MAAMK,EAAU,0CAC3B,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,uCAAuC,EASzD,IANmB,MAAM,KAAK,SAAS,sBACrC,KAAK,EACL,KAAK,GACL,KAAK,CAAC,KAGWA,EACjB,MAAM,IAAI,MAAM,wBAAwB,CAE5C,CAAC,EAEM,QAAM,CACX,MAAO,CACL,EAAG,KAAK,EAAE,SAAS,EAAE,EACrB,GAAI,KAAK,GAAG,SAAS,EAAE,EACvB,EAAG,KAAK,EAAE,SAAS,EAAE,EAEzB,CAEO,OAAO,UACZpB,EACAkB,EAAiC,CAEjC,OAAO,IAAIC,EACTnB,EACA,OAAO,KAAOkB,EAAM,CAAC,EACrB,OAAO,KAAOA,EAAM,EAAE,EACtB,OAAO,KAAOA,EAAM,CAAC,CAAC,CAE1B,GAnDFb,GAAA,sBAAAY,8cC/FA,IAAAI,GAAA,KAIaC,GAAb,KAA6B,CAC3B,YAA6BC,EAAqB,CAArB,KAAA,SAAAA,CAAwB,CAExC,MAIXC,EAIAC,EAIAC,EAAgB,0CAEhB,IAAMC,EAAI,KAAK,SAAS,qBAAoB,EACtCC,EAAI,MAAM,KAAK,SAAS,SAAQ,EAChCC,EAAIC,GACR,KAAK,SAAS,WACdF,EACAF,EACAC,CAAC,EAEH,OAAO,IAAII,GACT,KAAK,SACLP,EACAC,EACAC,EACAC,EACAE,CAAC,CAEL,CAAC,IAjCHG,GAAA,iBAAAV,GA4CA,IAAaS,GAAb,MAAaE,CAAqB,CAChC,YACkBV,EAICC,EAIAC,EAIAC,EAIAC,EAIDE,EAAS,CApBT,KAAA,SAAAN,EAIC,KAAA,WAAAC,EAIA,KAAA,KAAAC,EAIA,KAAA,SAAAC,EAIA,KAAA,EAAAC,EAID,KAAA,EAAAE,CACf,CAKU,WAIXK,EAAS,0CAET,GAAIA,IAAM,KACR,MAAM,IAAI,MAAM,0CAA0C,EAG5D,GAAI,CAAC,KAAK,SAAS,mBAAmBA,CAAC,EACrC,MAAM,IAAI,MAAM,oCAAoCA,EAAE,SAAS,EAAE,CAAC,EAAE,EAGtE,IAAMC,EAAI,MAAM,KAAK,SAAS,SAASD,EAAG,KAAK,CAAC,EAQhD,OAPUE,GACR,KAAK,SAAS,WAAW,WAAW,EACpC,KAAK,SACLD,EACAD,EACA,KAAK,CAAC,CAGV,CAAC,EAEY,MAIXA,EAIAG,EAAU,0CAEV,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,uCAAuC,EAGzD,IAAMC,EAAI,MAAM,KAAK,WAAWJ,CAAC,EAUjC,IARmB,MAAM,KAAK,SAAS,sBACrC,KAAK,WACL,KAAK,KACLA,EACA,KAAK,EACLI,CAAC,KAGgBD,EACjB,MAAM,IAAI,MAAM,wBAAwB,EAK1C,OAFW,KAAK,SAAS,sBAAsBH,EAAGG,EAAIC,CAAC,CAGzD,CAAC,EAEM,QAAM,CACX,MAAO,CACL,WAAY,KAAK,WACjB,KAAM,KAAK,KAAK,SAAS,EAAE,EAC3B,SAAU,KAAK,SAAS,SAAS,EAAE,EACnC,EAAG,KAAK,EAAE,SAAS,EAAE,EACrB,EAAG,KAAK,EAAE,SAAS,EAAE,EAEzB,CAEO,OAAO,UACZf,EACAgB,EAAiC,CAEjC,OAAO,IAAIN,EACTV,EACAgB,EAAM,WACN,OAAO,KAAOA,EAAM,IAAI,EACxB,OAAO,KAAOA,EAAM,QAAQ,EAC5B,OAAO,KAAOA,EAAM,CAAC,EACrB,OAAO,KAAOA,EAAM,CAAC,CAAC,CAE1B,GA5GFP,GAAA,sBAAAD,GA+GA,IAAMD,GAA2B,CAC/BU,EACAZ,EACAa,EACAd,KAGGN,GAAA,OAAOmB,EAAW,WAAW,EAAGb,EAAGa,EAAW,WAAW,CAAC,EAAIC,EAAIb,GACnEY,EAAW,WAAW,EAIpBJ,GAA0B,CAC9BM,EACAD,EACAN,EACAD,EACAP,IAEON,GAAA,OAAOA,GAAA,OAAOoB,EAAGN,EAAGO,CAAC,EAAIR,EAAGP,EAAGe,CAAC,8TCpLzC,IAAAC,GAAA,KAAS,OAAA,eAAAC,EAAA,gBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAD,GAAA,aAAa,CAAA,CAAA,EACtB,IAAAE,GAAA,KAAS,OAAA,eAAAD,EAAA,cAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAC,GAAA,WAAW,CAAA,CAAA,EACpB,IAAAC,GAAA,KACE,OAAA,eAAAF,EAAA,mBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAE,GAAA,gBAAgB,CAAA,CAAA,EAChB,OAAA,eAAAF,EAAA,wBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAE,GAAA,qBAAqB,CAAA,CAAA,EAErB,OAAA,eAAAF,EAAA,wBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAE,GAAA,qBAAqB,CAAA,CAAA,EAGvB,IAAAC,GAAA,KACE,OAAA,eAAAH,EAAA,mBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAG,GAAA,gBAAgB,CAAA,CAAA,EAChB,OAAA,eAAAH,EAAA,wBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAG,GAAA,qBAAqB,CAAA,CAAA,EAGvB,IAAAC,GAAA,KACE,OAAA,eAAAJ,EAAA,wBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAI,GAAA,qBAAqB,CAAA,CAAA,EAErB,OAAA,eAAAJ,EAAA,sBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAI,GAAA,mBAAmB,CAAA,CAAA,EACnB,OAAA,eAAAJ,EAAA,sBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAI,GAAA,mBAAmB,CAAA,CAAA,EACnB,OAAA,eAAAJ,EAAA,uBAAA,CAAA,WAAA,GAAA,IAAA,UAAA,CAAA,OAAAI,GAAA,oBAAoB,CAAA,CAAA,ICZtB,IAAMC,GAAU,SAAS,cAAc,UAAU,EAE3CC,GAA4B,CAAC,EAG7BC,IAAoB,IAAM,CAC9B,GAAI,CACF,GAAI,OAAO,kBAAkB,SAAgB,MAAO,EACtD,MAAY,CAAmB,CAC/B,MAAO,EACT,GAAG,EACEA,IAAkBD,GAAgB,KAAK,qFAAqF,EAGjI,IAAME,IAAiB,IAAM,CAC3B,GAAI,CACF,GAAI,OAAO,qBAAqB,WAAY,MAAO,EACrD,MAAY,CAAmB,CAC/B,MAAO,EACT,GAAG,EACEA,IAAeF,GAAgB,KAAK,kFAAkF,EAG3H,IAAMG,IAA2B,IAAM,CACrC,GAAI,CACF,GAAI,OAAO,OAAO,2BAA2B,SAAU,MAAO,EAChE,MAAY,CAAmB,CAC/B,MAAO,EACT,GAAG,EACEA,IAAyBH,GAAgB,KAAK,mJAAmJ,EAGtM,IAAMI,IAA2B,IAAM,CACrC,GAAI,CACF,GAAI,OAAO,OAAO,OAAO,uBAAuB,SAAU,MAAO,EACnE,MAAY,CAAmB,CAC/B,MAAO,EACT,GAAG,EACEA,IAAyBJ,GAAgB,KAAK,uMAAuM,EAE1P,GAAIA,GAAgB,OAAQ,CAC1BD,GAAQ,UAAU,IAAI,QAAQ,EAE9B,IAAMM,EAAUN,GAAQ,cAAc,UAAU,EAChDC,GAAgB,QAASM,GAAS,CAChC,IAAMC,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,YAAcD,EAChBD,EAAQ,YAAYE,CAAC,CACvB,CAAC,CACH,CC9CA,IAAMC,GAAS,SAAS,cAA2B,SAAS,EAMtDC,GAAQC,GAAgB,CACxBF,IAAUE,GAAO,GAAKA,GAAO,MAAKF,GAAO,MAAM,MAAQ,GAAGE,CAAG,KAC7DA,IAAQ,EAAGF,IAAQ,UAAU,OAAO,SAAS,EAC5CA,IAAQ,UAAU,IAAI,SAAS,CACtC,EAEOG,EAAQF,GCbf,IAAMG,GAAe,SAAS,cAAc,QAAQ,EAC9CC,GAAUD,GAAa,cAAc,UAAU,EAE/CE,EAAeC,GAAmB,CACtC,IAAIC,EACED,aAAiB,MAClBC,EAAMD,EADoBC,EAAM,IAAI,MAAM,OAAOD,CAAK,CAAC,EAE5DH,GAAa,UAAU,IAAI,QAAQ,EACnCC,GAAQ,YAAcG,EAAI,QAC1BC,EAAK,GAAG,CACV,EAEMC,GAAa,IAAM,CACvBL,GAAQ,YAAc,GACtBD,GAAa,UAAU,OAAO,QAAQ,CACxC,ECjBA,IAAAO,GAAwB,SAEnBC,QAEHA,IAAA,QAAU,GAAV,UACAA,IAAA,QAAU,IAAV,UACAA,IAAA,OAAS,IAAT,SACAA,IAAA,QAAU,IAAV,UACAA,IAAA,KAAO,IAAP,OACAA,IAAA,KAAO,IAAP,OACAA,IAAA,IAAM,IAAN,MAGAA,IAAA,WAAa,MAAb,aACAA,IAAA,qBAAuB,MAAvB,uBAGAA,IAAA,OAAS,GAAT,SACAA,IAAA,MAAQ,GAAR,QACAA,IAAA,YAAc,IAAd,cACAA,IAAA,OAAS,IAAT,SACAA,IAAA,aAAe,KAAf,eACAA,IAAA,SAAU,KAAV,QApBGA,QAAA,IA8BCC,EAAS,CAACC,EAAsBC,IAA4B,CAChE,IAAMC,EAAQ,IAAI,WAAWF,CAAO,EAEpC,GAAIC,IAAU,GACZ,OAAO,KAAKC,EAAM,OAAO,CAACC,EAAKC,IAASD,EAAM,OAAO,aAAaC,CAAI,EAAG,EAAE,CAAC,EAG9E,GAAIH,IAAU,IACZ,OAAc,gBAAaC,EAAOA,EAAM,MAAM,EAGhD,GAAID,IAAU,IAAmB,OAAQ,IAAI,YAAY,EAAG,OAAOD,CAAO,EAE1E,IAAIK,EAAkB,EAItB,GAHIJ,IAAU,IAAiBI,EAAU,GACrCJ,IAAU,IAAgBI,EAAU,GACpCJ,IAAU,KAAsBI,EAAU,GAC1C,CAACA,EAAS,MAAM,IAAI,MAAM,SAASJ,CAAK,mBAAmB,EAE/D,OAAOC,EAAM,OAAe,CAACC,EAAKC,IAASD,EAAMC,EAAK,SAASH,CAAK,EAAE,SAASI,EAAS,GAAG,EAAG,EAAE,CAClG,EASMC,EAAS,CAACC,EAAqBN,IAAiC,CACpE,IAAIC,EAEJ,GAAID,IAAU,GAIZ,OAAAC,EAAQ,IAAI,WAAW,CAAC,EAGxBA,EAAM,CAAC,EAAI,OAAO,KAAK,MAAMK,CAAW,CAAC,EAClCL,EAAM,OAGf,GAAID,IAAU,GAAiB,CAC7B,IAAME,EAAM,KAAKI,CAAW,EAC5BL,EAAQ,IAAI,WAAWC,EAAI,MAAM,EACjC,QAAS,EAAI,EAAG,EAAIA,EAAI,OAAQ,GAAK,EACnCD,EAAM,CAAC,EAAIC,EAAI,WAAW,CAAC,EAE7B,OAAOD,EAAM,MACf,CAEA,GAAID,IAAU,IAAuB,CACnC,IAAMO,EAAa,gBAAaD,EAAa,GAAQ,EACrD,OAAO,WAAW,KAAKC,CAAG,EAAE,MAC9B,CAEA,GAAIP,IAAU,GAAiB,CAE7B,IAAIQ,EAAM,OAAOF,CAAW,EACtBG,EAAQ,CAAC,EACf,KAAOD,EAAM,GAEXC,EAAM,KAAK,OAAOD,EAAM,KAAK,CAAC,EAE9BA,IAAQ,GAEV,OAAO,WAAW,KAAKC,EAAM,QAAQ,CAAC,EAAE,MAC1C,CAEA,GAAIT,IAAU,GAAe,CAC3B,IAAMU,EAAOJ,EAAY,QAAQ,KAAM,EAAE,EACzC,OAAAL,EAAQ,IAAI,WAAWS,EAAK,OAAS,CAAC,EACtCA,EAAK,MAAM,SAAS,GAAG,QAAQ,CAACP,EAAMQ,IAAM,CAAEV,EAAMU,CAAC,EAAI,SAASR,EAAM,EAAE,CAAG,CAAC,EACvEF,EAAM,MACf,CAEA,GAAID,IAAU,IAAmB,OAAQ,IAAI,YAAY,EAAG,OAAOM,CAAW,EAE9E,IAAIM,EAAoB,EAIxB,GAHIZ,IAAU,IAAiBY,EAAY,GACvCZ,IAAU,IAAgBY,EAAY,GACtCZ,IAAU,KAAsBY,EAAY,GAC5C,CAACA,EAAW,MAAM,IAAI,MAAM,SAASZ,CAAK,mBAAmB,EAEjE,IAAMa,EAASP,EAAY,OAASM,EACpC,OAAAX,EAAQ,IAAI,WAAWY,CAAM,EAE7BP,EAAY,MAAM,IAAI,OAAO,OAAOM,CAAS,IAAK,GAAG,CAAC,GAClD,QAAQ,CAACT,EAAM,IAAM,CAAEF,EAAM,CAAC,EAAI,SAASE,EAAMH,CAAK,CAAG,CAAC,EAEvDC,EAAM,MACf,EAQMa,GAAiBR,GAAkC,CAEvD,GAAIA,EAAY,YAAY,IAAM,QAAUA,EAAY,YAAY,IAAM,QAAS,MAAO,GAE1F,GAAI,yEAAyE,KAAKA,CAAW,EAAG,MAAO,GACvG,GAAI,eAAe,KAAKA,CAAW,EAAG,MAAO,GAC7C,GAAI,gBAAgB,KAAKA,CAAW,EAAG,MAAO,GAC9C,GAAI,oCAAoC,KAAKA,CAAW,EAAG,MAAO,IAClE,GAAI,yDAAyD,KAAKA,CAAW,EAAG,MAAO,IACvF,GAAI,sHAAsH,KAAKA,CAAW,EAAG,MAAO,GAGpJ,GAAI,mBAAmB,KAAKA,CAAW,EAAG,MAAO,KAGjD,GAAI,IAAI,KAAKA,CAAW,EACtB,GAAI,CACF,YAAK,MAAMA,CAAW,EACf,EACT,MAAY,CAAmB,CAYjC,MAAI,uJAAuJ,KAAKA,CAAW,EAClK,KAKL,sCAAsC,KAAKA,CAAW,EAAU,KAE7D,CACT,ECzKA,IAAMS,GAAc,sHACdC,GAAW,42BACXC,GAAW,sRACXC,GAAW,ojBACXC,GAAW,iTACXC,GAAqB,qLACrBC,GAAsB,u4BACtBC,GAAe,+eACfC,GAAU,gkBACVC,GAAW,ozCACXC,GAAqB,wbACrBC,GAAoB,4RACpBC,GAAY,ojBACZC,GAAW,wRACXC,GAAY,kbCHlB,IAAMC,GAAgB,SAAS,cAA2B,UAAU,EAQ9DC,GAAgB,CACpBC,EACAC,EACAC,IACG,SAAY,CACf,IAAIC,EACAC,EAAMF,IAAc,KAAO,GAAMA,GAAa,MAElD,GAAI,OAAOF,GAAS,UAGlB,GAFAG,EAAS,IAAI,YAAY,EAAG,OAAOH,CAAI,EAEnC,CAACE,EAEH,OADiBG,GAAcL,CAAI,EACjB,CAChB,OAAoBI,EAAM,OAAQ,MAClC,OAAmBA,EAAM,MAAO,MAChC,QAASA,EAAM,KACjB,OAEGD,EAAQH,EAEf,IAAMM,EAAO,IAAI,KAAK,CAACH,CAAK,EAAG,CAAE,KAAM,0BAA2B,CAAC,EAC7DI,EAAM,OAAO,IAAI,gBAAgBD,CAAI,EAErC,EAAI,SAAS,cAAc,GAAG,EACpC,EAAE,KAAOC,EACT,IAAMC,EAASJ,EAAM,IAAIA,CAAG,GAAK,GACjC,EAAE,SAAWH,EAAW,GAAGA,CAAQ,GAAGO,CAAM,GAAK,qBAAqBA,CAAM,GAC5E,SAAS,KAAK,YAAY,CAAC,EAC3B,EAAE,MAAM,EAGR,SAAS,KAAK,YAAY,CAAC,EAC3B,OAAO,IAAI,gBAAgBD,CAAG,CAChC,EAsBME,GAAqB,CAAC,CAC1B,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,EAAW,QAAAC,EAAS,SAAAb,EAAU,UAAAC,CACxD,IAAuB,CACrB,IAAMa,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,UAAU,IAAI,QAAQ,EAEhC,IAAMC,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,YAAcN,EACjBK,EAAU,YAAYC,CAAE,EAExB,IAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAU,IAAI,SAAS,EAC/BA,EAAQ,YAAc,GAAGN,EAAM,UAAU,EAAG,GAAI,CAAC,GAAGA,EAAM,OAAS,IAAO,SAAM,EAAE,GAClFI,EAAU,YAAYE,CAAO,EAE7B,IAAMC,EAAQ,SAAS,cAAc,KAAK,EAC1CA,EAAM,UAAU,IAAI,OAAO,EAE3B,IAAMC,EAAa,CAAC,CAClB,KAAMC,GACN,QAAS,mBACT,UAAW,GAAGT,EAAM,OAAO,eAAe,CAAC,aAC7C,EAAG,CACD,KAAMU,GACN,QAAS,gBACT,UAAW,GAAGR,EAAU,eAAe,CAAC,OAC1C,CAAC,EAEKS,EAAoBV,EAAW,GAAK,OAAOE,GAAY,SAEvDS,EAAc,CAAC,CACnB,QAAS,gBACT,aAAc,cACd,KAAMC,GACN,SAAUzB,GAAcY,EAAOV,EAAUqB,EAAoB,GAAGG,GAASb,CAAQ,EAAE,kBAAkB,CAAC,OAASV,CAAS,CAC1H,EAAG,CACD,QAAS,OACT,aAAc,UACd,KAAMwB,GACN,SAAU,IAAM,UAAU,UAAU,UAAUf,CAAK,CACrD,CAAC,EAGD,GAAIW,EAAmB,CAErBC,EAAY,QAAQ,CAClB,QAAS,oBACT,aAAc,cACd,KAAMI,GACN,SAAU5B,GAAce,EAASb,EAAUC,CAAS,CACtD,CAAC,EAGD,IAAM0B,EAAY,SAAS,cAAc,OAAO,EAC1CC,EAAa,SAAS,cAAc,MAAM,EAChDD,EAAU,UAAU,IAAI,SAAS,EACjCC,EAAW,UAAU,IAAI,OAAO,EAChCA,EAAW,YAAc,WACzBD,EAAU,UAAYE,GACtBF,EAAU,aAAaC,EAAYD,EAAU,UAAU,EAEvD,IAAMG,EAAS,SAAS,cAAc,QAAQ,EAI9CA,EAAO,iBAAiB,SAAU,IAAM,CACtC,IAAMC,EAAQ,OAAOD,EAAO,gBAAgB,CAAC,EAAE,KAAK,EAEpD,GAAI,CACF,IAAME,EAAWC,EAAOpB,EAASkB,CAAK,EAChCG,EAAS1B,GAAmB,CAChC,MAAAC,EAAO,MAAOuB,EAAU,SAAUD,EAAO,UAAAnB,EAAW,QAAAC,EAAS,SAAAb,EAAU,UAAAC,CACzE,CAAC,EACDa,EAAU,YAAYoB,CAAM,CAC9B,OAASC,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAChC,CAAC,EAED,OAAO,QAAQX,EAAQ,EAAE,QAAQ,CAAC,CAACa,EAAcN,CAAK,IAAM,CAC1D,GAAI,OAAOA,GAAU,UAAYA,EAAQ,EAAG,CAC1C,IAAMO,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,YAAcD,EAAa,YAAY,EAC9CC,EAAO,MAAQ,OAAOP,CAAK,EACvBA,IAAUpB,IAAU2B,EAAO,SAAW,IAC1CR,EAAO,YAAYQ,CAAM,CAC3B,CACF,CAAC,EAEDX,EAAU,YAAYG,CAAM,EAG5B,IAAMS,EAAU,SAAS,cAAc,MAAM,EAC7CA,EAAQ,UAAYC,GACpBb,EAAU,YAAYY,EAAQ,UAAW,EAEzCtB,EAAM,YAAYU,CAAS,CAC7B,MACET,EAAW,QAAQ,CACjB,KAAMW,GACN,QAAS,WACT,UAAWL,GAASb,CAAQ,EAAE,YAAY,CAC5C,CAAC,EAGHO,EAAW,QAAQ,CAAC,CAAE,KAAAuB,EAAM,QAAAC,EAAS,UAAAC,CAAU,IAAM,CACnD,IAAMC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAU,IAAI,OAAO,EACtBF,IAASE,EAAK,QAAQ,QAAUF,GACpCE,EAAK,UAAYH,EAEjB,IAAMI,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,YAAcF,EAEnBC,EAAK,YAAYC,CAAI,EACrB5B,EAAM,YAAY2B,CAAI,CACxB,CAAC,EACD9B,EAAU,YAAYG,CAAK,EAE3B,IAAM6B,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAA,EAAQ,UAAU,IAAI,OAAO,EAC7B7B,EAAM,YAAY6B,CAAO,EAEzBxB,EAAY,QAAQ,CAAC,CACnB,QAAAoB,EAAS,aAAAK,EAAc,KAAAN,EAAM,SAAAO,CAC/B,IAAM,CACJ,IAAMC,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,QAAQ,QAAUP,EACpBO,EAAE,KAAO,IACTA,EAAE,iBAAiB,QAAS,MAAOC,GAAU,CAC3CA,EAAM,eAAe,EAErB,GAAI,CACF,MAAMF,EAAS,EAEfC,EAAE,UAAYE,GACdF,EAAE,QAAQ,QAAUF,EACpB,WAAW,IAAM,CACfE,EAAE,UAAYR,EACdQ,EAAE,QAAQ,QAAUP,CACtB,EAAG,GAAI,CACT,OAASP,EAAG,CAEV,QAAQ,MAAMA,CAAC,CACjB,CACF,CAAC,EAEDc,EAAE,UAAYR,EACdK,EAAQ,YAAYG,CAAC,CACvB,CAAC,EAEMnC,CACT,EAUMsC,EAAeC,GAAsB,CACzCxD,GAAc,UAAYyD,GAC1BC,GAAW,EACX1D,GAAc,eAAe,CAC3B,MAAO,QACP,SAAU,QACZ,CAAC,EAEDwD,EAAQ,QAAQ,CAAC,CACf,MAAA5C,EAAO,MAAAC,EAAO,gBAAA8C,EAAiB,SAAAxD,EAAU,UAAAC,CAC3C,IAAM,CACJ,IAAIU,EACAK,EACAyC,EAEJ,GAAI/C,aAAiB,YACnBC,EAAW6C,GAAmB,GAC9BxC,EAAUiB,EAAOvB,EAAOC,CAAQ,EAChC8C,EAAa/C,EAAM,eACd,CACLM,EAAUN,EAGVC,EAAW6C,GAAmBpD,GAAcM,CAAK,EACjD,GAAI,CACF+C,EAAaC,EAAOhD,EAAOC,CAAQ,EAAE,UACvC,MAAY,CAEV,QAAQ,KAAK,8CAA8CF,CAAK,mDAAmDe,GAASb,CAAQ,EAAE,YAAY,CAAC,0CAA0C,EAC7L8C,EAAc,IAAI,YAAY,EAAG,OAAO/C,CAAK,EAAE,UACjD,CACF,CAEA,GAAI,CACF,IAAMwB,EAAS1B,GAAmB,CAChC,MAAAC,EACA,MAAOO,EACP,SAAAL,EACA,UAAW8C,EAAa,EACxB,QAAS/C,EACT,SAAAV,EACA,UAAAC,CACF,CAAC,EACDJ,GAAc,YAAYqC,CAAM,CAClC,OAASC,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAChC,CAAC,EAEDtC,GAAc,MAAM,QAAU,OAC9B8D,EAAK,GAAG,CACV,EAEMC,GAAc,IAAM,CACxB/D,GAAc,MAAM,QAAU,IAC9BA,GAAc,YAAc,GAC5B0D,GAAW,CACb,ECnSA,IAAMM,GAAY,SAAS,iBAA8B,eAAe,EAClEC,GAAW,SAAS,iBAA8B,gBAAgB,EAExED,GAAU,QAASE,GAASA,EAAK,iBAAiB,QAAS,IAAM,CAC/DF,GAAU,QAASG,GAAMA,EAAE,UAAU,OAAO,QAAQ,CAAC,EACrDF,GAAS,QAASE,GAAMA,EAAE,UAAU,OAAO,QAAQ,CAAC,EACpDD,EAAK,UAAU,IAAI,QAAQ,EACvBA,EAAK,QAAQ,QAAQ,SAAS,cAAcA,EAAK,QAAQ,MAAM,GAAG,UAAU,IAAI,QAAQ,EAC5FE,GAAY,CACd,CAAC,CAAC,ECEF,IAAMC,GAAgB,SAAS,cAAc,SAAS,EAChDC,GAAeD,GAAc,cAAiC,gBAAgB,EAC9EE,GAAWF,GAAc,cAAc,UAAU,EACjDG,GAAUH,GAAc,cAAc,SAAS,EAC/CI,GAASJ,GAAc,cAAc,QAAQ,EAKnDG,IAAS,iBAAiB,SAAU,IAAM,CACpCA,GAAQ,KAAMC,GAAO,YAAc,gBAClCA,GAAO,YAAc,iBAC5B,CAAC,EAKD,eAAeC,GAAcC,EAAiBC,EAAmB,CAC/D,IAAMC,EAAW,OAAOR,GAAc,cAAiC,kBAAkB,GAAG,gBAAgB,CAAC,EAAE,KAAK,EAC9GS,EAAOC,EAAOJ,EAASE,CAAQ,EAErC,OADe,MAAM,OAAO,OAAO,OAAOD,EAAWE,CAAI,CAE3D,CAEAL,GAAO,iBAAiB,QAAS,SAAY,CAC3CO,EAAK,CAAC,EAEN,IAAMJ,EAAYN,GAAa,gBAAgB,CAAC,EAAE,QAAQ,IACpDW,EAAOV,GAAS,MAEtB,GAAI,CACF,IAAMW,EAAS,MAAMR,GAAcO,EAAML,CAAS,EAGlD,GAAIJ,IAAS,KAAM,CACjB,IAAMK,EAAW,OAAOL,GAAQ,cAAiC,uBAAuB,GAAG,gBAAgB,CAAC,EAAE,KAAK,EAC7GW,EAAQX,GAAQ,cAAgC,YAAY,GAAG,OAAS,GACxEY,EAAiBL,EAAOI,EAAON,CAAQ,EAC7CQ,EAAY,CAAC,CACX,MAAO,GAAGT,CAAS,oBACnB,MAAO,OACLU,EAAOJ,IAA4B,IAAMI,EAAOF,IAAoC,CACtF,CACF,CAAC,CAAC,CACJ,MACEC,EAAY,CAAC,CACX,MAAO,GAAGT,CAAS,UACnB,MAAOM,EACP,mBACA,SAAU,SACV,UAAWN,EAAU,QAAQ,KAAM,EAAE,EAAE,YAAY,CACrD,CAAC,CAAC,CAEN,OAASW,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAChC,CAAC,EAEDjB,GAAa,iBAAiB,SAAU,IAAM,CAC5C,IAAMmB,EAAOpB,GAAc,cAAc,MAAM,EACzCqB,EAAYD,EAAK,cAAc,kBAAkB,EACjDE,EAASF,EAAK,cAAc,cAAc,EAC1CG,EAAgBH,EAAK,cAAc,qBAAqB,EAExDI,EAAWvB,GAAa,gBAAgB,CAAC,EAAE,QACjDoB,EAAU,YAAcG,EAAS,IAAM,GACvCF,EAAO,YAAcE,EAAS,QAAU,GACxCD,EAAc,YAAcC,EAAS,MAAQ,GAE7CC,GAAY,CACd,CAAC,EAaD,IAAMC,GAAc,MAClBC,EACAC,EACArB,IACG,CACH,IAAMsB,EAAoB,CAAC,EAE3B,GAAI,CACF,IAAMC,EAAgC,CAAC,EACnCF,GACFA,EAAU,MAAM,OAAO,EAAE,QAASG,GAAS,CACzC,GAAM,CAACC,EAAUC,CAAQ,EAAIF,EAAK,MAAM,SAAS,EACjDD,EAAKG,CAAQ,EAAID,CACnB,CAAC,EAGH,MAAM,QAAQ,IAAIL,EAAM,IAAI,MAAO,CAACO,EAAMzB,CAAI,IAAM,CAClD,IAAMuB,EAAWF,EAAKI,EAAK,IAAI,EACzBrB,EAAS,MAAM,OAAO,OAAO,OAAON,EAAWE,CAAI,EAErD0B,EACArB,EACAmB,EAAW,SACXG,EAEAJ,GACFG,EAAQ,GAAG5B,CAAS,cAAc2B,EAAK,IAAI,8BAAyBA,EAAK,KAAK,eAAe,CAAC,iBAAYA,EAAK,MAAQ,cAAc,GACrIpB,EAAQ,OAAOkB,IAAaf,EAAOJ,IAA4B,CAAC,IAEhEsB,EAAQ,GAAG5B,CAAS,cAAc2B,EAAK,IAAI,WAAMA,EAAK,KAAK,eAAe,CAAC,iBAAYA,EAAK,MAAQ,cAAc,GAClHpB,EAAQD,EACRoB,EAAWC,EAAK,KAChBE,EAAY7B,EAAU,QAAQ,KAAM,EAAE,EAAE,YAAY,GAGtDsB,EAAQ,KAAK,CACX,MAAAM,EAAO,MAAArB,EAAO,SAAAmB,EAAU,UAAAG,CAC1B,CAAC,CACH,CAAC,CAAC,CACJ,OAASlB,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAE9BF,EAAYa,CAAO,CACrB,EAEMQ,GAAaV,GAA4B,CAC7C,GAAI,CAACA,GAAS,CAACA,EAAM,OAAQ,OAC7BhB,EAAK,CAAC,EAEN,IAAM2B,EAAO,MAAM,KAAKX,CAAK,EACvBY,EAAYD,EAAK,OAAO,CAACE,EAAMN,IAASM,EAAON,EAAK,KAAM,CAAC,EAC3DO,EAAyB,CAAC,EAC1BC,EAAiC,CAAC,EACpCnC,EAAYN,GAAa,gBAAgB,CAAC,EAAE,QAAQ,IACpD2B,EAEJU,EAAK,QAAQ,CAACJ,EAAMS,IAAM,CACxB,IAAMC,EAAS,IAAI,WAEnBA,EAAO,WAAcC,GAAU,CAC7BJ,EAAaE,CAAC,EAAIE,EAAM,OACxBlC,EAAM8B,EAAa,OAAO,CAACK,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAAIR,EAAa,GAAG,CAClE,EAEAK,EAAO,OAAS,MAAOC,GAAU,CAC/B,GAAI,CAACA,EAAM,QAAQ,QAAU,EAAEA,EAAM,OAAO,kBAAkB,aAAc,CAC1E1B,EAAY,IAAI,MAAM,SAASe,EAAK,IAAI,cAAcA,EAAK,IAAI,mBAAmB,CAAC,EACnF,MACF,CAGA,GAAI,CACF,IAAMc,EAAsB,IAAI,MAAM,sDAAsD,EAC5F,OAAQ,GAAM,CACZ,IAAK,kCAAkC,KAAKd,EAAK,IAAI,EAEnD,GADA3B,EAAY,QACRqB,EAAW,MAAMoB,EACrBpB,EAAa,IAAI,YAAY,EAAG,OAAOiB,EAAM,OAAO,MAAM,EAC1D,MACF,IAAK,sCAAsC,KAAKX,EAAK,IAAI,EAEvD,GADA3B,EAAY,UACRqB,EAAW,MAAMoB,EACrBpB,EAAa,IAAI,YAAY,EAAG,OAAOiB,EAAM,OAAO,MAAM,EAC1D,MACF,IAAK,sCAAsC,KAAKX,EAAK,IAAI,EAEvD,GADA3B,EAAY,UACRqB,EAAW,MAAMoB,EACrBpB,EAAa,IAAI,YAAY,EAAG,OAAOiB,EAAM,OAAO,MAAM,EAC1D,MACF,IAAK,sCAAsC,KAAKX,EAAK,IAAI,EAEvD,GADA3B,EAAY,UACRqB,EAAW,MAAMoB,EACrBpB,EAAa,IAAI,YAAY,EAAG,OAAOiB,EAAM,OAAO,MAAM,EAC1D,MACF,QACEH,EAAQ,KAAK,CAACR,EAAMW,EAAM,OAAO,MAAM,CAAC,CAC5C,CACF,OAAS3B,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAEjBwB,EAAQ,UAAYd,EAAYD,EAAM,OAAS,EAAIA,EAAM,SAC5DD,GAAYgB,EAASd,EAAWrB,CAAS,CACrD,EAEAqC,EAAO,kBAAkBV,CAAI,CAC/B,CAAC,CACH,EAEMe,GAASjD,GAAc,cAAgC,eAAe,EAC5EiD,IAAQ,iBAAiB,SAAU,IAAMZ,GAAUY,GAAO,KAAK,CAAC,EAMhE/C,GAAS,iBAAiB,OAAS2C,GAAU,CAC3CR,GAAUQ,EAAM,cAAc,KAAK,CACrC,CAAC,ECvMD,IAAMK,GAAgB,SAAS,cAA2B,SAAS,EAC7DC,GAAYD,GAAc,iBAAgC,SAAS,EACnEE,GAAWF,GAAc,iBAAiC,WAAW,EAE3EC,GAAU,QAASE,GAASA,EAAK,iBAAiB,QAAS,IAAM,CAC/DF,GAAU,QAASG,GAAMA,EAAE,UAAU,OAAO,QAAQ,CAAC,EACrDF,GAAS,QAASE,GAAMA,EAAE,UAAU,OAAO,QAAQ,CAAC,EACpDD,EAAK,UAAU,IAAI,QAAQ,EACvBA,EAAK,QAAQ,QAAQ,SAAS,cAAc,IAAIA,EAAK,QAAQ,MAAM,EAAE,GAAG,UAAU,IAAI,QAAQ,EAClGE,GAAY,CACd,CAAC,CAAC,EAEF,IAAMC,GAAqBN,GAAc,cAAiC,QAAQ,EAClFM,GAAmB,iBAAiB,QAAS,IAAM,CACjDC,EAAK,CAAC,EAEN,GAAI,CACF,IAAMC,EAAiBR,GAAc,cAAgC,cAAc,EAC7ES,EAAaT,GAAc,cAAiC,SAAS,EAG3E,GAFWA,GAAc,cAA2B,gBAAgB,EAAG,QAAQ,SAEpE,OAAQ,CACjBU,EAAY,CAAC,CAAE,MAAO,OAAQ,MAAO,OAAO,OAAO,WAAW,EAAG,SAAU,WAAY,CAAC,CAAC,EACzF,MACF,CAGA,IAAMC,EAAQ,OAAOH,EAAe,MAAM,OAASA,EAAe,MAAQ,EAAE,EACtEI,EAAQ,IAAI,WAAWD,CAAK,EAKlC,GAJA,OAAO,OAAO,gBAAgBC,CAAK,EAEvBH,EAAW,gBAAgB,CAAC,EAAE,QAE9B,UAAW,CACrBC,EAAY,CAAC,CAAE,MAAO,gBAAiB,MAAOE,EAAM,OAAQ,SAAU,QAAQD,CAAK,QAAS,CAAC,CAAC,EAC9F,MACF,CAGA,IAAME,EAAO,IAAI,KAAK,CAACD,CAAK,EAAG,CAAE,KAAM,0BAA2B,CAAC,EAC7DE,EAAM,OAAO,IAAI,gBAAgBD,CAAI,EAErCE,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,KAAOD,EACTC,EAAE,SAAW,QAAQJ,CAAK,aAC1B,SAAS,KAAK,YAAYI,CAAC,EAC3BA,EAAE,MAAM,EAGR,SAAS,KAAK,YAAYA,CAAC,EAC3B,OAAO,IAAI,gBAAgBD,CAAG,CAChC,OAASE,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAE9BT,EAAK,GAAG,CACV,CAAC,EChED,IAAMW,GAAeC,GAA6BC,GAAiB,CACjEA,EAAM,eAAe,EACrBD,EAAW,OAAO,CACpB,EAUME,GAAY,CAChBC,EACAC,EACAC,EACAC,EACAC,IACG,CACH,IAAMP,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAU,IAAI,kBAAkB,EAE3C,IAAMQ,EAAQ,SAAS,cAAc,OAAO,EAC5CA,EAAM,UAAU,IAAI,OAAO,EAC3BR,EAAW,YAAYQ,CAAK,EAE5B,IAAMC,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,UAAU,IAAI,WAAW,EACnCD,EAAM,YAAYC,CAAS,EAE3B,IAAMC,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,UAAYP,EACjBM,EAAU,YAAYC,CAAI,EAE1B,IAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAU,IAAI,SAAS,EAC/BF,EAAU,YAAYE,CAAO,EAE7B,IAAMC,EAAe,SAAS,cAAc,MAAM,EAClDA,EAAa,YAAcR,EAC3BO,EAAQ,YAAYC,CAAY,EAEhC,IAAMC,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,YAAcR,EAChBM,EAAQ,YAAYE,CAAC,EAErB,IAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAU,IAAI,SAAS,EAC/BN,EAAM,YAAYM,CAAO,EAEzB,IAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,UAAU,IAAI,QAAQ,EAC7BA,EAAO,YAAc,SACrBA,EAAO,iBAAiB,QAAShB,GAAYC,CAAU,CAAC,EACxDc,EAAQ,YAAYC,CAAM,EAE1B,IAAMC,EAAU,SAAS,cAAc,QAAQ,EAC/CA,EAAQ,UAAU,IAAI,SAAS,EAC/BA,EAAQ,YAAcV,EACtBU,EAAQ,iBAAiB,QAASjB,GAAYC,CAAU,CAAC,EACzDgB,EAAQ,iBAAiB,QAAS,IAAMT,EAAS,CAAC,EAClDO,EAAQ,YAAYE,CAAO,EAE3B,SAAS,KAAK,YAAYhB,CAAU,CACtC,EAEOiB,GAAQf,GCnEf,IAAMgB,GAAgB,cAChBC,GAAiB,OAGvB,IAAIC,GAKEC,GAAe,IAAM,IAAI,QAAiB,CAACC,EAASC,IAAW,CACnE,IAAMC,EAAU,OAAO,UAAU,KAAKC,GAAe,CAAe,EAEpED,EAAQ,QAAU,IAAM,CACtBD,EAAO,IAAI,MAAM,uBAAuB,CAAC,CAC3C,EAEAC,EAAQ,gBAAkB,IAAM,CAC9BJ,GAAKI,EAAQ,OAGbJ,GAAG,kBAAkBM,GAAgB,CAAE,QAAS,MAAO,CAAC,CAC1D,EAEAF,EAAQ,UAAY,IAAM,CACxBJ,GAAKI,EAAQ,OACbJ,GAAG,QAAWO,GAAU,QAAQ,MAAM,IAAI,MAAM,6BAA6B,KAAK,UAAUA,EAAM,MAAM,CAAC,EAAE,CAAC,EAC5GL,EAAQ,EAAI,CACd,CACF,CAAC,EAKKM,GAAW,CACfC,EACAC,IACG,IAAI,QAAiB,CAACR,EAASC,IAAW,CAG7C,IAAMC,EAFcJ,GAAG,YAAY,CAACM,EAAc,EAAG,WAAW,EACtC,YAAYA,EAAc,EAC9B,IAAI,CACxB,KAAMG,EACN,IAAAC,CACF,CAAC,EAEDN,EAAQ,QAAWG,GAAUJ,EAAO,IAAI,MAAM,KAAK,UAAUI,CAAK,CAAC,CAAC,EACpEH,EAAQ,UAAY,IAAMF,EAAQ,EAAI,CACxC,CAAC,EAKKS,GAAaF,GAAoB,IAAI,QAAiB,CAACP,EAASC,IAAW,CAG/E,IAAMC,EAFcJ,GAAG,YAAY,CAACM,EAAc,EAAG,WAAW,EACtC,YAAYA,EAAc,EAC9B,OAAOG,CAAO,EAEpCL,EAAQ,QAAWG,GAAUJ,EAAO,IAAI,MAAM,KAAK,UAAUI,CAAK,CAAC,CAAC,EACpEH,EAAQ,UAAY,IAAMF,EAAQ,EAAI,CACxC,CAAC,EAOKU,GAAU,IAAM,IAAI,QAA0B,CAACV,EAASC,IAAW,CAGvE,IAAMC,EAFcJ,GAAG,YAAY,CAACM,EAAc,EAAG,UAAU,EACrC,YAAYA,EAAc,EAC9B,OAAO,EAE7BF,EAAQ,QAAWG,GAAUJ,EAAO,IAAI,MAAM,KAAK,UAAUI,CAAK,CAAC,CAAC,EACpEH,EAAQ,UAAaG,GAAUL,EAASK,EAAM,OAAe,MAAM,CACrE,CAAC,ECpED,IAAMM,GAAoB,SAAS,cAA2B,aAAa,EACrEC,EAASD,GAAkB,cAA2B,oBAAoB,EAC1EE,GAAOD,GAAQ,iBAAgC,SAAS,EAG9DD,GAAkB,iBAAgC,eAAe,EAC9D,QAASG,GAAOA,EAAG,iBAAiB,QAAS,IAAMF,GAAQ,UAAU,OAAO,QAAQ,CAAC,CAAC,EAOzF,IAAMG,GAAkB,CAACC,EAAcC,IAAgB,CACrD,IAAMC,EAAWN,GAAQ,cAAmC,UAAU,EAChEO,EAAYP,GAAQ,cAA2B,YAAY,EAC3DQ,EAASR,GAAQ,cAAiC,QAAQ,EAE5DS,EAAsB,GAC1B,OAAQL,EAAI,CAEV,IAAK,UAAWK,EAAc,qCAAsC,MACpE,IAAK,UAAWA,EAAc,qCAAsC,MACpE,IAAK,OAAQA,EAAc,qCAAsC,MACjE,IAAK,SAAUA,EAAc,qCAAsC,MACnE,QACF,CACIH,IAAUA,EAAS,YAAcG,GAGrCT,GAAQ,iBAA8B,oBAAoB,EAAE,QAASU,GAASA,EAAK,UAAU,OAAO,QAAQ,CAAC,EAC7GV,GAAQ,cAA2B,aAAaK,CAAG,IAAID,CAAE,EAAE,GAAG,UAAU,IAAI,QAAQ,EAChFA,IAAO,SAAUG,GAAW,UAAU,IAAI,QAAQ,EACjDA,GAAW,UAAU,OAAO,QAAQ,EAGrCC,IAAQA,EAAO,YAAc,GAAGJ,EAAG,OAAO,CAAC,EAAE,YAAY,CAAC,GAAGA,EAAG,MAAM,CAAC,CAAC,GAC9E,EAQMO,GAAe,CACnBC,EACAC,EACAC,IACG,IAAM,CACTd,GAAQ,UAAU,IAAI,QAAQ,EAC9BA,GAAQ,eAAe,CACrB,MAAO,SACP,SAAU,QACZ,CAAC,EAED,IAAMe,EAAcF,aAAqB,UACrCT,EAAKU,EAELE,EAAeJ,EACfK,EACAC,EAEJ,GAAIH,EACFE,EAAMJ,EACNK,EAASD,EAAI,OAGRb,IACCc,EAAO,SAAS,SAAS,EAAGd,EAAK,UAC5Bc,EAAO,SAAS,MAAM,EAAGd,EAAK,OAClC,CAACA,CAAE,EAAIc,OAET,CACLA,EAASL,EAAU,WAAW,OAAO,OAAOA,EAAU,UAAU,MAAM,EAGjET,IACCc,EAAO,SAAS,SAAS,EAAGd,EAAK,UAC5Bc,EAAO,SAAS,MAAM,EAAGd,EAAK,OAClC,CAACA,CAAE,EAAIc,GAGd,IAAIC,EAAmB,GACvB,OAAQf,EAAI,CACV,IAAK,SACL,IAAK,UACHe,EAAW,aACXF,EAAMJ,EAAU,UAChB,MACF,IAAK,OACL,IAAK,UACHM,EAAW,cACXF,EAAMJ,EAAU,WAChB,MACF,QACE,MAAM,IAAI,MAAM,aAAaT,CAAE,gCAAgCQ,CAAO,IAAI,CAC9E,CACAI,EAAe,GAAGJ,CAAO,KAAKO,CAAQ,GACxC,CAEA,IAAMd,EAAMY,EAAI,UAAU,KAAK,YAAY,EACvCjB,IACFA,EAAO,QAAQ,IAAMY,EACrBZ,EAAO,QAAQ,IAAMK,GAGvBJ,IAAM,QAASmB,GAAQA,EAAI,UAAU,OAAO,SAAU,MAAM,CAAC,EAC7DpB,GAAQ,cAA2B,oBAAoBI,CAAE,IAAI,GAAG,UAAU,IAAI,QAAQ,EACtFc,EAAO,QAASG,GAAUrB,GAAQ,cAA2B,oBAAoBqB,CAAK,IAAI,GAAG,UAAU,IAAI,MAAM,CAAC,EAGlH,IAAMC,EAAiBtB,GAAQ,cAA6B,cAAc,EAC1E,GAAIsB,EAAgB,CAClBA,EAAe,UAAYC,GAC3B,IAAMC,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,YAAcR,EACnBM,EAAe,YAAYE,CAAI,CACjC,CAEArB,GAAgBC,EAAIC,CAAG,CACzB,EAGAJ,IAAM,QAASmB,GAAQ,CACrB,IAAMhB,EAAKgB,EAAI,QAAQ,GACvBA,EAAI,iBAAiB,QAAS,IAAM,CAClC,IAAMR,EAAUZ,EAAQ,QAAQ,KAAO,GACjC,CAAE,IAAAiB,CAAI,EAAIQ,GAAOb,CAAO,EAC9BD,GAAaC,EAASK,EAAKb,CAAE,EAAE,CACjC,CAAC,CACH,CAAC,EAED,IAAOsB,GAAQf,GClHf,IAAMgB,GAAmC,CAAC,EAKpCC,GAAgB,IAAM,CAEX,SAAS,cAA2B,6BAA6B,GACxE,UAAU,OAAO,QAAQ,EACjCC,GAAY,EAEZ,IAAMC,EAAO,SAAS,cAA2B,uCAAuC,EACxFA,EAAK,YAAc,GAEnB,IAAMC,EAAQ,OAAO,QAAQJ,EAAI,EACjC,GAAI,CAACI,EAAM,OAAQ,CACjB,IAAMC,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,YAAc,qDACjBF,EAAK,YAAYE,CAAE,CACrB,CAEAD,EAAM,QAAQ,CAAC,CAACE,EAAGC,CAAC,IAAM,CACxB,GAAM,CAAE,IAAKC,CAAa,EAAID,EAExBF,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,iBAAiB,QAASI,GAAaH,EAAGE,CAAY,CAAC,EAE1D,IAAME,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,UAAU,IAAI,WAAW,EACnCL,EAAG,YAAYK,CAAS,EAExB,IAAMC,EAAO,SAAS,cAAc,MAAM,EAC1CD,EAAU,YAAYC,CAAI,EAE1B,IAAMC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,UAAU,IAAI,MAAM,EACzBF,EAAU,YAAYE,CAAI,EAE1B,IAAMC,EAAO,SAAS,cAAc,MAAM,EAI1C,GAHAA,EAAK,YAAcP,EACnBM,EAAK,YAAYC,CAAI,EAEjBN,EAAE,MAAO,CACX,IAAMO,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,UAAU,IAAI,OAAO,EAC1BA,EAAK,QAAQ,QAAU,8BACvBA,EAAK,UAAYC,GACjBF,EAAK,YAAYC,CAAI,CACvB,CAEA,IAAME,EAAcR,aAAwB,UAEtCS,EAAa,SAAS,cAAc,MAAM,EAC5CC,EACAC,EACAC,EAEAJ,GACFL,EAAK,UAAYU,GACjBH,EAAO,gBACPC,EAAMX,EAAa,UAAU,KAC7BY,EAASZ,EAAa,SAEtBG,EAAK,UAAYW,GACjBJ,EAAO,sBACPC,EAAMX,EAAa,WAAW,UAAU,KACxCY,EAASZ,EAAa,WAAW,OAAO,OAAOA,EAAa,UAAU,MAAM,GAG9ES,EAAW,YAAc,GAAGC,CAAI,WAAMC,CAAG,WAAMC,EAAO,KAAK,IAAI,CAAC,GAChER,EAAK,YAAYK,CAAU,EAE3B,IAAMM,EAAU,SAAS,cAAc,KAAK,EAK5C,GAJAA,EAAQ,UAAU,IAAI,SAAS,EAC/BlB,EAAG,YAAYkB,CAAO,EAGlB,CAACP,EAAa,CAChB,IAAMQ,EAAe,SAAS,cAAc,GAAG,EAC/CA,EAAa,KAAO,IACpBA,EAAa,UAAYC,GACzBD,EAAa,QAAQ,QAAU,oBAC/BA,EAAa,iBAAiB,QAAS,MAAOE,GAAU,CACtDA,EAAM,eAAe,EACrBA,EAAM,gBAAgB,EAEtB,IAAMC,EAAMnB,EAAa,UACnBoB,EAAW,GAAGtB,EAAE,QAAQ,MAAO,GAAG,CAAC,UACnCuB,GAAoB,CAAC,EAE3B,GAAI,CACF,OAAQF,EAAI,UAAU,KAAM,CAC1B,IAAK,oBAAqB,IAAK,UAAW,IAAK,WAAY,IAAK,QAAS,CACvE,IAAMG,GAAO,MAAMC,GAAUJ,EAAK,MAAM,EAAE,EAC1CE,GAAQ,KAAK,CACX,MAAO,eAAevB,CAAC,0DACvB,MAAOwB,GACP,mBACA,SAAAF,EACA,UAAW,KACb,EAAG,CACD,MAAO,eAAetB,CAAC,0DACvB,MAAO;AAAA,EAA+B0B,EAAOF,KAAqB,CAAC;AAAA;AAAA,EACnE,SAAAF,EACA,UAAW,KACb,CAAC,EACD,KACF,CACA,QACE,MAAM,IAAI,MAAM,6BAA6BD,EAAI,UAAU,IAAI,EAAE,CACrE,CAGIA,EAAI,UAAU,OAAS,SACzBE,GAAQ,KAAK,CACX,MAAO,eAAevB,CAAC,kBACvB,MAAO,MAAMyB,GAAUJ,EAAK,KAAK,EAAE,EACnC,mBACA,SAAAC,CACF,CAAC,EAIHC,GAAQ,KAAK,CACX,MAAO,eAAevB,CAAC,iCACvB,MAAO,KAAK,UAAU,MAAMyB,GAAUJ,EAAK,KAAK,EAAE,EAAiB,KAAM,CAAC,EAC1E,SAAAC,CACF,CAAC,EAEDK,EAAYJ,EAAO,CACrB,OAASK,GAAG,CAAEC,EAAYD,EAAC,CAAG,CAChC,CAAC,EACDX,EAAQ,YAAYC,CAAY,CAClC,CAGA,GACG,CAACR,GAAeR,EAAa,WAAW,aACrCQ,GAAeR,EAAa,YAChC,CACA,IAAM4B,EAAgB,SAAS,cAAc,GAAG,EAChDA,EAAc,KAAO,IACrBA,EAAc,UAAYC,GAC1BD,EAAc,QAAQ,QAAUpB,EAAc,oBAAsB,qBACpEoB,EAAc,iBAAiB,QAAS,MAAOV,GAAU,CACvDA,EAAM,eAAe,EACrBA,EAAM,gBAAgB,EAEtB,IAAMC,EAAMX,EAAcR,EAAeA,EAAa,WAChDoB,EAAW,GAAGtB,EAAE,QAAQ,MAAO,GAAG,CAAC,IAAIU,EAAc,SAAW,SAAS,GACzEa,GAAoB,CAAC,EAE3B,GAAI,CACF,OAAQF,EAAI,UAAU,KAAM,CAC1B,IAAK,UAAW,IAAK,UAAW,IAAK,UAAW,IAAK,OACnDE,GAAQ,KAAK,CACX,MAAO,eAAevB,CAAC,kBACvB,MAAO,MAAMyB,GAAUJ,EAAK,KAAK,EAAE,EACnC,SAAAC,EACA,UAAW,KACb,CAAC,EACD,MACF,IAAK,oBAAqB,IAAK,UAAW,IAAK,WAAY,IAAK,QAAS,CACvE,IAAMU,GAAQ,MAAMP,GAAUJ,EAAK,OAAO,EAAE,EAC5CE,GAAQ,KAAK,CACX,MAAO,gBAAgBvB,CAAC,kCACxB,MAAOgC,GACP,mBACA,SAAAV,EACA,UAAW,KACb,EAAG,CACD,MAAO,gBAAgBtB,CAAC,kCACxB,MAAO;AAAA,EAAgC0B,EAAOM,KAAsB,CAAC;AAAA;AAAA,EACrE,SAAAV,EACA,UAAW,KACb,CAAC,EACD,KACF,CACA,QACE,MAAM,IAAI,MAAM,6BAA6BD,EAAI,UAAU,IAAI,EAAE,CACrE,CAGAE,GAAQ,KAAK,CACX,MAAO,GAAGb,EAAc,SAAW,SAAS,SAASV,CAAC,iCACtD,MAAO,KAAK,UAAU,MAAMyB,GAAUJ,EAAK,KAAK,EAAE,EAAiB,KAAM,CAAC,EAC1E,SAAAC,CACF,CAAC,EAEDK,EAAYJ,EAAO,CACrB,OAASK,GAAG,CAAEC,EAAYD,EAAC,CAAG,CAChC,CAAC,EACDX,EAAQ,YAAYa,CAAa,CACnC,CAEA,IAAMG,EAAQ,SAAS,cAAc,GAAG,EACxCA,EAAM,KAAO,IACbA,EAAM,UAAYC,GAClBD,EAAM,QAAQ,QAAU,aACxBA,EAAM,iBAAiB,QAAUb,GAAU,CACzCA,EAAM,eAAe,EACrBA,EAAM,gBAAgB,EACtBe,GAAUD,GAAW,gBAAiB,sCAAuC,SAAUE,GAAUpC,CAAC,CAAC,CACrG,CAAC,EACDiB,EAAQ,YAAYgB,CAAK,EAEzBpC,EAAK,YAAYE,CAAE,CACrB,CAAC,CACH,EAKMsC,GAAW,IAAM,SAAS,cAA2B,yCAAyC,GAAG,MAAM,EAKvGC,GAAS,CAAC/B,EAAcc,EAAgCkB,EAAgB,KAAU,CACtF,GAAI7C,GAAKa,CAAI,EAAG,MAAM,IAAI,MAAM,yBAAyBA,CAAI,mBAAmB,EAChFb,GAAKa,CAAI,EAAI,CAAE,MAAOgC,EAAM,IAAAlB,CAAI,EAE5BkB,GAAMC,GAASjC,EAAMc,CAAG,EAE5B1B,GAAc,EACd0C,GAAS,EACTI,EAAK,GAAG,CACV,EAKMC,GAAUnC,GAAiB,CAC/B,GAAI,CAACb,GAAKa,CAAI,EAAG,MAAM,IAAI,MAAM,yBAAyBA,CAAI,mBAAmB,EACjF,OAAOb,GAAKa,CAAI,CAClB,EAKM6B,GAAa7B,GAAiB,SAAY,CAC9C,GAAI,CACF,MAAMoC,GAAUpC,CAAI,EACpB,OAAOb,GAAKa,CAAI,EAChBZ,GAAc,CAChB,OAAS,EAAG,CAAEkC,EAAY,CAAC,CAAG,CAChC,EAOMJ,GAAY,CAACJ,EAAgBuB,IAAsB,SAAY,OAClE,OAAO,OAAO,UAAUA,EAAQvB,CAAG,GAGrC,SAAY,CACX,GAAI,CACF,MAAMwB,GAAa,GAGT,MAAMC,GAAQ,GACtB,QAAQ,CAAC,CAAE,KAAAvC,EAAM,IAAAc,CAAI,IAAM,CAAE3B,GAAKa,CAAI,EAAI,CAAE,MAAO,GAAM,IAAAc,CAAI,CAAG,CAAC,EACnE1B,GAAc,CAChB,OAASiC,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAChC,GAAG,EC3RH,IAAMmB,GAAoB,SAAS,cAA2B,aAAa,EACrEC,EAASD,GAAkB,cAA2B,yBAAyB,EAC/EE,GAAWD,EAAO,cAAmC,iBAAiB,EAUtEE,GAAU,MACdC,EACAC,EACAC,EACAC,EAAsB,KACA,CACtB,IAAMC,EAAoB,CAAC,EACrBC,EAASF,EAAc,WAAMA,CAAW,GAAK,GAE7CG,EAAYC,GAAOV,EAAO,QAAQ,KAAO,EAAE,EAAE,IAC7CW,EAAcF,aAAqB,UACnCG,EAAiBP,EAAW,GAAGA,CAAQ,IAAIF,CAAS,GAAKA,EAE/D,OAAQA,EAAW,CACjB,IAAK,SAAU,CACb,IAAMU,EAAoBb,EAAO,cAAmC,qBAAqB,EACzF,GAAI,CAACa,EAAkB,MAAO,MAAM,IAAI,MAAM,kDAAkD,EAChG,IAAMC,EAAoB,OAAOd,EAAO,cAAiC,6BAA6B,GAAG,gBAAgB,CAAC,EAAE,KAAK,EAC3He,EAAYC,EAAOH,EAAkB,MAAOC,CAAiB,EAE7DG,EAAMN,EAAcF,EAAYA,EAAU,UAC1CS,EAAiB,CACrB,KAAMD,EAAI,UAAU,IACtB,EAEA,GAAIA,EAAI,UAAU,OAAS,UAAW,CACpC,IAAME,EAAanB,EAAO,cAAgC,mCAAmC,GAAG,MAChGkB,EAAU,WAAaC,EAAa,OAAOA,CAAU,EAAI,EAC3D,CAEA,GAAIF,EAAI,UAAU,OAAS,QAAS,CAClC,IAAMG,EAAgBpB,EAAO,cAAiC,sBAAsB,GAAG,gBAAgB,CAAC,EAAE,MAC1GkB,EAAU,KAAOE,CACnB,CAEA,IAAMC,EAAe,MAAM,OAAO,OAAO,OAAO,OAAOH,EAAWD,EAAKF,EAAWX,CAAI,EACtFG,EAAQ,QAAQ,CACd,MAAO,2BACP,MAAO,OAAOc,CAAY,CAC5B,CAAC,EACD,KACF,CACA,IAAK,UAAW,CACd,IAAMJ,EAAMN,EAAcF,EAAYA,EAAU,UAC1CS,EAAiB,CACrB,KAAMD,EAAI,UAAU,IACtB,EAEA,GAAIA,EAAI,UAAU,OAAS,UAAW,CACpC,IAAMK,EAAetB,EAAO,cAAgC,gCAAgC,GAAG,MACzFuB,EAAevB,EAAO,cAAiC,yBAAyB,GAAG,gBAAgB,CAAC,EAAE,MASxGwB,EACJ,GAAIF,EAAc,CAChB,IAAMG,EAAQ,OAAOF,CAAY,EAEjC,GADAC,EAAUR,EAAOM,EAAcG,CAAK,EAChCD,EAAQ,aAAe,GAAI,MAAM,IAAI,MAAM,0CAA0C,CAC3F,MAAOA,EAAU,OAAO,gBAAgB,IAAI,WAAW,EAAE,CAAC,EAAE,OAE5DN,EAAU,QAAUM,EACpBN,EAAU,OAAS,GAEnBX,EAAQ,KAAK,CACX,MAAO,mCACP,MAAOiB,EACP,mBACA,SAAU,GAAGZ,CAAc,UAC7B,EAAG,CACD,MAAO,0CACP,MAAOM,EAAU,OACjB,mBACA,SAAU,GAAGN,CAAc,iBAC7B,CAAC,CACH,CAEA,GAAIK,EAAI,UAAU,OAAS,UAAW,CACpC,IAAMS,EAAQ1B,EAAO,cAAgC,4BAA4B,GAAG,MAC9E2B,EAAa3B,EAAO,cAAiC,6BAA6B,GAAG,gBAAgB,CAAC,EAAE,MAG1G4B,EACJ,GAAIF,EAAO,CACT,IAAMD,EAAQ,OAAOE,CAAU,EAE/B,GADAC,EAAKZ,EAAOU,EAAOD,CAAK,EACpBG,EAAG,aAAe,GAAI,MAAM,IAAI,MAAM,qCAAqC,CACjF,MAAOA,EAAK,OAAO,gBAAgB,IAAI,WAAW,EAAE,CAAC,EAAE,OAEvDV,EAAU,GAAKU,EAEfrB,EAAQ,KAAK,CACX,MAAO,wEACP,MAAOqB,EACP,mBACA,SAAU,GAAGhB,CAAc,KAC7B,CAAC,CACH,CAEA,GAAIK,EAAI,UAAU,OAAS,UAAW,CACpC,IAAMY,EAAQ7B,EAAO,cAAgC,4BAA4B,GAAG,MAC9E8B,EAAa9B,EAAO,cAAiC,6BAA6B,GAAG,gBAAgB,CAAC,EAAE,MACxG+B,EAA4B/B,EAAO,cAAmC,2BAA2B,EACjGgC,EAAYhC,EAAO,cAAiC,qCAAqC,GAAG,gBAAgB,CAAC,EAAE,MAErHkB,EAAU,UAAY,OAAOc,CAAS,GAAK,IAG3C,IAAIJ,EACJ,GAAIC,EAAO,CACT,IAAMJ,EAAQ,OAAOK,CAAU,EAC/BF,EAAKZ,EAAOa,EAAOJ,CAAK,CAC1B,MAAOG,EAAK,OAAO,gBAAgB,IAAI,WAAW,EAAE,CAAC,EAAE,OAYvD,GAVAV,EAAU,GAAKU,EAEfrB,EAAQ,QAAQ,CACd,MAAO,wEACP,MAAOqB,EACP,mBACA,SAAU,GAAGhB,CAAc,KAC7B,CAAC,EAGGmB,GAA2B,MAAM,OAAQ,CAC3C,IAAME,EAAkB,IAAI,YAAY,EAAG,OAAOF,GAA2B,KAAK,EAClFb,EAAU,eAAiBe,EAC3B1B,EAAQ,KAAK,CACX,MAAO,8DACP,MAAOwB,EAA0B,MACjC,oBACA,SAAU,GAAGnB,CAAc,qBAC7B,CAAC,CACH,CACF,CAEA,IAAMsB,EAAa,MAAM,OAAO,OAAO,OAAO,QAAQhB,EAAWD,EAAKb,CAAI,EAC1EG,EAAQ,QAAQ,CACd,MAAO,aAAaC,CAAM,GAC1B,MAAO0B,EACP,mBACA,SAAU7B,EAAW,GAAGA,CAAQ,OAAS,YAC3C,CAAC,EACD,KACF,CACA,IAAK,OAAQ,CACX,IAAMY,EAAMN,EAAcF,EAAYA,EAAU,WAC1CS,EAAiB,CACrB,KAAMD,EAAI,UAAU,IACtB,EAEA,GAAIA,EAAI,UAAU,OAAS,UAAW,CACpC,IAAME,EAAanB,EAAO,cAAgC,iCAAiC,GAAG,MAE1FmC,EACJ,OAASlB,EAAI,UAAkB,KAAK,KAAM,CACxC,IAAK,QAASkB,EAAa,IAAM,EAAG,MACpC,IAAK,UAAWA,EAAa,IAAM,EAAG,MACtC,IAAK,UAAWA,EAAa,IAAM,EAAG,MACtC,IAAK,UAAWA,EAAa,IAAM,EAAG,MACtC,QAASA,EAAa,CACxB,CACAjB,EAAU,WAAaC,IAAe,GAAKgB,EAAa,OAAOhB,CAAU,EAEzEZ,EAAQ,KAAK,CACX,MAAO,+DACP,MAAO,OAAOW,EAAU,UAAU,EAClC,mBACA,SAAU,GAAGN,CAAc,cAC7B,CAAC,EAKD,IAAMwB,EAAiBnB,EAAI,UAAkB,cAC7C,QAAQ,MAAM,QAAS,KAAK,MAAMmB,EAAgB,GAAK,CAAC,EAAID,EAAa,CAAC,CAC5E,CAEA,GAAIlB,EAAI,UAAU,OAAS,QAAS,CAClC,IAAMG,EAAgBpB,EAAO,cAAiC,oBAAoB,GAAG,gBAAgB,CAAC,EAAE,MACxGkB,EAAU,KAAOE,EAEjBb,EAAQ,KAAK,CACX,MAAO,yDACP,MAAO,OAAOa,CAAa,EAC3B,oBACA,SAAU,GAAGR,CAAc,OAC7B,CAAC,CACH,CAEA,IAAMyB,EAAM,MAAM,OAAO,OAAO,OAAO,KAAKnB,EAAWD,EAAKb,CAAI,EAChEG,EAAQ,QAAQ,CACd,MAAO,YAAYC,CAAM,GACzB,MAAO6B,EACP,mBACA,SAAUhC,EAAW,GAAGA,CAAQ,OAAS,WAC3C,CAAC,EACD,KACF,CACA,IAAK,UAAW,CACd,IAAMY,EAAMN,EAAcF,EAAYA,EAAU,WAC1CS,EAAiB,CACrB,KAAMD,EAAI,UAAU,IACtB,EAEA,GAAIA,EAAI,UAAU,OAAS,UAAW,CACpC,IAAMK,EAAetB,EAAO,cAAgC,gCAAgC,GAAG,MACzFuB,EAAevB,EAAO,cAAiC,yBAAyB,GAAG,gBAAgB,CAAC,EAAE,MASxGwB,EACJ,GAAIF,EAAc,CAChB,IAAMG,EAAQ,OAAOF,CAAY,EAEjC,GADAC,EAAUR,EAAOM,EAAcG,CAAK,EAChCD,EAAQ,aAAe,GAAI,MAAM,IAAI,MAAM,0CAA0C,CAC3F,KAAO,OAAM,IAAI,MAAM,gFAAgF,EAEvGN,EAAU,QAAUM,EACpBN,EAAU,OAAS,EACrB,CAEA,GAAID,EAAI,UAAU,OAAS,UAAW,CACpC,IAAMS,EAAQ1B,EAAO,cAAgC,4BAA4B,GAAG,MAC9E2B,EAAa3B,EAAO,cAAiC,6BAA6B,GAAG,gBAAgB,CAAC,EAAE,MAG1G4B,EACJ,GAAIF,EAAO,CACT,IAAMD,EAAQ,OAAOE,CAAU,EAE/B,GADAC,EAAKZ,EAAOU,EAAOD,CAAK,EACpBG,EAAG,aAAe,GAAI,MAAM,IAAI,MAAM,qCAAqC,CACjF,KAAO,OAAM,IAAI,MAAM,qFAAqF,EAE5GV,EAAU,GAAKU,CACjB,CAEA,GAAIX,EAAI,UAAU,OAAS,UAAW,CACpC,IAAMY,EAAQ7B,EAAO,cAAgC,4BAA4B,GAAG,MAC9E8B,EAAa9B,EAAO,cAAiC,6BAA6B,GAAG,gBAAgB,CAAC,EAAE,MACxG+B,EAA4B/B,EAAO,cAAmC,2BAA2B,EACjGgC,EAAYhC,EAAO,cAAiC,qCAAqC,GAAG,gBAAgB,CAAC,EAAE,MAErHkB,EAAU,UAAY,OAAOc,CAAS,GAAK,IAG3C,IAAIJ,EACJ,GAAIC,EAAO,CACT,IAAMJ,EAAQ,OAAOK,CAAU,EAC/BF,EAAKZ,EAAOa,EAAOJ,CAAK,CAC1B,KAAO,OAAM,IAAI,MAAM,qFAAqF,EAK5G,GAHAP,EAAU,GAAKU,EAGXG,GAA2B,MAAM,OAAQ,CAC3C,IAAME,EAAkB,IAAI,YAAY,EAAG,OAAOF,GAA2B,KAAK,EAClFb,EAAU,eAAiBe,CAC7B,CACF,CAEA,IAAMK,EAAY,MAAM,OAAO,OAAO,OAAO,QAAQpB,EAAWD,EAAKb,CAAI,EACzEG,EAAQ,QAAQ,CACd,MAAO,YAAYC,CAAM,GACzB,MAAO8B,EACP,oBACA,SAAUjC,EAAWA,EAAS,QAAQ,sBAAuB,EAAE,EAAI,YACnE,UAAW,IACb,CAAC,EACD,KACF,CACA,QACE,MAAM,IAAI,MAAM,aAAaF,CAAS,sBAAsB,CAChE,CAEA,OAAOI,CACT,EAMMgC,GAASvC,EAAO,cAAiC,QAAQ,EAC/DuC,IAAQ,iBAAiB,QAAS,SAAY,CAC5CC,EAAK,CAAC,EAEN,GAAI,CACF,IAAMrC,EAAYH,EAAO,cAA6B,gBAAgB,GAAG,QAAQ,GACjF,GAAI,CAACG,EAAW,MAAM,IAAI,MAAM,+BAA+B,EAE/D,IAAMsC,EAAW,OAAOzC,EAAO,cAAiC,yBAAyB,GAAG,gBAAgB,CAAC,EAAE,KAAK,EAC9GI,EAAOY,EAAOf,GAAS,MAAOwC,CAAQ,EAEtClC,EAAU,MAAML,GAAQC,EAAWC,CAAI,EAC7CsC,EAAYnC,CAAO,CACrB,OAASoC,EAAO,CAAEC,EAAYD,CAAK,CAAG,CACxC,CAAC,EAMD,IAAME,GAAgBC,GAA4B,CAGhD,GAAI,GAACA,GAAS,CAACA,EAAM,QACrB,CAAAN,EAAK,CAAC,EAEN,GAAI,CACF,IAAMrC,EAAYH,EAAO,cAA6B,gBAAgB,GAAG,QAAQ,GACjF,GAAI,CAACG,EAAW,MAAM,IAAI,MAAM,+BAA+B,EAE/D,IAAM4C,EAAO,MAAM,KAAKD,CAAK,EACvBE,EAAYD,EAAK,OAAO,CAACE,EAAMC,IAASD,EAAOC,EAAK,KAAM,CAAC,EAC3DC,EAAyB,CAAC,EAC1B5C,EAAsB,CAAC,EAE7BwC,EAAK,QAAQ,CAACG,EAAME,IAAM,CACxB,IAAMC,EAAS,IAAI,WAEnBA,EAAO,WAAcC,GAAU,CAC7BH,EAAaC,CAAC,EAAIE,EAAM,OACxBd,EAAMW,EAAa,OAAO,CAACI,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAAIR,EAAa,GAAG,CAClE,EAEAK,EAAO,OAAS,MAAOC,GAAU,CAC/B,GAAI,CAACA,EAAM,QAAQ,QAAU,EAAEA,EAAM,OAAO,kBAAkB,aAAc,CAC1EV,EAAY,IAAI,MAAM,SAASM,EAAK,IAAI,cAAcA,EAAK,IAAI,mBAAmB,CAAC,EACnF,MACF,CAEA,IAAMO,EAAQ,GAAGP,EAAK,IAAI,WAAMA,EAAK,KAAK,eAAe,CAAC,iBAAYA,EAAK,MAAQ,cAAc,GAEjG,GAAI,CACF3C,EAAQ,KAAK,MAAML,GAAQC,EAAWmD,EAAM,OAAO,OAAQJ,EAAK,KAAMO,CAAK,CAAC,CAC9E,OAASd,EAAO,CAAEC,EAAYD,CAAK,CAAG,CAElCpC,EAAQ,SAAWuC,EAAM,QAAQJ,EAAYnC,EAAQ,KAAK,CAAC,CACjE,EAEA8C,EAAO,kBAAkBH,CAAI,CAC/B,CAAC,CACH,OAASP,EAAO,CAAEC,EAAYD,CAAK,CAAG,EACxC,EAEMe,GAAS1D,EAAO,cAAgC,eAAe,EACrE0D,IAAQ,iBAAiB,SAAU,IAAMb,GAAaa,GAAO,KAAK,CAAC,EAMnEzD,GAAS,iBAAiB,OAASqD,GAAU,CAC3CT,GAAaS,EAAM,cAAc,KAAK,CACxC,CAAC,EC1XD,IAAMK,EAAkB,SAAS,cAAc,uCAAuC,EAChFC,GAAiBD,EAAgB,cAAiC,yBAAyB,EAK3FE,GAAc,IAAM,CACxB,IAAMC,EAAkBH,EAAgB,cAAiC,mCAAmC,EACtGI,EAAmBD,EAAgB,gBAAgB,CAAC,EACpDE,EAAOL,EAAgB,cAA+B,mBAAmB,EACzEM,EAASN,EAAgB,cAA+B,qBAAqB,EAC7EO,EAAOP,EAAgB,cAA+B,4BAA4B,EAClFQ,EAAkBR,EAAgB,cAA+B,yBAAyB,EAC1FS,EAAYT,EAAgB,cAA+B,mBAAmB,EAGnEA,EAAgB,iBAA8B,cAAc,EACpE,QAASU,GAAY,CACvBA,EAAQ,UAAU,SAAS,WAAW,GACzCA,EAAQ,UAAU,OAAO,QAAQ,CAErC,CAAC,EACDV,EAAgB,cAAc,aAAaI,EAAiB,QAAQ,MAAM,EAAE,GAAG,UAAU,IAAI,QAAQ,EAGrGD,EAAgB,cAAe,cAAc,QAAQ,EAAG,YAAc,oBAAeC,EAAiB,QAAQ,IAAI,GAClHC,EAAK,YAAcD,EAAiB,QAAQ,MAAQ,GACpDE,EAAO,YAAcF,EAAiB,QAAQ,QAAU,GACxDG,EAAK,YAAcH,EAAiB,QAAQ,MAAQ,GAEhDA,EAAiB,QAAQ,kBAAoB,QAC/CI,EAAgB,UAAU,OAAO,IAAI,EACrCA,EAAgB,QAAQ,QAAU,6BAElCA,EAAgB,UAAU,IAAI,IAAI,EAClCA,EAAgB,QAAQ,QAAU,+BAGhCJ,EAAiB,QAAQ,YAAc,QACzCK,EAAU,UAAU,OAAO,IAAI,EAC/BA,EAAU,QAAQ,QAAU,kCAE5BA,EAAU,UAAU,IAAI,IAAI,EAC5BA,EAAU,QAAQ,QAAU,mCAEhC,EAKAR,GAAe,iBAAiB,SAAU,IAAM,CAC9C,IAAMU,EAASV,GAAe,gBAAgB,CAAC,EAAE,MAChCD,EAAgB,iBAAiB,qBAAqB,EAE9D,QAASU,GAAYA,EAAQ,UAAU,OAAO,QAAQ,CAAC,EAChEV,EAAgB,cAAc,aAAaW,CAAM,EAAE,GAAG,UAAU,IAAI,QAAQ,EAE5ET,GAAY,CACd,CAAC,EACDF,EAAgB,iBAAiB,qBAAqB,EAAE,QAASY,GAAQA,EAAI,iBAAiB,SAAU,IAAMV,GAAY,CAAC,CAAC,EAK5H,IAAMW,GAAcC,GAA4B,CAC9C,IAAIC,EAAID,EACFE,EAAQ,CAAC,EAEf,KAAOD,EAAI,GAETC,EAAM,QAAQD,EAAI,GAAI,EAEtBA,IAAM,EAER,OAAO,IAAI,WAAWC,CAAK,CAC7B,EAKMC,GAASjB,EAAgB,cAAc,QAAQ,EACrDiB,IAAQ,iBAAiB,QAAS,SAAY,CAC5CA,GAAO,SAAW,GAClBC,EAAK,CAAC,EAGN,IAAMC,EADcnB,EAAgB,cAAgC,aAAa,EACxD,MAEnBI,EADkBJ,EAAgB,cAAiC,mCAAmC,EACnE,gBAAgB,CAAC,EAE1D,GAAI,CACF,GAAI,CAACmB,EAAM,MAAM,IAAI,MAAM,yBAAyB,EAEpD,IAAIC,EACEC,EAAuBpB,GAAe,QAAU,aAClD,CAAC,UAAW,SAAS,EACrB,CAAC,OAAQ,QAAQ,EAErB,OAAQG,EAAiB,QAAQ,OAAQ,CACvC,IAAK,MAAO,CACV,IAAMkB,EAAgB,OAAOtB,EAAgB,cAAiC,oCAAoC,GAAG,KAAK,GAAK,KACzHuB,EAAW,OAAOvB,EAAgB,cAAiC,qCAAqC,GAAG,KAAK,GAAK,MACrHwB,EAAOxB,EAAgB,cAAiC,2BAA2B,GAAG,OAAS,UAErGoB,EAAS,CACP,KAAMhB,EAAiB,QAAQ,KAAO,GACtC,cAAAkB,EACA,eAAgBT,GAAWU,CAAQ,EACnC,KAAAC,CACF,EACA,KACF,CAEA,IAAK,KAAM,CACT,IAAMC,EAAQzB,EAAgB,cAAiC,2BAA2B,GAAG,OAAS,QACtGoB,EAAS,CACP,KAAMhB,EAAiB,QAAQ,KAAO,GACtC,WAAYqB,CACd,EACA,KACF,CAEA,IAAK,OAAQ,CACX,IAAMD,EAAOxB,EAAgB,cAAiC,4BAA4B,GAAG,OAAS,UACtGoB,EAAS,CACP,KAAMhB,EAAiB,QAAQ,KAAO,GACtC,KAAAoB,CACF,EACA,KACF,CAEA,IAAK,MAAO,CACV,IAAME,EAAS,OAAO1B,EAAgB,cAAiC,iCAAiC,GAAG,KAAK,GAAK,IACrHoB,EAAS,CACP,KAAMhB,EAAiB,QAAQ,KAAO,GACtC,OAAAsB,CACF,EACA,KACF,CAEA,QACE,MAAM,IAAI,MAAM,wBAAwB,CAC5C,CAEA,IAAMC,EAAc3B,EAAgB,cAAgC,oBAAoB,GAAG,SAAW,GAChG4B,EAAM,MAAM,OAAO,OAAO,OAAO,YAAYR,EAAQO,EAAaN,CAAQ,EAC1EQ,EAAU7B,EAAgB,cAAgC,aAAa,GAAG,QAChF8B,GAAOX,EAAMS,EAAKC,CAAO,CAC3B,OAASE,EAAG,CACVC,EAAYD,CAAC,EACbd,GAAO,SAAW,GAClB,MACF,CAGAjB,EAAgB,cAA+B,MAAM,GAAG,MAAM,EAC9D,IAAMiC,EAAQ,IAAI,MAAM,QAAQ,EAChChC,GAAe,cAAcgC,CAAK,EAClChB,GAAO,SAAW,EACpB,CAAC,ECxID,IAAAiB,EAA2B,SCiB3B,SAASC,GAAaC,EAAaC,EAAW,CAC1C,IAAIC,EAAS,EACb,GAAIF,EAAY,SAAW,EACvB,OAAOA,EAAY,CAAC,EAExB,QAASG,EAAKH,EAAY,OAAS,EAAIG,GAAK,EAAGA,IAC3CD,GAAUF,EAAaA,EAAY,OAAS,EAAKG,CAAC,EAAI,KAAK,IAAI,EAAGF,EAAYE,CAAC,EAEnF,OAAOD,CACX,CACA,SAASE,GAAWC,EAAOC,EAAMC,EAAY,GAAK,CAC9C,IAAMC,EAAmBD,EACrBE,EAAgBJ,EAChBH,EAAS,EACTQ,EAAU,KAAK,IAAI,EAAGJ,CAAI,EAC9B,QAASH,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,GAAIE,EAAQK,EAAS,CACjB,IAAIC,EACJ,GAAIH,EAAmB,EACnBG,EAAS,IAAI,YAAYR,CAAC,EAC1BD,EAASC,MAER,CACD,GAAIK,EAAmBL,EACnB,OAAQ,IAAI,YAAY,CAAC,EAE7BQ,EAAS,IAAI,YAAYH,CAAgB,EACzCN,EAASM,CACb,CACA,IAAMI,EAAU,IAAI,WAAWD,CAAM,EACrC,QAASE,EAAKV,EAAI,EAAIU,GAAK,EAAGA,IAAK,CAC/B,IAAMC,EAAQ,KAAK,IAAI,EAAGD,EAAIP,CAAI,EAClCM,EAAQV,EAASW,EAAI,CAAC,EAAI,KAAK,MAAMJ,EAAgBK,CAAK,EAC1DL,GAAkBG,EAAQV,EAASW,EAAI,CAAC,EAAKC,CACjD,CACA,OAAOH,CACX,CACAD,GAAW,KAAK,IAAI,EAAGJ,CAAI,CAC/B,CACA,OAAO,IAAI,YAAY,CAAC,CAC5B,CAeA,SAASS,MAAkBC,EAAO,CAC9B,IAAIC,EAAe,EACfC,EAAa,EACjB,QAAWC,KAAQH,EACfC,GAAgBE,EAAK,OAEzB,IAAMC,EAAS,IAAI,YAAYH,CAAY,EACrCI,EAAU,IAAI,WAAWD,CAAM,EACrC,QAAWD,KAAQH,EACfK,EAAQ,IAAIF,EAAMD,CAAU,EAC5BA,GAAcC,EAAK,OAEvB,OAAOE,CACX,CACA,SAASC,IAAe,CACpB,IAAMC,EAAM,IAAI,WAAW,KAAK,QAAQ,EACxC,GAAI,KAAK,SAAS,YAAc,EAAG,CAC/B,IAAMC,EAAcD,EAAI,CAAC,IAAM,KAAUA,EAAI,CAAC,EAAI,IAC5CE,EAAcF,EAAI,CAAC,IAAM,IAAWA,EAAI,CAAC,EAAI,OAAU,GACzDC,GAAcC,IACd,KAAK,SAAS,KAAK,wBAAwB,CAEnD,CACA,IAAMC,EAAe,IAAI,YAAY,KAAK,SAAS,UAAU,EACvDC,EAAa,IAAI,WAAWD,CAAY,EAC9C,QAASE,EAAI,EAAGA,EAAI,KAAK,SAAS,WAAYA,IAC1CD,EAAWC,CAAC,EAAI,EAEpBD,EAAW,CAAC,EAAKJ,EAAI,CAAC,EAAI,IAC1B,IAAMM,EAASC,GAAaH,EAAY,CAAC,EACnCI,EAAiB,IAAI,YAAY,KAAK,SAAS,UAAU,EACzDC,EAAe,IAAI,WAAWD,CAAc,EAClD,QAASE,EAAI,EAAGA,EAAI,KAAK,SAAS,WAAYA,IAC1CD,EAAaC,CAAC,EAAIV,EAAIU,CAAC,EAE3B,OAAAD,EAAa,CAAC,GAAK,IACFF,GAAaE,EAAc,CAAC,EAC1BH,CACvB,CACA,SAASK,GAAaC,EAAO,CACzB,IAAMC,EAAYD,EAAQ,EAAMA,EAAS,GAAOA,EAC5CN,EAAS,IACb,QAASD,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,GAAIQ,GAAYP,EAAQ,CACpB,GAAIM,EAAQ,EAAG,CACX,IAAME,EAAWR,EAASO,EACpBhB,EAASkB,GAAWD,EAAU,EAAGT,CAAC,EAClCP,EAAU,IAAI,WAAWD,CAAM,EACrC,OAAAC,EAAQ,CAAC,GAAK,IACPD,CACX,CACA,IAAIA,EAASkB,GAAWF,EAAU,EAAGR,CAAC,EAClCP,EAAU,IAAI,WAAWD,CAAM,EACnC,GAAIC,EAAQ,CAAC,EAAI,IAAM,CACnB,IAAMkB,EAAUnB,EAAO,MAAM,CAAC,EACxBoB,EAAW,IAAI,WAAWD,CAAO,EACvCnB,EAAS,IAAI,YAAYA,EAAO,WAAa,CAAC,EAC9CC,EAAU,IAAI,WAAWD,CAAM,EAC/B,QAASqB,EAAI,EAAGA,EAAIF,EAAQ,WAAYE,IACpCpB,EAAQoB,EAAI,CAAC,EAAID,EAASC,CAAC,EAE/BpB,EAAQ,CAAC,EAAI,CACjB,CACA,OAAOD,CACX,CACAS,GAAU,KAAK,IAAI,EAAG,CAAC,CAC3B,CACA,OAAQ,IAAI,YAAY,CAAC,CAC7B,CACA,SAASa,GAAcC,EAAcC,EAAc,CAC/C,GAAID,EAAa,aAAeC,EAAa,WACzC,MAAO,GAEX,IAAMC,EAAQ,IAAI,WAAWF,CAAY,EACnCG,EAAQ,IAAI,WAAWF,CAAY,EACzC,QAAShB,EAAI,EAAGA,EAAIiB,EAAM,OAAQjB,IAC9B,GAAIiB,EAAMjB,CAAC,IAAMkB,EAAMlB,CAAC,EACpB,MAAO,GAGf,MAAO,EACX,CACA,SAASmB,EAAUC,EAAaC,EAAY,CACxC,IAAMC,EAAMF,EAAY,SAAS,EAAE,EACnC,GAAIC,EAAaC,EAAI,OACjB,MAAO,GAEX,IAAMC,EAAMF,EAAaC,EAAI,OACvBE,EAAU,IAAI,MAAMD,CAAG,EAC7B,QAAS,EAAI,EAAG,EAAIA,EAAK,IACrBC,EAAQ,CAAC,EAAI,IAGjB,OADsBA,EAAQ,KAAK,EAAE,EAChB,OAAOF,CAAG,CACnC,CA6HA,IAAMG,GAAO,KAAK,IAAI,CAAC,EDhSvB,SAASC,IAAe,CACpB,GAAI,OAAO,OAAW,IAClB,MAAM,IAAI,MAAM,mEAAmE,CAE3F,CACA,SAASC,GAAOC,EAAS,CACrB,IAAIC,EAAe,EACfC,EAAa,EACjB,QAASC,EAAI,EAAGA,EAAIH,EAAQ,OAAQG,IAAK,CACrC,IAAMC,EAASJ,EAAQG,CAAC,EACxBF,GAAgBG,EAAO,UAC3B,CACA,IAAMC,EAAU,IAAI,WAAWJ,CAAY,EAC3C,QAASE,EAAI,EAAGA,EAAIH,EAAQ,OAAQG,IAAK,CACrC,IAAMC,EAASJ,EAAQG,CAAC,EACxBE,EAAQ,IAAI,IAAI,WAAWD,CAAM,EAAGF,CAAU,EAC9CA,GAAcE,EAAO,UACzB,CACA,OAAOC,EAAQ,MACnB,CACA,SAASC,GAAkBC,EAAWC,EAAaC,EAAaC,EAAa,CACzE,OAAMF,aAAuB,WAIxBA,EAAY,WAIbC,EAAc,GACdF,EAAU,MAAQ,8CACX,IAEPG,EAAc,GACdH,EAAU,MAAQ,8CACX,IAENC,EAAY,WAAaC,EAAcC,EAAe,GACvDH,EAAU,MAAQ,gGACX,IAEJ,IAfHA,EAAU,MAAQ,+CACX,KALPA,EAAU,MAAQ,oDACX,GAmBf,CAEA,IAAMI,GAAN,KAAiB,CACb,aAAc,CACV,KAAK,MAAQ,CAAC,CAClB,CACA,MAAMC,EAAK,CACP,KAAK,MAAM,KAAKA,CAAG,CACvB,CACA,OAAQ,CACJ,OAAOb,GAAO,KAAK,KAAK,CAC5B,CACJ,EAEMc,GAAU,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAC9BC,GAAe,aACfC,GAAO,OACPC,GAAiB,eACjBC,GAAc,YACdC,GAAW,UACXC,GAAY,WACZC,GAAa,YACbC,GAAiB,gBACjBC,GAAW,UACXC,GAAS,QACTC,GAAQ,QACRC,EAAe,GACfC,GAAe,IAAI,YAAY,CAAC,EAChCC,GAAa,IAAI,WAAW,CAAC,EAC7BC,GAAsB,eACtBC,GAAoB,eACpBC,GAAkB,aAExB,SAASC,GAASC,EAAW,CACzB,IAAIC,EACJ,OAAOA,EAAK,cAAmBD,CAAU,CACjC,eAAeE,EAAM,CACjB,IAAID,EACJ,MAAM,GAAGC,CAAI,EACb,IAAMC,EAASD,EAAK,CAAC,GAAK,CAAC,EAC3B,KAAK,WAAaD,EAAKE,EAAO,aAAe,MAAQF,IAAO,OAASA,EAAK,GAC1E,KAAK,aAAeE,EAAO,SAAqB,wBAAsB,aAAaA,EAAO,QAAQ,EAAIR,EAC1G,CACA,IAAI,UAAW,CACX,OAAO,KAAK,aAAa,MAAM,EAAE,MACrC,CACA,IAAI,SAASS,EAAO,CAChB,KAAK,aAAe,IAAI,WAAWA,CAAK,CAC5C,CACA,QAAQ5B,EAAaC,EAAaC,EAAa,CAC3C,IAAM2B,EAAO7B,aAAuB,YAAc,IAAI,WAAWA,CAAW,EAAIA,EAChF,GAAI,CAACF,GAAkB,KAAM+B,EAAM5B,EAAaC,CAAW,EACvD,MAAO,GAEX,IAAM4B,EAAY7B,EAAcC,EAEhC,OADA,KAAK,aAAe2B,EAAK,SAAS5B,EAAa6B,CAAS,EACnD,KAAK,aAAa,QAIvB,KAAK,YAAc5B,EACZ4B,IAJH,KAAK,SAAS,KAAK,oBAAoB,EAChC7B,EAIf,CACA,MAAM8B,EAAW,GAAO,CACpB,OAAK,KAAK,UAINA,EACO,IAAI,YAAY,KAAK,aAAa,UAAU,EAE/C,KAAK,aAAa,aAAe,KAAK,aAAa,OAAO,WAC5D,KAAK,aAAa,OAClB,KAAK,aAAa,MAAM,EAAE,QAR5B,KAAK,MAAQ,qCACNb,GAQf,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,UAAW,KAAK,UAChB,SAAoB,UAAQ,MAAM,KAAK,YAAY,CACvD,CACJ,CACJ,EACAO,EAAG,KAAO,WACVA,CACR,CAEA,IAAMO,GAAN,KAAqB,CACjB,YAAY,CAAE,YAAAC,EAAc,EAAG,MAAAC,EAAQjB,EAAc,SAAAkB,EAAW,CAAC,EAAG,kBAAAC,EAAoBjB,EAAY,EAAI,CAAC,EAAG,CACxG,KAAK,YAAcc,EACnB,KAAK,MAAQC,EACb,KAAK,SAAWC,EAChB,KAAK,sBAAkC,wBAAsB,aAAaC,CAAiB,CAC/F,CACA,OAAO,WAAY,CACf,OAAO,KAAK,IAChB,CACA,IAAI,mBAAoB,CACpB,OAAO,KAAK,sBAAsB,MAAM,EAAE,MAC9C,CACA,IAAI,kBAAkBR,EAAO,CACzB,KAAK,sBAAwB,IAAI,WAAWA,CAAK,CACrD,CACA,QAAS,CACL,MAAO,CACH,UAAW,KAAK,YAAY,KAC5B,YAAa,KAAK,YAClB,MAAO,KAAK,MACZ,SAAU,KAAK,SACf,kBAA6B,UAAQ,MAAM,KAAK,qBAAqB,CACzE,CACJ,CACJ,EACAI,GAAe,KAAO,YAEtB,IAAMK,EAAN,cAAyBL,EAAe,CACpC,QAAQhC,EAAaC,EAAaC,EAAa,CAC3C,MAAM,UAAU,6EAA6E,CACjG,CACA,MAAM6B,EAAUO,EAAQ,CACpB,MAAM,UAAU,6EAA6E,CACjG,CACJ,EACAD,EAAW,KAAO,aAElB,IAAME,GAAN,cAAuChB,GAASS,EAAc,CAAE,CAC5D,YAAY,CAAE,QAAAQ,EAAU,CAAC,CAAG,EAAI,CAAC,EAAG,CAChC,IAAIf,EAAIgB,EAAIC,EAAIC,EAChB,MAAM,EACFH,GACA,KAAK,WAAaf,EAAKe,EAAQ,aAAe,MAAQf,IAAO,OAASA,EAAK,GAC3E,KAAK,aAAee,EAAQ,SAAqB,wBAAsB,aAAaA,EAAQ,QAAQ,EAAIrB,GACxG,KAAK,UAAYsB,EAAKD,EAAQ,YAAc,MAAQC,IAAO,OAASA,EAAK,GACzE,KAAK,WAAaC,EAAKF,EAAQ,aAAe,MAAQE,IAAO,OAASA,EAAK,GAC3E,KAAK,eAAiBC,EAAKH,EAAQ,iBAAmB,MAAQG,IAAO,OAASA,EAAK,KAGnF,KAAK,SAAW,GAChB,KAAK,UAAY,GACjB,KAAK,cAAgB,GAE7B,CACA,MAAMZ,EAAW,GAAO,CACpB,IAAIa,EAAa,EACjB,OAAQ,KAAK,SAAU,CACnB,IAAK,GACDA,GAAc,EACd,MACJ,IAAK,GACDA,GAAc,GACd,MACJ,IAAK,GACDA,GAAc,IACd,MACJ,IAAK,GACDA,GAAc,IACd,MACJ,QACI,YAAK,MAAQ,oBACN1B,EACf,CAGA,GAFI,KAAK,gBACL0B,GAAc,IACd,KAAK,UAAY,IAAM,CAAC,KAAK,UAAW,CACxC,IAAM/C,EAAU,IAAI,WAAW,CAAC,EAChC,GAAI,CAACkC,EAAU,CACX,IAAIc,EAAS,KAAK,UAClBA,GAAU,GACVD,GAAcC,EACdhD,EAAQ,CAAC,EAAI+C,CACjB,CACA,OAAO/C,EAAQ,MACnB,CACA,GAAI,CAAC,KAAK,UAAW,CACjB,IAAMiD,EAAqBC,GAAW,KAAK,UAAW,CAAC,EACjDC,EAAc,IAAI,WAAWF,CAAU,EACvCG,EAAOH,EAAW,WAClBjD,EAAU,IAAI,WAAWoD,EAAO,CAAC,EAEvC,GADApD,EAAQ,CAAC,EAAK+C,EAAa,GACvB,CAACb,EAAU,CACX,QAASpC,EAAI,EAAGA,EAAKsD,EAAO,EAAItD,IAC5BE,EAAQF,EAAI,CAAC,EAAIqD,EAAYrD,CAAC,EAAI,IACtCE,EAAQoD,CAAI,EAAID,EAAYC,EAAO,CAAC,CACxC,CACA,OAAOpD,EAAQ,MACnB,CACA,IAAMA,EAAU,IAAI,WAAW,KAAK,aAAa,WAAa,CAAC,EAE/D,GADAA,EAAQ,CAAC,EAAK+C,EAAa,GACvB,CAACb,EAAU,CACX,IAAMmB,EAAU,KAAK,aACrB,QAASvD,EAAI,EAAGA,EAAKuD,EAAQ,OAAS,EAAIvD,IACtCE,EAAQF,EAAI,CAAC,EAAIuD,EAAQvD,CAAC,EAAI,IAClCE,EAAQ,KAAK,aAAa,UAAU,EAAIqD,EAAQA,EAAQ,OAAS,CAAC,CACtE,CACA,OAAOrD,EAAQ,MACnB,CACA,QAAQG,EAAaC,EAAaC,EAAa,CAC3C,IAAMiD,EAAsB,wBAAsB,aAAanD,CAAW,EAC1E,GAAI,CAACF,GAAkB,KAAMqD,EAAWlD,EAAaC,CAAW,EAC5D,MAAO,GAEX,IAAMkD,EAAYD,EAAU,SAASlD,EAAaA,EAAcC,CAAW,EAC3E,GAAIkD,EAAU,SAAW,EACrB,YAAK,MAAQ,qBACN,GAGX,OADqBA,EAAU,CAAC,EAAI,IACd,CAClB,IAAK,GACD,KAAK,SAAY,EACjB,MACJ,IAAK,IACD,KAAK,SAAY,EACjB,MACJ,IAAK,KACD,KAAK,SAAY,EACjB,MACJ,IAAK,KACD,KAAK,SAAY,EACjB,MACJ,QACI,YAAK,MAAQ,oBACN,EACf,CACA,KAAK,eAAiBA,EAAU,CAAC,EAAI,MAAU,GAC/C,KAAK,UAAY,GACjB,IAAMC,EAAgBD,EAAU,CAAC,EAAI,GACrC,GAAIC,IAAkB,GAClB,KAAK,UAAaA,EAClB,KAAK,YAAc,MAElB,CACD,IAAIC,EAAQ,EACRC,EAAqB,KAAK,aAAe,IAAI,WAAW,GAAG,EAC3DC,EAA2B,IAC/B,KAAOJ,EAAUE,CAAK,EAAI,KAAM,CAG5B,GAFAC,EAAmBD,EAAQ,CAAC,EAAIF,EAAUE,CAAK,EAAI,IACnDA,IACIA,GAASF,EAAU,OACnB,YAAK,MAAQ,wDACN,GAEX,GAAIE,IAAUE,EAA0B,CACpCA,GAA4B,IAC5B,IAAMC,EAAiB,IAAI,WAAWD,CAAwB,EAC9D,QAAS7D,EAAI,EAAGA,EAAI4D,EAAmB,OAAQ5D,IAC3C8D,EAAe9D,CAAC,EAAI4D,EAAmB5D,CAAC,EAC5C4D,EAAqB,KAAK,aAAe,IAAI,WAAWC,CAAwB,CACpF,CACJ,CACA,KAAK,YAAeF,EAAQ,EAC5BC,EAAmBD,EAAQ,CAAC,EAAIF,EAAUE,CAAK,EAAI,IACnD,IAAMG,EAAiB,IAAI,WAAWH,CAAK,EAC3C,QAAS3D,EAAI,EAAGA,EAAI2D,EAAO3D,IACvB8D,EAAe9D,CAAC,EAAI4D,EAAmB5D,CAAC,EAC5C4D,EAAqB,KAAK,aAAe,IAAI,WAAWD,CAAK,EAC7DC,EAAmB,IAAIE,CAAc,EACjC,KAAK,aAAe,EACpB,KAAK,UAAoBC,GAAaH,EAAoB,CAAC,GAE3D,KAAK,UAAY,GACjB,KAAK,SAAS,KAAK,wCAAwC,EAEnE,CACA,GAAM,KAAK,WAAa,GACnB,KAAK,cACN,OAAQ,KAAK,UAAW,CACpB,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,YAAK,MAAQ,+CACN,EACf,CAEJ,OAAQtD,EAAc,KAAK,WAC/B,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,SAAU,KAAK,SACf,UAAW,KAAK,UAChB,cAAe,KAAK,aACxB,CACJ,CACJ,EACAsC,GAAyB,KAAO,sBAEhC,IAAMoB,GAAN,cAA+B3B,EAAe,CAC1C,YAAY,CAAE,SAAA4B,EAAW,CAAC,CAAG,EAAI,CAAC,EAAG,CACjC,IAAInC,EAAIgB,EAAIC,EACZ,MAAM,EACN,KAAK,kBAAoBjB,EAAKmC,EAAS,oBAAsB,MAAQnC,IAAO,OAASA,EAAK,GAC1F,KAAK,cAAgBgB,EAAKmB,EAAS,gBAAkB,MAAQnB,IAAO,OAASA,EAAK,GAClF,KAAK,QAAUC,EAAKkB,EAAS,UAAY,MAAQlB,IAAO,OAASA,EAAK,CAC1E,CACA,QAAQ1C,EAAaC,EAAaC,EAAa,CAC3C,IAAM2B,EAAiB,wBAAsB,aAAa7B,CAAW,EACrE,GAAI,CAACF,GAAkB,KAAM+B,EAAM5B,EAAaC,CAAW,EACvD,MAAO,GAEX,IAAMkD,EAAYvB,EAAK,SAAS5B,EAAaA,EAAcC,CAAW,EACtE,GAAIkD,EAAU,SAAW,EACrB,YAAK,MAAQ,qBACN,GAEX,GAAIA,EAAU,CAAC,IAAM,IACjB,YAAK,MAAQ,4CACN,GAGX,GADA,KAAK,iBAAmBA,EAAU,CAAC,IAAM,IACrC,KAAK,iBACL,YAAK,YAAc,EACXnD,EAAc,KAAK,YAG/B,GADA,KAAK,aAAe,CAAC,EAAEmD,EAAU,CAAC,EAAI,KAClC,KAAK,eAAiB,GACtB,YAAK,OAAUA,EAAU,CAAC,EAC1B,KAAK,YAAc,EACXnD,EAAc,KAAK,YAE/B,IAAMqD,EAAQF,EAAU,CAAC,EAAI,IAC7B,GAAIE,EAAQ,EACR,YAAK,MAAQ,kBACN,GAEX,GAAKA,EAAQ,EAAKF,EAAU,OACxB,YAAK,MAAQ,wDACN,GAEX,IAAMS,EAAY5D,EAAc,EAC1B6D,EAAmBjC,EAAK,SAASgC,EAAWA,EAAYP,CAAK,EACnE,OAAIQ,EAAiBR,EAAQ,CAAC,IAAM,GAChC,KAAK,SAAS,KAAK,gCAAgC,EACvD,KAAK,OAAiBI,GAAaI,EAAkB,CAAC,EAClD,KAAK,cAAiB,KAAK,QAAU,KACrC,KAAK,SAAS,KAAK,uCAAuC,EAC9D,KAAK,YAAcR,EAAQ,EACnBrD,EAAc,KAAK,WAC/B,CACA,MAAM8B,EAAW,GAAO,CACpB,IAAIgC,EACAlE,EAGJ,GAFI,KAAK,OAAS,MACd,KAAK,aAAe,IACpB,KAAK,iBACL,OAAAkE,EAAS,IAAI,YAAY,CAAC,EACtBhC,IAAa,KACblC,EAAU,IAAI,WAAWkE,CAAM,EAC/BlE,EAAQ,CAAC,EAAI,KAEVkE,EAEX,GAAI,KAAK,aAAc,CACnB,IAAMjB,EAAqBC,GAAW,KAAK,OAAQ,CAAC,EACpD,GAAID,EAAW,WAAa,IACxB,YAAK,MAAQ,iBACL5B,GAGZ,GADA6C,EAAS,IAAI,YAAYjB,EAAW,WAAa,CAAC,EAC9Cf,EACA,OAAOgC,EACX,IAAMf,EAAc,IAAI,WAAWF,CAAU,EAC7CjD,EAAU,IAAI,WAAWkE,CAAM,EAC/BlE,EAAQ,CAAC,EAAIiD,EAAW,WAAa,IACrC,QAAS,EAAI,EAAG,EAAIA,EAAW,WAAY,IACvCjD,EAAQ,EAAI,CAAC,EAAImD,EAAY,CAAC,EAClC,OAAOe,CACX,CACA,OAAAA,EAAS,IAAI,YAAY,CAAC,EACtBhC,IAAa,KACblC,EAAU,IAAI,WAAWkE,CAAM,EAC/BlE,EAAQ,CAAC,EAAI,KAAK,QAEfkE,CACX,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,iBAAkB,KAAK,iBACvB,aAAc,KAAK,aACnB,OAAQ,KAAK,MACjB,CACJ,CACJ,EACAJ,GAAiB,KAAO,cAExB,IAAMK,EAAY,CAAC,EAEbC,EAAN,cAAwBjC,EAAe,CACnC,YAAY,CAAE,KAAAkC,EAAOjD,EAAc,SAAAkD,EAAW,GAAO,gBAAAC,EAAiB,GAAGC,CAAW,EAAI,CAAC,EAAGC,EAAgB,CACxG,MAAMD,CAAU,EAChB,KAAK,KAAOH,EACZ,KAAK,SAAWC,EACZC,IACA,KAAK,gBAAkBA,GAE3B,KAAK,QAAU,IAAI7B,GAAyB8B,CAAU,EACtD,KAAK,SAAW,IAAIV,GAAiBU,CAAU,EAC/C,KAAK,WAAaC,EAAiB,IAAIA,EAAeD,CAAU,EAAI,IAAIhC,EAAWgC,CAAU,CACjG,CACA,QAAQrE,EAAaC,EAAaC,EAAa,CAC3C,IAAMqE,EAAe,KAAK,WAAW,QAAQvE,EAAaC,EAAc,KAAK,SAAS,iBAAoBC,EAAc,KAAK,SAAS,MAAM,EAC5I,OAAIqE,IAAiB,IACjB,KAAK,MAAQ,KAAK,WAAW,MACtBA,IAEN,KAAK,QAAQ,MAAM,SACpB,KAAK,aAAe,KAAK,QAAQ,aAChC,KAAK,SAAS,MAAM,SACrB,KAAK,aAAe,KAAK,SAAS,aACjC,KAAK,WAAW,MAAM,SACvB,KAAK,aAAe,KAAK,WAAW,aACjCA,EACX,CACA,MAAMxC,EAAUO,EAAQ,CACpB,IAAMkC,EAAUlC,GAAU,IAAInC,GACzBmC,GACDmC,GAAsB,IAAI,EAE9B,IAAMC,EAAa,KAAK,QAAQ,MAAM3C,CAAQ,EAE9C,GADAyC,EAAQ,MAAME,CAAU,EACpB,KAAK,SAAS,iBACdF,EAAQ,MAAM,IAAI,WAAW,CAAC,GAAI,CAAC,EAAE,MAAM,EAC3C,KAAK,WAAW,MAAMzC,EAAUyC,CAAO,EACvCA,EAAQ,MAAM,IAAI,YAAY,CAAC,CAAC,MAE/B,CACD,IAAMG,EAAgB,KAAK,WAAW,MAAM5C,CAAQ,EACpD,KAAK,SAAS,OAAS4C,EAAc,WACrC,IAAMC,EAAc,KAAK,SAAS,MAAM7C,CAAQ,EAChDyC,EAAQ,MAAMI,CAAW,EACzBJ,EAAQ,MAAMG,CAAa,CAC/B,CACA,OAAKrC,EAGEpB,GAFIsD,EAAQ,MAAM,CAG7B,CACA,QAAS,CACL,IAAMK,EAAS,CACX,GAAG,MAAM,OAAO,EAChB,QAAS,KAAK,QAAQ,OAAO,EAC7B,SAAU,KAAK,SAAS,OAAO,EAC/B,WAAY,KAAK,WAAW,OAAO,EACnC,KAAM,KAAK,KACX,SAAU,KAAK,QACnB,EACA,OAAI,KAAK,kBACLA,EAAO,gBAAkB,KAAK,gBAAgB,OAAO,GAClDA,CACX,CACA,SAASC,EAAW,QAAS,CACzB,OAAIA,IAAa,QACN,KAAK,gBAAgB,EAEf,UAAQ,MAAM,KAAK,MAAM,CAAC,CAC/C,CACA,iBAAkB,CACd,MAAO,GAAG,KAAK,YAAY,IAAI,MAAgB,UAAQ,MAAM,KAAK,WAAW,qBAAqB,CAAC,EACvG,CACA,QAAQC,EAAO,CACX,GAAI,OAASA,EACT,MAAO,GAEX,GAAI,EAAEA,aAAiB,KAAK,aACxB,MAAO,GAEX,IAAMC,EAAU,KAAK,MAAM,EACrBC,EAAWF,EAAM,MAAM,EAC7B,OAAeG,GAAcF,EAASC,CAAQ,CAClD,CACJ,EACAhB,EAAU,KAAO,YACjB,SAASQ,GAAsB1E,EAAW,CACtC,GAAIA,aAAqBiE,EAAU,YAC/B,QAAWpC,KAAS7B,EAAU,WAAW,MACjC0E,GAAsB7C,CAAK,IAC3B7B,EAAU,SAAS,iBAAmB,IAIlD,MAAO,CAAC,CAACA,EAAU,SAAS,gBAChC,CAEA,IAAMoF,GAAN,cAA8BlB,CAAU,CACpC,YAAY,CAAE,MAAArC,EAAQX,EAAc,GAAGoD,CAAW,EAAI,CAAC,EAAGe,EAAsB,CAC5E,MAAMf,EAAYe,CAAoB,EAClCxD,GACA,KAAK,WAAWA,CAAK,CAE7B,CACA,UAAW,CACP,OAAO,KAAK,WAAW,KAC3B,CACA,SAASA,EAAO,CACZ,KAAK,WAAW,MAAQA,CAC5B,CACA,QAAQ5B,EAAaC,EAAaC,EAAa,CAC3C,IAAMqE,EAAe,KAAK,WAAW,QAAQvE,EAAaC,EAAc,KAAK,SAAS,iBAAoBC,EAAc,KAAK,SAAS,MAAM,EAC5I,OAAIqE,IAAiB,IACjB,KAAK,MAAQ,KAAK,WAAW,MACtBA,IAEX,KAAK,WAAW,KAAK,WAAW,YAAY,EACvC,KAAK,QAAQ,MAAM,SACpB,KAAK,aAAe,KAAK,QAAQ,aAChC,KAAK,SAAS,MAAM,SACrB,KAAK,aAAe,KAAK,SAAS,aACjC,KAAK,WAAW,MAAM,SACvB,KAAK,aAAe,KAAK,WAAW,aACjCA,EACX,CACA,iBAAkB,CACd,MAAO,GAAG,KAAK,YAAY,IAAI,OAAO,KAAK,WAAW,KAAK,GAC/D,CACJ,EACAY,GAAgB,KAAO,kBAEvB,IAAME,GAAN,cAAuC9D,GAASc,CAAU,CAAE,CACxD,YAAY,CAAE,UAAAiD,EAAY,GAAM,GAAGjB,CAAW,EAAI,CAAC,EAAG,CAClD,MAAMA,CAAU,EAChB,KAAK,UAAYiB,CACrB,CACJ,EACAD,GAAyB,KAAO,sBAEhC,IAAIE,GACEC,GAAN,cAAwBvB,CAAU,CAC9B,YAAYI,EAAa,CAAC,EAAG,CACzB,MAAMA,EAAYgB,EAAwB,EAC1C,KAAK,QAAQ,cAAgB,EACjC,CACJ,EACAE,GAAOC,GAEHxB,EAAU,UAAYuB,GAE1BC,GAAU,KAAO,YAEjB,SAASC,GAAgBC,EAAaC,EAAS,CAC3C,GAAID,aAAuBC,EACvB,OAAOD,EAEX,IAAME,EAAY,IAAID,EACtB,OAAAC,EAAU,QAAUF,EAAY,QAChCE,EAAU,SAAWF,EAAY,SACjCE,EAAU,SAAWF,EAAY,SACjCE,EAAU,sBAAwBF,EAAY,sBACvCE,CACX,CACA,SAASC,GAAa7F,EAAaC,EAAc,EAAGC,EAAcF,EAAY,OAAQ,CAClF,IAAM8F,EAAiB7F,EACnB8F,EAAe,IAAI9B,EAAU,CAAC,EAAG5B,CAAU,EACzCtC,EAAY,IAAIiC,GACtB,GAAI,CAAClC,GAAkBC,EAAWC,EAAaC,EAAaC,CAAW,EACnE,OAAA6F,EAAa,MAAQhG,EAAU,MACxB,CACH,OAAQ,GACR,OAAQgG,CACZ,EAGJ,GAAI,CADc/F,EAAY,SAASC,EAAaA,EAAcC,CAAW,EAC9D,OACX,OAAA6F,EAAa,MAAQ,qBACd,CACH,OAAQ,GACR,OAAQA,CACZ,EAEJ,IAAIxB,EAAewB,EAAa,QAAQ,QAAQ/F,EAAaC,EAAaC,CAAW,EAIrF,GAHI6F,EAAa,QAAQ,SAAS,QAC9BA,EAAa,SAAS,OAAOA,EAAa,QAAQ,QAAQ,EAE1DxB,IAAiB,GACjB,OAAAwB,EAAa,MAAQA,EAAa,QAAQ,MACnC,CACH,OAAQ,GACR,OAAQA,CACZ,EAQJ,GANA9F,EAAcsE,EACdrE,GAAe6F,EAAa,QAAQ,YACpCxB,EAAewB,EAAa,SAAS,QAAQ/F,EAAaC,EAAaC,CAAW,EAC9E6F,EAAa,SAAS,SAAS,QAC/BA,EAAa,SAAS,OAAOA,EAAa,SAAS,QAAQ,EAE3DxB,IAAiB,GACjB,OAAAwB,EAAa,MAAQA,EAAa,SAAS,MACpC,CACH,OAAQ,GACR,OAAQA,CACZ,EAIJ,GAFA9F,EAAcsE,EACdrE,GAAe6F,EAAa,SAAS,YACjC,CAACA,EAAa,QAAQ,eACtBA,EAAa,SAAS,iBACtB,OAAAA,EAAa,MAAQ,0DACd,CACH,OAAQ,GACR,OAAQA,CACZ,EAEJ,IAAIC,EAAc/B,EAClB,OAAQ8B,EAAa,QAAQ,SAAU,CACnC,IAAK,GACD,GAAKA,EAAa,QAAQ,WAAa,IAClCA,EAAa,QAAQ,YAAc,GACpC,OAAAA,EAAa,MAAQ,6DACd,CACH,OAAQ,GACR,OAAQA,CACZ,EAEJ,OAAQA,EAAa,QAAQ,UAAW,CACpC,IAAK,GACD,GAAKA,EAAa,QAAQ,eACrBA,EAAa,SAAS,OAAS,EAChC,OAAAA,EAAa,MAAQ,iCACd,CACH,OAAQ,GACR,OAAQA,CACZ,EAEJC,EAAchC,EAAU,aACxB,MACJ,IAAK,GACDgC,EAAchC,EAAU,QACxB,MACJ,IAAK,GACDgC,EAAchC,EAAU,QACxB,MACJ,IAAK,GACDgC,EAAchC,EAAU,UACxB,MACJ,IAAK,GACDgC,EAAchC,EAAU,YACxB,MACJ,IAAK,GACDgC,EAAchC,EAAU,KACxB,MACJ,IAAK,GACDgC,EAAchC,EAAU,iBACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,WACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,WACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,yBACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,KACxB,MACJ,IAAK,IACD,OAAA+B,EAAa,MAAQ,+CACd,CACH,OAAQ,GACR,OAAQA,CACZ,EACJ,IAAK,IACDC,EAAchC,EAAU,SACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,IACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,cACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,gBACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,cACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,eACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,UACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,QACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,gBACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,cACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,cACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,cACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,gBACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,gBACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,UACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,KACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,UACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,SACxB,MACJ,IAAK,IACDgC,EAAchC,EAAU,SACxB,MACJ,QAAS,CACL,IAAM4B,EAAYG,EAAa,QAAQ,cACjC,IAAI/B,EAAU,YACd,IAAIA,EAAU,UACpB4B,EAAU,QAAUG,EAAa,QACjCH,EAAU,SAAWG,EAAa,SAClCH,EAAU,SAAWG,EAAa,SAClCA,EAAeH,CACnB,CACJ,CACA,MACJ,IAAK,GACL,IAAK,GACL,IAAK,GACL,QACII,EAAcD,EAAa,QAAQ,cAC7B/B,EAAU,YACVA,EAAU,SAExB,CACA,OAAA+B,EAAeN,GAAgBM,EAAcC,CAAW,EACxDzB,EAAewB,EAAa,QAAQ/F,EAAaC,EAAa8F,EAAa,SAAS,iBAAmB7F,EAAc6F,EAAa,SAAS,MAAM,EACjJA,EAAa,sBAAwB/F,EAAY,SAAS8F,EAAgBA,EAAiBC,EAAa,WAAW,EAC5G,CACH,OAAQxB,EACR,OAAQwB,CACZ,CACJ,CACA,SAASE,GAAQjG,EAAa,CAC1B,GAAI,CAACA,EAAY,WAAY,CACzB,IAAMkG,EAAS,IAAIjC,EAAU,CAAC,EAAG5B,CAAU,EAC3C,OAAA6D,EAAO,MAAQ,+BACR,CACH,OAAQ,GACR,OAAAA,CACJ,CACJ,CACA,OAAOL,GAAuB,wBAAsB,aAAa7F,CAAW,EAAE,MAAM,EAAG,EAAGA,EAAY,UAAU,CACpH,CAEA,SAASmG,GAASC,EAAkBC,EAAQ,CACxC,OAAID,EACO,EAEJC,CACX,CACA,IAAMC,GAAN,cAAyCjE,CAAW,CAChD,YAAY,CAAE,MAAAT,EAAQ,CAAC,EAAG,iBAAA2E,EAAmB,GAAO,GAAGlC,CAAW,EAAI,CAAC,EAAG,CACtE,MAAMA,CAAU,EAChB,KAAK,MAAQzC,EACb,KAAK,iBAAmB2E,CAC5B,CACA,QAAQvG,EAAaC,EAAaC,EAAa,CAC3C,IAAM2B,EAAiB,wBAAsB,aAAa7B,CAAW,EACrE,GAAI,CAACF,GAAkB,KAAM+B,EAAM5B,EAAaC,CAAW,EACvD,MAAO,GAGX,GADA,KAAK,sBAAwB2B,EAAK,SAAS5B,EAAaA,EAAcC,CAAW,EAC7E,KAAK,sBAAsB,SAAW,EACtC,YAAK,SAAS,KAAK,oBAAoB,EAChCD,EAEX,IAAIuG,EAAgBvG,EACpB,KAAOkG,GAAS,KAAK,iBAAkBjG,CAAW,EAAI,GAAG,CACrD,IAAM6F,EAAeF,GAAahE,EAAM2E,EAAetG,CAAW,EAClE,GAAI6F,EAAa,SAAW,GACxB,YAAK,MAAQA,EAAa,OAAO,MACjC,KAAK,SAAS,OAAOA,EAAa,OAAO,QAAQ,EAC1C,GAMX,GAJAS,EAAgBT,EAAa,OAC7B,KAAK,aAAeA,EAAa,OAAO,YACxC7F,GAAe6F,EAAa,OAAO,YACnC,KAAK,MAAM,KAAKA,EAAa,MAAM,EAC/B,KAAK,kBAAoBA,EAAa,OAAO,YAAY,OAAS3E,GAClE,KAER,CACA,OAAI,KAAK,mBACD,KAAK,MAAM,KAAK,MAAM,OAAS,CAAC,EAAE,YAAY,OAASA,GACvD,KAAK,MAAM,IAAI,EAGf,KAAK,SAAS,KAAK,+BAA+B,GAGnDoF,CACX,CACA,MAAMzE,EAAUO,EAAQ,CACpB,IAAMkC,EAAUlC,GAAU,IAAInC,GAC9B,QAASR,EAAI,EAAGA,EAAI,KAAK,MAAM,OAAQA,IACnC,KAAK,MAAMA,CAAC,EAAE,MAAMoC,EAAUyC,CAAO,EAEzC,OAAKlC,EAGEpB,GAFIsD,EAAQ,MAAM,CAG7B,CACA,QAAS,CACL,IAAMK,EAAS,CACX,GAAG,MAAM,OAAO,EAChB,iBAAkB,KAAK,iBACvB,MAAO,CAAC,CACZ,EACA,QAAWjD,KAAS,KAAK,MACrBiD,EAAO,MAAM,KAAKjD,EAAM,OAAO,CAAC,EAEpC,OAAOiD,CACX,CACJ,EACAyB,GAA2B,KAAO,wBAElC,IAAIG,GACEC,GAAN,cAA0BzC,CAAU,CAChC,YAAYI,EAAa,CAAC,EAAG,CACzB,MAAMA,EAAYiC,EAA0B,EAC5C,KAAK,QAAQ,cAAgB,EACjC,CACA,QAAQtG,EAAaC,EAAaC,EAAa,CAC3C,KAAK,WAAW,iBAAmB,KAAK,SAAS,iBACjD,IAAMqE,EAAe,KAAK,WAAW,QAAQvE,EAAaC,EAAc,KAAK,SAAS,iBAAoBC,EAAc,KAAK,SAAS,MAAM,EAC5I,OAAIqE,IAAiB,IACjB,KAAK,MAAQ,KAAK,WAAW,MACtBA,IAEN,KAAK,QAAQ,MAAM,SACpB,KAAK,aAAe,KAAK,QAAQ,aAChC,KAAK,SAAS,MAAM,SACrB,KAAK,aAAe,KAAK,SAAS,aACjC,KAAK,WAAW,MAAM,SACvB,KAAK,aAAe,KAAK,WAAW,aACjCA,EACX,CACA,iBAAkB,CACd,IAAMoC,EAAS,CAAC,EAChB,QAAW/E,KAAS,KAAK,WAAW,MAChC+E,EAAO,KAAK/E,EAAM,SAAS,OAAO,EAAE,MAAM;AAAA,CAAI,EAAE,IAAIgF,GAAK,KAAKA,CAAC,EAAE,EAAE,KAAK;AAAA,CAAI,CAAC,EAEjF,IAAMC,EAAY,KAAK,QAAQ,WAAa,EACtC,IAAI,KAAK,QAAQ,SAAS,IAC1B,KAAK,YAAY,KACvB,OAAOF,EAAO,OACR,GAAGE,CAAS;AAAA,EAAOF,EAAO,KAAK;AAAA,CAAI,CAAC,GACpC,GAAGE,CAAS,IACtB,CACJ,EACAJ,GAAOC,GAEH1C,EAAU,YAAcyC,GAE5BC,GAAY,KAAO,cAEnB,IAAMI,GAAN,cAA0CzE,CAAW,CACjD,QAAQrC,EAAaC,EAAaC,EAAa,CAC3C,OAAOD,CACX,CACA,MAAM8B,EAAU,CACZ,OAAOb,EACX,CACJ,EACA4F,GAA4B,SAAW,yBAEvC,IAAIC,GACEC,GAAN,cAA2B/C,CAAU,CACjC,YAAYI,EAAa,CAAC,EAAG,CACzB,MAAMA,EAAYyC,EAA2B,EAC7C,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,CAC7B,CACJ,EACAC,GAAOC,GAEHhD,EAAU,aAAe+C,GAE7BC,GAAa,KAAO5F,GAEpB,IAAI6F,GACEC,GAAN,cAAmBjD,CAAU,CACzB,YAAYI,EAAa,CAAC,EAAG,CACzB,MAAMA,EAAYhC,CAAU,EAC5B,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,CAC7B,CACA,QAAQrC,EAAaC,EAAaC,EAAa,CAQ3C,OAPI,KAAK,SAAS,OAAS,GACvB,KAAK,SAAS,KAAK,8CAA8C,EAChE,KAAK,QAAQ,MAAM,SACpB,KAAK,aAAe,KAAK,QAAQ,aAChC,KAAK,SAAS,MAAM,SACrB,KAAK,aAAe,KAAK,SAAS,aACtC,KAAK,aAAeA,EACfD,EAAcC,EAAeF,EAAY,YAC1C,KAAK,MAAQ,gGACN,IAEHC,EAAcC,CAC1B,CACA,MAAM6B,EAAUO,EAAQ,CACpB,IAAMyB,EAAS,IAAI,YAAY,CAAC,EAChC,GAAI,CAAChC,EAAU,CACX,IAAMlC,EAAU,IAAI,WAAWkE,CAAM,EACrClE,EAAQ,CAAC,EAAI,EACbA,EAAQ,CAAC,EAAI,CACjB,CACA,OAAIyC,GACAA,EAAO,MAAMyB,CAAM,EAEhBA,CACX,CACA,iBAAkB,CACd,MAAO,GAAG,KAAK,YAAY,IAAI,EACnC,CACJ,EACAkD,GAAOC,GAEHlD,EAAU,KAAOiD,GAErBC,GAAK,KAAO,OAEZ,IAAMC,GAAN,cAAqC5F,GAASc,CAAU,CAAE,CACtD,YAAY,CAAE,MAAAT,EAAO,GAAGyC,CAAW,EAAI,CAAC,EAAG,CACvC,MAAMA,CAAU,EACZA,EAAW,SACX,KAAK,aAAyB,wBAAsB,aAAaA,EAAW,QAAQ,EAGpF,KAAK,aAAe,IAAI,WAAW,CAAC,EAEpCzC,IACA,KAAK,MAAQA,EAErB,CACA,IAAI,OAAQ,CACR,QAAWwF,KAAS,KAAK,aACrB,GAAIA,EAAQ,EACR,MAAO,GAGf,MAAO,EACX,CACA,IAAI,MAAMxF,EAAO,CACb,KAAK,aAAa,CAAC,EAAIA,EAAQ,IAAO,CAC1C,CACA,QAAQ5B,EAAaC,EAAaC,EAAa,CAC3C,IAAMiD,EAAsB,wBAAsB,aAAanD,CAAW,EAC1E,OAAKF,GAAkB,KAAMqD,EAAWlD,EAAaC,CAAW,GAGhE,KAAK,aAAeiD,EAAU,SAASlD,EAAaA,EAAcC,CAAW,EACzEA,EAAc,GACd,KAAK,SAAS,KAAK,4CAA4C,EACnE,KAAK,UAAY,GACTmH,GAAa,KAAK,IAAI,EAC9B,KAAK,YAAcnH,EACXD,EAAcC,GARX,EASf,CACA,OAAQ,CACJ,OAAO,KAAK,aAAa,MAAM,CACnC,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,MAAO,KAAK,KAChB,CACJ,CACJ,EACAiH,GAAuB,KAAO,oBAE9B,IAAIG,GACEC,GAAN,cAAsBtD,CAAU,CAC5B,YAAYI,EAAa,CAAC,EAAG,CACzB,MAAMA,EAAY8C,EAAsB,EACxC,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,CAC7B,CACA,UAAW,CACP,OAAO,KAAK,WAAW,KAC3B,CACA,SAASvF,EAAO,CACZ,KAAK,WAAW,MAAQA,CAC5B,CACA,iBAAkB,CACd,MAAO,GAAG,KAAK,YAAY,IAAI,MAAM,KAAK,QAAQ,EACtD,CACJ,EACA0F,GAAOC,GAEHvD,EAAU,QAAUsD,GAExBC,GAAQ,KAAO,UAEf,IAAMC,GAAN,cAAyCjG,GAAS+E,EAA0B,CAAE,CAC1E,YAAY,CAAE,cAAAmB,EAAgB,GAAO,GAAGpD,CAAW,EAAI,CAAC,EAAG,CACvD,MAAMA,CAAU,EAChB,KAAK,cAAgBoD,CACzB,CACA,QAAQzH,EAAaC,EAAaC,EAAa,CAC3C,IAAIqE,EAAe,EACnB,GAAI,KAAK,cAAe,CAGpB,GAFA,KAAK,UAAY,GACjBA,EAAe+B,GAA2B,UAAU,QAAQ,KAAK,KAAMtG,EAAaC,EAAaC,CAAW,EACxGqE,IAAiB,GACjB,OAAOA,EACX,QAAS5E,EAAI,EAAGA,EAAI,KAAK,MAAM,OAAQA,IAAK,CACxC,IAAM+H,EAAmB,KAAK,MAAM/H,CAAC,EAAE,YAAY,KACnD,GAAI+H,IAAqBtG,GAAqB,CAC1C,GAAI,KAAK,iBACL,MAEA,YAAK,MAAQ,8EACN,EAEf,CACA,GAAIsG,IAAqBrG,GACrB,YAAK,MAAQ,kDACN,EAEf,CACJ,MAEI,KAAK,UAAY,GACjBkD,EAAe,MAAM,QAAQvE,EAAaC,EAAaC,CAAW,EAClE,KAAK,YAAcA,EAEvB,OAAOqE,CACX,CACA,MAAMxC,EAAUO,EAAQ,CACpB,OAAI,KAAK,cACEgE,GAA2B,UAAU,MAAM,KAAK,KAAMvE,EAAUO,CAAM,EAC1EP,EACD,IAAI,YAAY,KAAK,aAAa,UAAU,EAC5C,KAAK,aAAa,MAAM,EAAE,MACpC,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,cAAe,KAAK,aACxB,CACJ,CACJ,EACAyF,GAA2B,KAAO,wBAElC,IAAIG,GACEC,GAAN,MAAMC,UAAoB5D,CAAU,CAChC,YAAY,CAAE,QAAAzB,EAAU,CAAC,EAAG,SAAAoB,EAAW,CAAC,EAAG,GAAGS,CAAW,EAAI,CAAC,EAAG,CAC7D,IAAI5B,EAAIC,GACPD,EAAK4B,EAAW,iBAAmB,MAAQ5B,IAAO,SAAe4B,EAAW,cAAgB,CAAC,EAAG,GAAA3B,EAAK2B,EAAW,SAAW,MAAQ3B,IAAO,SAAkBA,EAAG,SAChK,MAAM,CACF,QAAS,CACL,cAAe2B,EAAW,cAC1B,GAAG7B,CACP,EACA,SAAU,CACN,GAAGoB,EACH,iBAAkB,CAAC,CAACS,EAAW,gBACnC,EACA,GAAGA,CACP,EAAGmD,EAA0B,EAC7B,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,CAC7B,CACA,QAAQxH,EAAaC,EAAaC,EAAa,CAG3C,GAFA,KAAK,WAAW,cAAgB,KAAK,QAAQ,cAC7C,KAAK,WAAW,iBAAmB,KAAK,SAAS,iBAC7CA,IAAgB,EAChB,OAAI,KAAK,QAAQ,MAAM,SAAW,IAC9B,KAAK,aAAe,KAAK,QAAQ,aACjC,KAAK,SAAS,MAAM,SAAW,IAC/B,KAAK,aAAe,KAAK,SAAS,aAC/BD,EAEX,GAAI,CAAC,KAAK,WAAW,cAAe,CAEhC,IAAMG,GADOJ,aAAuB,YAAc,IAAI,WAAWA,CAAW,EAAIA,GAC/D,SAASC,EAAaA,EAAcC,CAAW,EAChE,GAAI,CACA,GAAIE,EAAI,WAAY,CAChB,IAAM0H,EAAMjC,GAAazF,EAAK,EAAGA,EAAI,UAAU,EAC3C0H,EAAI,SAAW,IAAMA,EAAI,SAAW5H,IACpC,KAAK,WAAW,MAAQ,CAAC4H,EAAI,MAAM,EAE3C,CACJ,MACU,CACV,CACJ,CACA,OAAO,MAAM,QAAQ9H,EAAaC,EAAaC,CAAW,CAC9D,CACA,iBAAkB,CACd,OAAI,KAAK,WAAW,eAAkB,KAAK,WAAW,OAAS,KAAK,WAAW,MAAM,OAC1EwG,GAAY,UAAU,gBAAgB,KAAK,IAAI,EAEnD,GAAG,KAAK,YAAY,IAAI,MAAgB,UAAQ,MAAM,KAAK,WAAW,YAAY,CAAC,EAC9F,CACA,UAAW,CACP,GAAI,CAAC,KAAK,QAAQ,cACd,OAAO,KAAK,WAAW,aAAa,MAAM,EAAE,OAEhD,IAAMqB,EAAQ,CAAC,EACf,QAAWC,KAAW,KAAK,WAAW,MAC9BA,aAAmBH,GACnBE,EAAM,KAAKC,EAAQ,WAAW,YAAY,EAGlD,OAAiB,wBAAsB,OAAOD,CAAK,CACvD,CACJ,EACAJ,GAAOC,GAEH5D,EAAU,YAAc2D,GAE5BC,GAAY,KAAOvG,GAEnB,IAAM4G,GAAN,cAAuC1G,GAAS+E,EAA0B,CAAE,CACxE,YAAY,CAAE,WAAA4B,EAAa,EAAG,cAAAT,EAAgB,GAAO,GAAGpD,CAAW,EAAI,CAAC,EAAG,CACvE,MAAMA,CAAU,EAChB,KAAK,WAAa6D,EAClB,KAAK,cAAgBT,EACrB,KAAK,YAAc,KAAK,aAAa,UACzC,CACA,QAAQzH,EAAaC,EAAaC,EAAa,CAC3C,GAAI,CAACA,EACD,OAAOD,EAEX,IAAIsE,EAAe,GACnB,GAAI,KAAK,cAAe,CAEpB,GADAA,EAAe+B,GAA2B,UAAU,QAAQ,KAAK,KAAMtG,EAAaC,EAAaC,CAAW,EACxGqE,IAAiB,GACjB,OAAOA,EACX,QAAW3C,KAAS,KAAK,MAAO,CAC5B,IAAM8F,EAAmB9F,EAAM,YAAY,KAC3C,GAAI8F,IAAqBtG,GAAqB,CAC1C,GAAI,KAAK,iBACL,MAEA,YAAK,MAAQ,0EACN,EAEf,CACA,GAAIsG,IAAqBpG,GACrB,YAAK,MAAQ,8CACN,GAEX,IAAM6G,EAAavG,EAAM,WACzB,GAAK,KAAK,WAAa,GAAOuG,EAAW,WAAa,EAClD,YAAK,MAAQ,mFACN,GAEX,KAAK,WAAaA,EAAW,UACjC,CACA,OAAO5D,CACX,CACA,IAAMpB,EAAsB,wBAAsB,aAAanD,CAAW,EAC1E,GAAI,CAACF,GAAkB,KAAMqD,EAAWlD,EAAaC,CAAW,EAC5D,MAAO,GAEX,IAAMkD,EAAYD,EAAU,SAASlD,EAAaA,EAAcC,CAAW,EAE3E,GADA,KAAK,WAAakD,EAAU,CAAC,EACzB,KAAK,WAAa,EAClB,YAAK,MAAQ,iDACN,GAEX,GAAI,CAAC,KAAK,WAAY,CAClB,IAAMhD,EAAMgD,EAAU,SAAS,CAAC,EAChC,GAAI,CACA,GAAIhD,EAAI,WAAY,CAChB,IAAM0H,EAAMjC,GAAazF,EAAK,EAAGA,EAAI,UAAU,EAC3C0H,EAAI,SAAW,IAAMA,EAAI,SAAY5H,EAAc,IACnD,KAAK,MAAQ,CAAC4H,EAAI,MAAM,EAEhC,CACJ,MACU,CACV,CACJ,CACA,YAAK,aAAe1E,EAAU,SAAS,CAAC,EACxC,KAAK,YAAcA,EAAU,OACrBnD,EAAcC,CAC1B,CACA,MAAM6B,EAAUO,EAAQ,CACpB,GAAI,KAAK,cACL,OAAOgE,GAA2B,UAAU,MAAM,KAAK,KAAMvE,EAAUO,CAAM,EAEjF,GAAIP,EACA,OAAO,IAAI,YAAY,KAAK,aAAa,WAAa,CAAC,EAE3D,GAAI,CAAC,KAAK,aAAa,WACnB,OAAOb,GAEX,IAAMrB,EAAU,IAAI,WAAW,KAAK,aAAa,OAAS,CAAC,EAC3D,OAAAA,EAAQ,CAAC,EAAI,KAAK,WAClBA,EAAQ,IAAI,KAAK,aAAc,CAAC,EACzBA,EAAQ,MACnB,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,WAAY,KAAK,WACjB,cAAe,KAAK,aACxB,CACJ,CACJ,EACAoI,GAAyB,KAAO,sBAEhC,IAAIG,GACEC,GAAN,cAAwBpE,CAAU,CAC9B,YAAY,CAAE,QAAAzB,EAAU,CAAC,EAAG,SAAAoB,EAAW,CAAC,EAAG,GAAGS,CAAW,EAAI,CAAC,EAAG,CAC7D,IAAI5B,EAAIC,GACPD,EAAK4B,EAAW,iBAAmB,MAAQ5B,IAAO,SAAe4B,EAAW,cAAgB,CAAC,EAAG,GAAA3B,EAAK2B,EAAW,SAAW,MAAQ3B,IAAO,SAAkBA,EAAG,SAChK,MAAM,CACF,QAAS,CACL,cAAe2B,EAAW,cAC1B,GAAG7B,CACP,EACA,SAAU,CACN,GAAGoB,EACH,iBAAkB,CAAC,CAACS,EAAW,gBACnC,EACA,GAAGA,CACP,EAAG4D,EAAwB,EAC3B,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,CAC7B,CACA,QAAQjI,EAAaC,EAAaC,EAAa,CAC3C,YAAK,WAAW,cAAgB,KAAK,QAAQ,cAC7C,KAAK,WAAW,iBAAmB,KAAK,SAAS,iBAC1C,MAAM,QAAQF,EAAaC,EAAaC,CAAW,CAC9D,CACA,iBAAkB,CACd,GAAI,KAAK,WAAW,eAAkB,KAAK,WAAW,OAAS,KAAK,WAAW,MAAM,OACjF,OAAOwG,GAAY,UAAU,gBAAgB,KAAK,IAAI,EAErD,CACD,IAAM4B,EAAO,CAAC,EACRC,EAAW,KAAK,WAAW,aACjC,QAAWC,KAAQD,EACfD,EAAK,KAAKE,EAAK,SAAS,CAAC,EAAE,SAAS,EAAG,GAAG,CAAC,EAE/C,IAAMC,EAAUH,EAAK,KAAK,EAAE,EAC5B,MAAO,GAAG,KAAK,YAAY,IAAI,MAAMG,EAAQ,UAAU,EAAGA,EAAQ,OAAS,KAAK,WAAW,UAAU,CAAC,EAC1G,CACJ,CACJ,EACAL,GAAOC,GAEHrE,EAAU,UAAYoE,GAE1BC,GAAU,KAAO/G,GAEjB,IAAIoH,GACJ,SAASC,GAAQC,EAAOC,EAAQ,CAC5B,IAAMC,EAAI,IAAI,WAAW,CAAC,CAAC,CAAC,EACtBC,EAAY,IAAI,WAAWH,CAAK,EAChCI,EAAa,IAAI,WAAWH,CAAM,EACpCI,EAAgBF,EAAU,MAAM,CAAC,EAC/BG,EAAsBD,EAAc,OAAS,EAC7CE,EAAiBH,EAAW,MAAM,CAAC,EACnCI,EAAuBD,EAAe,OAAS,EACjDvH,EAAQ,EACNyH,EAAOD,EAAuBF,EAAuBA,EAAsBE,EAC7EE,EAAU,EACd,QAAS3J,EAAI0J,EAAK1J,GAAK,EAAGA,IAAK2J,IAAW,CACtC,OAAQ,GAAM,CACV,KAAMA,EAAUH,EAAe,OAC3BvH,EAAQqH,EAAcC,EAAsBI,CAAO,EAAIH,EAAeC,EAAuBE,CAAO,EAAIR,EAAE,CAAC,EAC3G,MACJ,QACIlH,EAAQqH,EAAcC,EAAsBI,CAAO,EAAIR,EAAE,CAAC,CAClE,CAEA,OADAA,EAAE,CAAC,EAAIlH,EAAQ,GACP,GAAM,CACV,KAAM0H,GAAWL,EAAc,OAC3BA,EAAwBM,GAAe,IAAI,WAAW,CAAC3H,EAAQ,EAAE,CAAC,EAAGqH,CAAa,EAClF,MACJ,QACIA,EAAcC,EAAsBI,CAAO,EAAI1H,EAAQ,EAC/D,CACJ,CACA,OAAIkH,EAAE,CAAC,EAAI,IACPG,EAAwBM,GAAeT,EAAGG,CAAa,GACpDA,CACX,CACA,SAASO,GAAOC,EAAG,CACf,GAAIA,GAAKpJ,GAAQ,OACb,QAASqJ,EAAIrJ,GAAQ,OAAQqJ,GAAKD,EAAGC,IAAK,CACtC,IAAMZ,EAAI,IAAI,WAAW,CAAC,CAAC,CAAC,EACxBa,EAAUtJ,GAAQqJ,EAAI,CAAC,EAAG,MAAM,CAAC,EACrC,QAAS/J,EAAKgK,EAAO,OAAS,EAAIhK,GAAK,EAAGA,IAAK,CAC3C,IAAMiK,EAAW,IAAI,WAAW,EAAED,EAAOhK,CAAC,GAAK,GAAKmJ,EAAE,CAAC,CAAC,CAAC,EACzDA,EAAE,CAAC,EAAIc,EAAS,CAAC,EAAI,GACrBD,EAAOhK,CAAC,EAAIiK,EAAS,CAAC,EAAI,EAC9B,CACId,EAAE,CAAC,EAAI,IACPa,EAAiBJ,GAAeT,EAAGa,CAAM,GAC7CtJ,GAAQ,KAAKsJ,CAAM,CACvB,CAEJ,OAAOtJ,GAAQoJ,CAAC,CACpB,CACA,SAASI,GAAQjB,EAAOC,EAAQ,CAC5B,IAAIiB,EAAI,EACFf,EAAY,IAAI,WAAWH,CAAK,EAChCI,EAAa,IAAI,WAAWH,CAAM,EAClCI,EAAgBF,EAAU,MAAM,CAAC,EACjCG,EAAsBD,EAAc,OAAS,EAC7CE,EAAiBH,EAAW,MAAM,CAAC,EACnCI,EAAuBD,EAAe,OAAS,EACjDvH,EACA0H,EAAU,EACd,QAAS3J,EAAIyJ,EAAsBzJ,GAAK,EAAGA,IAAK2J,IAE5C,OADA1H,EAAQqH,EAAcC,EAAsBI,CAAO,EAAIH,EAAeC,EAAuBE,CAAO,EAAIQ,EAChG,GAAM,CACV,KAAMlI,EAAQ,EACVkI,EAAI,EACJb,EAAcC,EAAsBI,CAAO,EAAI1H,EAAQ,GACvD,MACJ,QACIkI,EAAI,EACJb,EAAcC,EAAsBI,CAAO,EAAI1H,CACvD,CAEJ,GAAIkI,EAAI,EACJ,QAASnK,EAAKuJ,EAAsBE,EAAuB,EAAIzJ,GAAK,EAAGA,IAAK2J,IAExE,GADA1H,EAAQqH,EAAcC,EAAsBI,CAAO,EAAIQ,EACnDlI,EAAQ,EACRkI,EAAI,EACJb,EAAcC,EAAsBI,CAAO,EAAI1H,EAAQ,OAEtD,CACDkI,EAAI,EACJb,EAAcC,EAAsBI,CAAO,EAAI1H,EAC/C,KACJ,CAGR,OAAOqH,EAAc,MAAM,CAC/B,CACA,IAAMc,GAAN,cAAqCxI,GAASc,CAAU,CAAE,CACtD,YAAY,CAAE,MAAAT,EAAO,GAAGyC,CAAW,EAAI,CAAC,EAAG,CACvC,MAAMA,CAAU,EAChB,KAAK,UAAY,EACbA,EAAW,UACX,KAAK,YAAY,EAEjBzC,IAAU,SACV,KAAK,SAAWA,EAExB,CACA,aAAc,CACN,KAAK,aAAa,QAAU,GAC5B,KAAK,SAAS,KAAK,wCAAwC,EAC3D,KAAK,UAAY,GACjB,KAAK,UAAY,IAGjB,KAAK,UAAY,GACb,KAAK,aAAa,OAAS,IAC3B,KAAK,UAAoByF,GAAa,KAAK,IAAI,GAG3D,CACA,IAAI,SAAS2C,EAAG,CACZ,KAAK,UAAYA,EACjB,KAAK,UAAY,GACjB,KAAK,aAAe,IAAI,WAAmBC,GAAaD,CAAC,CAAC,CAC9D,CACA,IAAI,UAAW,CACX,OAAO,KAAK,SAChB,CACA,QAAQhK,EAAaC,EAAaC,EAAagK,EAAiB,EAAG,CAC/D,IAAMC,EAAS,KAAK,QAAQnK,EAAaC,EAAaC,CAAW,EACjE,GAAIiK,IAAW,GACX,OAAOA,EACX,IAAMtI,EAAO,KAAK,aAClB,OAAKA,EAAK,CAAC,IAAM,GAAWA,EAAK,CAAC,EAAI,IAClC,KAAK,aAAeA,EAAK,SAAS,CAAC,EAG/BqI,IAAmB,GACfrI,EAAK,OAASqI,IACTA,EAAiBrI,EAAK,OAAU,IACjCqI,EAAiBrI,EAAK,OAAS,GACnC,KAAK,aAAeA,EAAK,SAASqI,EAAiBrI,EAAK,MAAM,GAInEsI,CACX,CACA,MAAMpI,EAAW,GAAO,CACpB,IAAMF,EAAO,KAAK,aAClB,OAAQ,GAAM,CACV,KAAOA,EAAK,CAAC,EAAI,OAAU,EACvB,CACI,IAAMuI,EAAc,IAAI,WAAW,KAAK,aAAa,OAAS,CAAC,EAC/DA,EAAY,CAAC,EAAI,EACjBA,EAAY,IAAIvI,EAAM,CAAC,EACvB,KAAK,aAAeuI,CACxB,CACA,MACJ,KAAOvI,EAAK,CAAC,IAAM,IAAWA,EAAK,CAAC,EAAI,OAAU,GAE1C,KAAK,aAAe,KAAK,aAAa,SAAS,CAAC,EAEpD,KACR,CACA,OAAO,KAAK,MAAME,CAAQ,CAC9B,CACA,QAAQ/B,EAAaC,EAAaC,EAAa,CAC3C,IAAMqE,EAAe,MAAM,QAAQvE,EAAaC,EAAaC,CAAW,EACxE,OAAIqE,IAAiB,IAGrB,KAAK,YAAY,EACVA,CACX,CACA,MAAMxC,EAAU,CACZ,OAAOA,EACD,IAAI,YAAY,KAAK,aAAa,MAAM,EACxC,KAAK,aAAa,MAAM,EAAE,MACpC,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,SAAU,KAAK,QACnB,CACJ,CACA,UAAW,CACP,IAAMsI,EAAY,KAAK,aAAa,OAAS,EAAK,EAC9CV,EAAS,IAAI,WAAY,KAAK,aAAa,OAAS,EAAK,CAAC,EAC1DW,EAAY,EACZC,EACEC,EAAW,KAAK,aAClBtE,EAAS,GACTuE,EAAO,GACX,QAASC,EAAcF,EAAS,WAAa,EAAIE,GAAc,EAAGA,IAAc,CAC5EH,EAAcC,EAASE,CAAU,EACjC,QAAS/K,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAK4K,EAAc,KAAO,EACtB,OAAQD,EAAW,CACf,KAAKD,EACDV,EAASE,GAAQL,GAAOc,CAAS,EAAGX,CAAM,EAC1CzD,EAAS,IACT,MACJ,QACIyD,EAAShB,GAAQgB,EAAQH,GAAOc,CAAS,CAAC,CAClD,CAEJA,IACAC,IAAgB,CACpB,CACJ,CACA,QAAS5K,EAAI,EAAGA,EAAIgK,EAAO,OAAQhK,IAC3BgK,EAAOhK,CAAC,IACR8K,EAAO,IACPA,IACAvE,GAAU5F,GAAa,OAAOqJ,EAAOhK,CAAC,CAAC,GAE/C,OAAI8K,IAAS,KACTvE,GAAU5F,GAAa,OAAO,CAAC,GAC5B4F,CACX,CACJ,EACAwC,GAAOqB,GACPA,GAAuB,KAAO,oBAE1B,OAAO,eAAerB,GAAK,UAAW,WAAY,CAC9C,IAAK,SAAUsB,EAAG,CACd,KAAK,aAAe,IAAI,WAAWA,CAAC,EACpC,KAAK,YAAY,CACrB,EACA,IAAK,UAAY,CACb,OAAO,KAAK,aAAa,MAAM,EAAE,MACrC,CACJ,CAAC,EAGL,IAAIW,GACEC,GAAN,MAAMC,UAAgB5G,CAAU,CAC5B,YAAYI,EAAa,CAAC,EAAG,CACzB,MAAMA,EAAY0F,EAAsB,EACxC,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,CAC7B,CACA,UAAW,CACP,OAAAzK,GAAa,EACN,OAAO,KAAK,WAAW,SAAS,CAAC,CAC5C,CACA,OAAO,WAAWsC,EAAO,CACrBtC,GAAa,EACb,IAAMwL,EAAc,OAAOlJ,CAAK,EAC1BU,EAAS,IAAInC,GACb4K,EAAMD,EAAY,SAAS,EAAE,EAAE,QAAQ,KAAM,EAAE,EAC/CjJ,EAAO,IAAI,WAAqB,UAAQ,QAAQkJ,CAAG,CAAC,EAC1D,GAAID,EAAc,EAAG,CACjB,IAAMlC,EAAQ,IAAI,WAAW/G,EAAK,QAAUA,EAAK,CAAC,EAAI,IAAO,EAAI,EAAE,EACnE+G,EAAM,CAAC,GAAK,IAEZ,IAAMoC,EADW,OAAO,KAAe,UAAQ,MAAMpC,CAAK,CAAC,EAAE,EAChCkC,EACvBjC,EAAmB,wBAAsB,aAAuB,UAAQ,QAAQmC,EAAU,SAAS,EAAE,CAAC,CAAC,EAC7GnC,EAAO,CAAC,GAAK,IACbvG,EAAO,MAAMuG,CAAM,CACvB,MAEQhH,EAAK,CAAC,EAAI,KACVS,EAAO,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,EAEpCA,EAAO,MAAMT,CAAI,EAKrB,OAHY,IAAIgJ,EAAQ,CACpB,SAAUvI,EAAO,MAAM,CAC3B,CAAC,CAEL,CACA,cAAe,CACX,IAAM2I,EAAU,IAAIJ,EAAQ,CAAE,SAAU,KAAK,WAAW,YAAa,CAAC,EACtE,OAAAI,EAAQ,WAAW,MAAM,EAClBA,CACX,CACA,gBAAiB,CACb,OAAO,IAAIJ,EAAQ,CACf,SAAU,KAAK,WAAW,aAAa,CAAC,IAAM,EACxC,KAAK,WAAW,aAAa,SAAS,CAAC,EACvC,KAAK,WAAW,YAC1B,CAAC,CACL,CACA,iBAAkB,CACd,MAAO,GAAG,KAAK,YAAY,IAAI,MAAM,KAAK,WAAW,SAAS,CAAC,EACnE,CACJ,EACAF,GAAOC,GAEH5G,EAAU,QAAU2G,GAExBC,GAAQ,KAAO,UAEf,IAAIM,GACEC,GAAN,cAAyBP,EAAQ,CAC7B,YAAYvG,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACA6G,GAAOC,GAEHnH,EAAU,WAAakH,GAE3BC,GAAW,KAAO,aAElB,IAAMC,GAAN,cAAiC7J,GAASc,CAAU,CAAE,CAClD,YAAY,CAAE,SAAAgJ,EAAW,GAAI,WAAAC,EAAa,GAAO,GAAGjH,CAAW,EAAI,CAAC,EAAG,CACnE,MAAMA,CAAU,EAChB,KAAK,SAAWgH,EAChB,KAAK,WAAaC,CACtB,CACA,QAAQtL,EAAaC,EAAaC,EAAa,CAC3C,GAAI,CAACA,EACD,OAAOD,EAEX,IAAMkD,EAAsB,wBAAsB,aAAanD,CAAW,EAC1E,GAAI,CAACF,GAAkB,KAAMqD,EAAWlD,EAAaC,CAAW,EAC5D,MAAO,GAEX,IAAMkD,EAAYD,EAAU,SAASlD,EAAaA,EAAcC,CAAW,EAC3E,KAAK,aAAe,IAAI,WAAWA,CAAW,EAC9C,QAASP,EAAI,EAAGA,EAAIO,IAChB,KAAK,aAAaP,CAAC,EAAIyD,EAAUzD,CAAC,EAAI,IACtC,KAAK,cACA,GAAAyD,EAAUzD,CAAC,EAAI,MAHSA,IAG7B,CAGJ,IAAM4L,EAAW,IAAI,WAAW,KAAK,WAAW,EAChD,QAAS5L,EAAI,EAAGA,EAAI,KAAK,YAAaA,IAClC4L,EAAS5L,CAAC,EAAI,KAAK,aAAaA,CAAC,EAGrC,OADA,KAAK,aAAe4L,EACfnI,EAAU,KAAK,YAAc,CAAC,EAAI,KACnC,KAAK,MAAQ,wDACN,KAEP,KAAK,aAAa,CAAC,IAAM,GACzB,KAAK,SAAS,KAAK,wCAAwC,EAC3D,KAAK,aAAe,EACpB,KAAK,SAAmBM,GAAa,KAAK,aAAc,CAAC,GAEzD,KAAK,UAAY,GACjB,KAAK,SAAS,KAAK,oCAAoC,GAEnDzD,EAAc,KAAK,YAC/B,CACA,IAAI,YAAY2B,EAAO,CACnBtC,GAAa,EACb,IAAIgJ,EAAO,OAAO1G,CAAK,EAAE,SAAS,CAAC,EACnC,KAAO0G,EAAK,OAAS,GACjBA,EAAO,IAAMA,EAEjB,IAAMkD,EAAQ,IAAI,WAAWlD,EAAK,OAAS,CAAC,EAC5C,QAAS3I,EAAI,EAAGA,EAAI6L,EAAM,OAAQ7L,IAC9B6L,EAAM7L,CAAC,EAAI,SAAS2I,EAAK,MAAM3I,EAAI,EAAGA,EAAI,EAAI,CAAC,EAAG,CAAC,GAAKA,EAAI,EAAI6L,EAAM,OAAS,IAAO,GAE1F,KAAK,QAAQA,EAAM,OAAQ,EAAGA,EAAM,MAAM,CAC9C,CACA,MAAMzJ,EAAU,CACZ,GAAI,KAAK,UAAW,CAChB,GAAIA,EACA,OAAQ,IAAI,YAAY,KAAK,aAAa,UAAU,EACxD,IAAMmB,EAAU,KAAK,aACfrD,EAAU,IAAI,WAAW,KAAK,WAAW,EAC/C,QAAS,EAAI,EAAG,EAAK,KAAK,YAAc,EAAI,IACxCA,EAAQ,CAAC,EAAIqD,EAAQ,CAAC,EAAI,IAC9B,OAAArD,EAAQ,KAAK,YAAc,CAAC,EAAIqD,EAAQ,KAAK,YAAc,CAAC,EACrDrD,EAAQ,MACnB,CACA,IAAMiD,EAAqBC,GAAW,KAAK,SAAU,CAAC,EACtD,GAAID,EAAW,aAAe,EAC1B,YAAK,MAAQ,kCACN5B,GAEX,IAAMrB,EAAU,IAAI,WAAWiD,EAAW,UAAU,EACpD,GAAI,CAACf,EAAU,CACX,IAAMiB,EAAc,IAAI,WAAWF,CAAU,EACvC2I,EAAM3I,EAAW,WAAa,EACpC,QAAS,EAAI,EAAG,EAAI2I,EAAK,IACrB5L,EAAQ,CAAC,EAAImD,EAAY,CAAC,EAAI,IAClCnD,EAAQ4L,CAAG,EAAIzI,EAAYyI,CAAG,CAClC,CACA,OAAO5L,CACX,CACA,UAAW,CACP,IAAIqG,EAAS,GACb,GAAI,KAAK,UACLA,EAAmB,UAAQ,MAAM,KAAK,YAAY,UAE9C,KAAK,WAAY,CACjB,IAAIwF,EAAW,KAAK,SAChB,KAAK,UAAY,GACjBxF,EAAS,KAEL,KAAK,UAAY,IACjBA,EAAS,KACTwF,GAAY,KAGZxF,EAAS,KACTwF,GAAY,IAGpBxF,GAAUwF,EAAS,SAAS,CAChC,MAEIxF,EAAS,KAAK,SAAS,SAAS,EAExC,OAAOA,CACX,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,SAAU,KAAK,SACf,WAAY,KAAK,UACrB,CACJ,CACJ,EACAkF,GAAmB,KAAO,WAE1B,IAAMO,GAAN,cAA8CtJ,CAAW,CACrD,YAAY,CAAE,MAAAT,EAAQX,EAAc,GAAGoD,CAAW,EAAI,CAAC,EAAG,CACtD,MAAMA,CAAU,EAChB,KAAK,MAAQ,CAAC,EACVzC,GACA,KAAK,WAAWA,CAAK,CAE7B,CACA,QAAQ5B,EAAaC,EAAaC,EAAa,CAC3C,IAAIqE,EAAetE,EACnB,KAAOC,EAAc,GAAG,CACpB,IAAM0L,EAAW,IAAIR,GAErB,GADA7G,EAAeqH,EAAS,QAAQ5L,EAAauE,EAAcrE,CAAW,EAClEqE,IAAiB,GACjB,YAAK,YAAc,EACnB,KAAK,MAAQqH,EAAS,MACfrH,EAEP,KAAK,MAAM,SAAW,IACtBqH,EAAS,WAAa,IAC1B,KAAK,aAAeA,EAAS,YAC7B1L,GAAe0L,EAAS,YACxB,KAAK,MAAM,KAAKA,CAAQ,CAC5B,CACA,OAAOrH,CACX,CACA,MAAMxC,EAAU,CACZ,IAAM8J,EAAa,CAAC,EACpB,QAASlM,EAAI,EAAGA,EAAI,KAAK,MAAM,OAAQA,IAAK,CACxC,IAAMmM,EAAW,KAAK,MAAMnM,CAAC,EAAE,MAAMoC,CAAQ,EAC7C,GAAI+J,EAAS,aAAe,EACxB,YAAK,MAAQ,KAAK,MAAMnM,CAAC,EAAE,MACpBuB,GAEX2K,EAAW,KAAKC,CAAQ,CAC5B,CACA,OAAOvM,GAAOsM,CAAU,CAC5B,CACA,WAAWE,EAAQ,CACf,KAAK,MAAQ,CAAC,EACd,IAAIC,EAAO,EACPC,EAAO,EACPC,EAAM,GACNzB,EAAO,GACX,EAOI,IANAwB,EAAOF,EAAO,QAAQ,IAAKC,CAAI,EAC3BC,IAAS,GACTC,EAAMH,EAAO,UAAUC,CAAI,EAE3BE,EAAMH,EAAO,UAAUC,EAAMC,CAAI,EACrCD,EAAOC,EAAO,EACVxB,EAAM,CACN,IAAMmB,EAAW,KAAK,MAAM,CAAC,EACzBO,EAAO,EACX,OAAQP,EAAS,SAAU,CACvB,IAAK,GACD,MACJ,IAAK,GACDO,EAAO,GACP,MACJ,IAAK,GACDA,EAAO,GACP,MACJ,QACI,KAAK,MAAQ,CAAC,EACd,MACR,CACA,IAAMC,EAAY,SAASF,EAAK,EAAE,EAClC,GAAI,MAAME,CAAS,EACf,OACJR,EAAS,SAAWQ,EAAYD,EAChC1B,EAAO,EACX,KACK,CACD,IAAMmB,EAAW,IAAIR,GACrB,GAAIc,EAAM,OAAO,iBAAkB,CAC/B5M,GAAa,EACb,IAAMoM,EAAW,OAAOQ,CAAG,EAC3BN,EAAS,YAAcF,CAC3B,SAEIE,EAAS,SAAW,SAASM,EAAK,EAAE,EAChC,MAAMN,EAAS,QAAQ,EACvB,OAEH,KAAK,MAAM,SACZA,EAAS,WAAa,GACtBnB,EAAO,IAEX,KAAK,MAAM,KAAKmB,CAAQ,CAC5B,OACKK,IAAS,GACtB,CACA,UAAW,CACP,IAAI/F,EAAS,GACTZ,EAAY,GAChB,QAAS3F,EAAI,EAAGA,EAAI,KAAK,MAAM,OAAQA,IAAK,CACxC2F,EAAY,KAAK,MAAM3F,CAAC,EAAE,UAC1B,IAAI0M,EAAS,KAAK,MAAM1M,CAAC,EAAE,SAAS,EAChCA,IAAM,IACNuG,EAAS,GAAGA,CAAM,KAClBZ,GACA+G,EAAS,IAAIA,CAAM,IACf,KAAK,MAAM1M,CAAC,EAAE,WACduG,EAAS,MAAMmG,CAAM,SAErBnG,GAAUmG,GAGdnG,GAAUmG,CAClB,CACA,OAAOnG,CACX,CACA,QAAS,CACL,IAAMrB,EAAS,CACX,GAAG,MAAM,OAAO,EAChB,MAAO,KAAK,SAAS,EACrB,SAAU,CAAC,CACf,EACA,QAASlF,EAAI,EAAGA,EAAI,KAAK,MAAM,OAAQA,IACnCkF,EAAO,SAAS,KAAK,KAAK,MAAMlF,CAAC,EAAE,OAAO,CAAC,EAE/C,OAAOkF,CACX,CACJ,EACA8G,GAAgC,KAAO,6BAEvC,IAAIW,GACEC,GAAN,cAA+BtI,CAAU,CACrC,YAAYI,EAAa,CAAC,EAAG,CACzB,MAAMA,EAAYsH,EAA+B,EACjD,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,CAC7B,CACA,UAAW,CACP,OAAO,KAAK,WAAW,SAAS,CACpC,CACA,SAAS/J,EAAO,CACZ,KAAK,WAAW,WAAWA,CAAK,CACpC,CACA,iBAAkB,CACd,MAAO,GAAG,KAAK,YAAY,IAAI,MAAM,KAAK,WAAW,SAAS,GAAK,OAAO,EAC9E,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,MAAO,KAAK,SAAS,CACzB,CACJ,CACJ,EACA0K,GAAOC,GAEHvI,EAAU,iBAAmBsI,GAEjCC,GAAiB,KAAO,oBAExB,IAAMC,GAAN,cAAyCjL,GAASS,EAAc,CAAE,CAC9D,YAAY,CAAE,SAAAqJ,EAAW,EAAG,GAAGhH,CAAW,EAAI,CAAC,EAAG,CAC9C,MAAMA,CAAU,EAChB,KAAK,SAAWgH,CACpB,CACA,QAAQrL,EAAaC,EAAaC,EAAa,CAC3C,GAAIA,IAAgB,EAChB,OAAOD,EACX,IAAMkD,EAAsB,wBAAsB,aAAanD,CAAW,EAC1E,GAAI,CAACF,GAAkB,KAAMqD,EAAWlD,EAAaC,CAAW,EAC5D,MAAO,GACX,IAAMkD,EAAYD,EAAU,SAASlD,EAAaA,EAAcC,CAAW,EAC3E,KAAK,aAAe,IAAI,WAAWA,CAAW,EAC9C,QAASP,EAAI,EAAGA,EAAIO,IAChB,KAAK,aAAaP,CAAC,EAAIyD,EAAUzD,CAAC,EAAI,IACtC,KAAK,cACA,GAAAyD,EAAUzD,CAAC,EAAI,MAHSA,IAG7B,CAGJ,IAAM4L,EAAW,IAAI,WAAW,KAAK,WAAW,EAChD,QAAS5L,EAAI,EAAGA,EAAI,KAAK,YAAaA,IAClC4L,EAAS5L,CAAC,EAAI,KAAK,aAAaA,CAAC,EAErC,OADA,KAAK,aAAe4L,EACfnI,EAAU,KAAK,YAAc,CAAC,EAAI,KACnC,KAAK,MAAQ,wDACN,KAEP,KAAK,aAAa,CAAC,IAAM,GACzB,KAAK,SAAS,KAAK,wCAAwC,EAC3D,KAAK,aAAe,EACpB,KAAK,SAAmBM,GAAa,KAAK,aAAc,CAAC,GAEzD,KAAK,UAAY,GACjB,KAAK,SAAS,KAAK,oCAAoC,GAEnDzD,EAAc,KAAK,YAC/B,CACA,MAAM8B,EAAU,CACZ,GAAI,KAAK,UAAW,CAChB,GAAIA,EACA,OAAQ,IAAI,YAAY,KAAK,aAAa,UAAU,EACxD,IAAMmB,EAAU,KAAK,aACfrD,EAAU,IAAI,WAAW,KAAK,WAAW,EAC/C,QAAS,EAAI,EAAG,EAAK,KAAK,YAAc,EAAI,IACxCA,EAAQ,CAAC,EAAIqD,EAAQ,CAAC,EAAI,IAC9B,OAAArD,EAAQ,KAAK,YAAc,CAAC,EAAIqD,EAAQ,KAAK,YAAc,CAAC,EACrDrD,EAAQ,MACnB,CACA,IAAMiD,EAAqBC,GAAW,KAAK,SAAU,CAAC,EACtD,GAAID,EAAW,aAAe,EAC1B,YAAK,MAAQ,kCACN5B,GAEX,IAAMrB,EAAU,IAAI,WAAWiD,EAAW,UAAU,EACpD,GAAI,CAACf,EAAU,CACX,IAAMiB,EAAc,IAAI,WAAWF,CAAU,EACvC2I,EAAM3I,EAAW,WAAa,EACpC,QAAS,EAAI,EAAG,EAAI2I,EAAK,IACrB5L,EAAQ,CAAC,EAAImD,EAAY,CAAC,EAAI,IAClCnD,EAAQ4L,CAAG,EAAIzI,EAAYyI,CAAG,CAClC,CACA,OAAO5L,EAAQ,MACnB,CACA,UAAW,CACP,IAAIqG,EAAS,GACb,OAAI,KAAK,UACLA,EAAmB,UAAQ,MAAM,KAAK,YAAY,EAElDA,EAAS,KAAK,SAAS,SAAS,EAE7BA,CACX,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,SAAU,KAAK,QACnB,CACJ,CACJ,EACAsG,GAA2B,KAAO,mBAElC,IAAMC,GAAN,cAAsDpK,CAAW,CAC7D,YAAY,CAAE,MAAAT,EAAQX,EAAc,GAAGoD,CAAW,EAAI,CAAC,EAAG,CACtD,MAAMA,CAAU,EAChB,KAAK,MAAQ,CAAC,EACVzC,GACA,KAAK,WAAWA,CAAK,CAE7B,CACA,QAAQ5B,EAAaC,EAAaC,EAAa,CAC3C,IAAIqE,EAAetE,EACnB,KAAOC,EAAc,GAAG,CACpB,IAAM0L,EAAW,IAAIY,GAErB,GADAjI,EAAeqH,EAAS,QAAQ5L,EAAauE,EAAcrE,CAAW,EAClEqE,IAAiB,GACjB,YAAK,YAAc,EACnB,KAAK,MAAQqH,EAAS,MACfrH,EAEX,KAAK,aAAeqH,EAAS,YAC7B1L,GAAe0L,EAAS,YACxB,KAAK,MAAM,KAAKA,CAAQ,CAC5B,CACA,OAAOrH,CACX,CACA,MAAMxC,EAAUO,EAAQ,CACpB,IAAMuJ,EAAa,CAAC,EACpB,QAASlM,EAAI,EAAGA,EAAI,KAAK,MAAM,OAAQA,IAAK,CACxC,IAAMmM,EAAW,KAAK,MAAMnM,CAAC,EAAE,MAAMoC,CAAQ,EAC7C,GAAI+J,EAAS,aAAe,EACxB,YAAK,MAAQ,KAAK,MAAMnM,CAAC,EAAE,MACpBuB,GAEX2K,EAAW,KAAKC,CAAQ,CAC5B,CACA,OAAOvM,GAAOsM,CAAU,CAC5B,CACA,WAAWE,EAAQ,CACf,KAAK,MAAQ,CAAC,EACd,IAAIC,EAAO,EACPC,EAAO,EACPC,EAAM,GACV,EAAG,CACCD,EAAOF,EAAO,QAAQ,IAAKC,CAAI,EAC3BC,IAAS,GACTC,EAAMH,EAAO,UAAUC,CAAI,EAE3BE,EAAMH,EAAO,UAAUC,EAAMC,CAAI,EACrCD,EAAOC,EAAO,EACd,IAAML,EAAW,IAAIY,GAErB,GADAZ,EAAS,SAAW,SAASM,EAAK,EAAE,EAChC,MAAMN,EAAS,QAAQ,EACvB,MAAO,GACX,KAAK,MAAM,KAAKA,CAAQ,CAC5B,OAASK,IAAS,IAClB,MAAO,EACX,CACA,UAAW,CACP,IAAI/F,EAAS,GACTZ,EAAY,GAChB,QAAS3F,EAAI,EAAGA,EAAI,KAAK,MAAM,OAAQA,IAAK,CACxC2F,EAAY,KAAK,MAAM3F,CAAC,EAAE,UAC1B,IAAI0M,EAAS,KAAK,MAAM1M,CAAC,EAAE,SAAS,EAChCA,IAAM,IACNuG,EAAS,GAAGA,CAAM,KAClBZ,IACA+G,EAAS,IAAIA,CAAM,KACnBnG,GAAUmG,CAIlB,CACA,OAAOnG,CACX,CACA,QAAS,CACL,IAAMrB,EAAS,CACX,GAAG,MAAM,OAAO,EAChB,MAAO,KAAK,SAAS,EACrB,SAAU,CAAC,CACf,EACA,QAASlF,EAAI,EAAGA,EAAI,KAAK,MAAM,OAAQA,IACnCkF,EAAO,SAAS,KAAK,KAAK,MAAMlF,CAAC,EAAE,OAAO,CAAC,EAC/C,OAAOkF,CACX,CACJ,EACA4H,GAAwC,KAAO,qCAE/C,IAAIC,GACEC,GAAN,cAAuC1I,CAAU,CAC7C,YAAYI,EAAa,CAAC,EAAG,CACzB,MAAMA,EAAYoI,EAAuC,EACzD,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACA,UAAW,CACP,OAAO,KAAK,WAAW,SAAS,CACpC,CACA,SAAS7K,EAAO,CACZ,KAAK,WAAW,WAAWA,CAAK,CACpC,CACA,iBAAkB,CACd,MAAO,GAAG,KAAK,YAAY,IAAI,MAAM,KAAK,WAAW,SAAS,GAAK,OAAO,EAC9E,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,MAAO,KAAK,SAAS,CACzB,CACJ,CACJ,EACA8K,GAAOC,GAEH3I,EAAU,yBAA2B0I,GAEzCC,GAAyB,KAAO,2BAEhC,IAAIC,GACEC,GAAN,cAAuBnG,EAAY,CAC/B,YAAYrC,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAuI,GAAOC,GAEH7I,EAAU,SAAW4I,GAEzBC,GAAS,KAAO,WAEhB,IAAIC,GACEC,GAAN,cAAkBrG,EAAY,CAC1B,YAAYrC,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAyI,GAAOC,GAEH/I,EAAU,IAAM8I,GAEpBC,GAAI,KAAO,MAEX,IAAMC,GAAN,cAAoCzL,GAASc,CAAU,CAAE,CACrD,YAAY,CAAE,GAAGgC,CAAW,EAAI,CAAC,EAAG,CAChC,MAAMA,CAAU,EAChB,KAAK,UAAY,GACjB,KAAK,MAAQpD,CACjB,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,MAAO,KAAK,KAChB,CACJ,CACJ,EACA+L,GAAsB,KAAO,mBAE7B,IAAMC,GAAN,cAA0CD,EAAsB,CAChE,EACAC,GAA4B,KAAO,yBAEnC,IAAMC,EAAN,cAAqC/H,EAAgB,CACjD,YAAY,CAAE,GAAGd,CAAW,EAAI,CAAC,EAAG,CAChC,MAAMA,EAAY4I,EAA2B,CACjD,CACA,WAAWjN,EAAa,CACpB,KAAK,WAAW,MAAQ,OAAO,aAAa,MAAM,KAAgB,wBAAsB,aAAaA,CAAW,CAAC,CACrH,CACA,WAAWmN,EAAa,CACpB,IAAMC,EAASD,EAAY,OACrBtL,EAAO,KAAK,WAAW,aAAe,IAAI,WAAWuL,CAAM,EACjE,QAASzN,EAAI,EAAGA,EAAIyN,EAAQzN,IACxBkC,EAAKlC,CAAC,EAAIwN,EAAY,WAAWxN,CAAC,EACtC,KAAK,WAAW,MAAQwN,CAC5B,CACJ,EACAD,EAAuB,KAAO,gBAE9B,IAAMG,GAAN,cAAwCH,CAAuB,CAC3D,WAAWlN,EAAa,CACpB,KAAK,WAAW,aAAyB,wBAAsB,aAAaA,CAAW,EACvF,GAAI,CACA,KAAK,WAAW,MAAkB,UAAQ,aAAaA,CAAW,CACtE,OACOsN,EAAI,CACP,KAAK,SAAS,KAAK,sCAAsCA,CAAE,oBAAoB,EAC/E,KAAK,WAAW,MAAkB,UAAQ,SAAStN,CAAW,CAClE,CACJ,CACA,WAAWmN,EAAa,CACpB,KAAK,WAAW,aAAe,IAAI,WAAqB,UAAQ,eAAeA,CAAW,CAAC,EAC3F,KAAK,WAAW,MAAQA,CAC5B,CACJ,EACAE,GAA0B,KAAO,uBAEjC,IAAIE,GACEC,GAAN,cAAyBH,EAA0B,CAC/C,YAAYhJ,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAkJ,GAAOC,GAEHxJ,EAAU,WAAauJ,GAE3BC,GAAW,KAAO,aAElB,IAAMC,GAAN,cAAuCP,CAAuB,CAC1D,WAAWlN,EAAa,CACpB,KAAK,WAAW,MAAkB,UAAQ,cAAcA,CAAW,EACnE,KAAK,WAAW,aAAyB,wBAAsB,aAAaA,CAAW,CAC3F,CACA,WAAWmN,EAAa,CACpB,KAAK,WAAW,MAAQA,EACxB,KAAK,WAAW,aAAe,IAAI,WAAqB,UAAQ,gBAAgBA,CAAW,CAAC,CAChG,CACJ,EACAM,GAAyB,KAAO,sBAEhC,IAAIC,GACEC,GAAN,cAAwBF,EAAyB,CAC7C,YAAY,CAAE,GAAGpJ,CAAW,EAAI,CAAC,EAAG,CAChC,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAqJ,GAAOC,GAEH3J,EAAU,UAAY0J,GAE1BC,GAAU,KAAO,YAEjB,IAAMC,GAAN,cAA6CV,CAAuB,CAChE,WAAWlN,EAAa,CACpB,IAAM6N,EAAa,YAAY,OAAO7N,CAAW,EAAIA,EAAY,MAAM,EAAE,OAASA,EAAY,MAAM,CAAC,EAC/F8N,EAAY,IAAI,WAAWD,CAAU,EAC3C,QAASlO,EAAI,EAAGA,EAAImO,EAAU,OAAQnO,GAAK,EACvCmO,EAAUnO,CAAC,EAAImO,EAAUnO,EAAI,CAAC,EAC9BmO,EAAUnO,EAAI,CAAC,EAAImO,EAAUnO,EAAI,CAAC,EAClCmO,EAAUnO,EAAI,CAAC,EAAI,EACnBmO,EAAUnO,EAAI,CAAC,EAAI,EAEvB,KAAK,WAAW,MAAQ,OAAO,aAAa,MAAM,KAAM,IAAI,YAAYkO,CAAU,CAAC,CACvF,CACA,WAAWV,EAAa,CACpB,IAAMY,EAAYZ,EAAY,OACxBa,EAAe,KAAK,WAAW,aAAe,IAAI,WAAWD,EAAY,CAAC,EAChF,QAASpO,EAAI,EAAGA,EAAIoO,EAAWpO,IAAK,CAChC,IAAMsO,EAAkBlL,GAAWoK,EAAY,WAAWxN,CAAC,EAAG,CAAC,EACzDuO,EAAW,IAAI,WAAWD,CAAO,EACvC,GAAIC,EAAS,OAAS,EAClB,SACJ,IAAMC,EAAM,EAAID,EAAS,OACzB,QAASE,EAAKF,EAAS,OAAS,EAAIE,GAAK,EAAGA,IACxCJ,EAAarO,EAAI,EAAIyO,EAAID,CAAG,EAAID,EAASE,CAAC,CAClD,CACA,KAAK,WAAW,MAAQjB,CAC5B,CACJ,EACAS,GAA+B,KAAO,4BAEtC,IAAIS,GACEC,GAAN,cAA8BV,EAA+B,CACzD,YAAY,CAAE,GAAGvJ,CAAW,EAAI,CAAC,EAAG,CAChC,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAgK,GAAOC,GAEHtK,EAAU,gBAAkBqK,GAEhCC,GAAgB,KAAO,kBAEvB,IAAIC,GACEC,GAAN,cAA4BtB,CAAuB,CAC/C,YAAY7I,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAkK,GAAOC,GAEHxK,EAAU,cAAgBuK,GAE9BC,GAAc,KAAO,gBAErB,IAAIC,GACEC,GAAN,cAA8BxB,CAAuB,CACjD,YAAY7I,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAoK,GAAOC,GAEH1K,EAAU,gBAAkByK,GAEhCC,GAAgB,KAAO,kBAEvB,IAAIC,GACEC,GAAN,cAA4B1B,CAAuB,CAC/C,YAAY7I,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAsK,GAAOC,GAEH5K,EAAU,cAAgB2K,GAE9BC,GAAc,KAAO,gBAErB,IAAIC,GACEC,GAAN,cAA6B5B,CAAuB,CAChD,YAAY7I,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAwK,GAAOC,GAEH9K,EAAU,eAAiB6K,GAE/BC,GAAe,KAAO,iBAEtB,IAAIC,GACEC,GAAN,cAAwB9B,CAAuB,CAC3C,YAAY7I,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACA0K,GAAOC,GAEHhL,EAAU,UAAY+K,GAE1BC,GAAU,KAAO,YAEjB,IAAIC,GACEC,GAAN,cAA4BhC,CAAuB,CAC/C,YAAY7I,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACA4K,GAAOC,GAEHlL,EAAU,cAAgBiL,GAE9BC,GAAc,KAAO,gBAErB,IAAIC,GACEC,GAAN,cAA4BlC,CAAuB,CAC/C,YAAY7I,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACA8K,GAAOC,GAEHpL,EAAU,cAAgBmL,GAE9BC,GAAc,KAAO,gBAErB,IAAIC,GACEC,GAAN,cAA4BpC,CAAuB,CAC/C,YAAY7I,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAgL,GAAOC,GAEHtL,EAAU,cAAgBqL,GAE9BC,GAAc,KAAO,gBAErB,IAAIC,GACEC,GAAN,cAA8BtC,CAAuB,CACjD,YAAY7I,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAkL,GAAOC,GAEHxL,EAAU,gBAAkBuL,GAEhCC,GAAgB,KAAO,kBAEvB,IAAIC,GACEC,GAAN,cAAsBN,EAAc,CAChC,YAAY,CAAE,MAAAxN,EAAO,UAAA+N,EAAW,GAAGtL,CAAW,EAAI,CAAC,EAAG,CAQlD,GAPA,MAAMA,CAAU,EAChB,KAAK,KAAO,EACZ,KAAK,MAAQ,EACb,KAAK,IAAM,EACX,KAAK,KAAO,EACZ,KAAK,OAAS,EACd,KAAK,OAAS,EACVzC,EAAO,CACP,KAAK,WAAWA,CAAK,EACrB,KAAK,WAAW,aAAe,IAAI,WAAWA,EAAM,MAAM,EAC1D,QAASjC,EAAI,EAAGA,EAAIiC,EAAM,OAAQjC,IAC9B,KAAK,WAAW,aAAaA,CAAC,EAAIiC,EAAM,WAAWjC,CAAC,CAC5D,CACIgQ,IACA,KAAK,SAASA,CAAS,EACvB,KAAK,WAAW,aAAe,IAAI,WAAW,KAAK,SAAS,CAAC,GAEjE,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACA,WAAW3P,EAAa,CACpB,KAAK,WAAW,OAAO,aAAa,MAAM,KAAgB,wBAAsB,aAAaA,CAAW,CAAC,CAAC,CAC9G,CACA,UAAW,CACP,IAAM4P,EAAM,KAAK,SAAS,EACpBhQ,EAAS,IAAI,YAAYgQ,EAAI,MAAM,EACnC/N,EAAO,IAAI,WAAWjC,CAAM,EAClC,QAASD,EAAI,EAAGA,EAAIiQ,EAAI,OAAQjQ,IAC5BkC,EAAKlC,CAAC,EAAIiQ,EAAI,WAAWjQ,CAAC,EAC9B,OAAOC,CACX,CACA,SAASiQ,EAAW,CAChB,KAAK,KAAOA,EAAU,eAAe,EACrC,KAAK,MAAQA,EAAU,YAAY,EAAI,EACvC,KAAK,IAAMA,EAAU,WAAW,EAChC,KAAK,KAAOA,EAAU,YAAY,EAClC,KAAK,OAASA,EAAU,cAAc,EACtC,KAAK,OAASA,EAAU,cAAc,CAC1C,CACA,QAAS,CACL,OAAQ,IAAI,KAAK,KAAK,IAAI,KAAK,KAAM,KAAK,MAAQ,EAAG,KAAK,IAAK,KAAK,KAAM,KAAK,OAAQ,KAAK,MAAM,CAAC,CACvG,CACA,WAAW1C,EAAa,CAEpB,IAAM2C,EADS,gDACY,KAAK3C,CAAW,EAC3C,GAAI2C,IAAgB,KAAM,CACtB,KAAK,MAAQ,oCACb,MACJ,CACA,IAAMC,EAAO,SAASD,EAAY,CAAC,EAAG,EAAE,EACpCC,GAAQ,GACR,KAAK,KAAO,KAAOA,EAEnB,KAAK,KAAO,IAAOA,EACvB,KAAK,MAAQ,SAASD,EAAY,CAAC,EAAG,EAAE,EACxC,KAAK,IAAM,SAASA,EAAY,CAAC,EAAG,EAAE,EACtC,KAAK,KAAO,SAASA,EAAY,CAAC,EAAG,EAAE,EACvC,KAAK,OAAS,SAASA,EAAY,CAAC,EAAG,EAAE,EACzC,KAAK,OAAS,SAASA,EAAY,CAAC,EAAG,EAAE,CAC7C,CACA,SAAShL,EAAW,MAAO,CACvB,GAAIA,IAAa,MAAO,CACpB,IAAMkL,EAAc,IAAI,MAAM,CAAC,EAC/B,OAAAA,EAAY,CAAC,EAAYC,EAAY,KAAK,KAAO,IAAS,KAAK,KAAO,KAAS,KAAK,KAAO,IAAQ,CAAC,EACpGD,EAAY,CAAC,EAAYC,EAAU,KAAK,MAAO,CAAC,EAChDD,EAAY,CAAC,EAAYC,EAAU,KAAK,IAAK,CAAC,EAC9CD,EAAY,CAAC,EAAYC,EAAU,KAAK,KAAM,CAAC,EAC/CD,EAAY,CAAC,EAAYC,EAAU,KAAK,OAAQ,CAAC,EACjDD,EAAY,CAAC,EAAYC,EAAU,KAAK,OAAQ,CAAC,EACjDD,EAAY,CAAC,EAAI,IACVA,EAAY,KAAK,EAAE,CAC9B,CACA,OAAO,MAAM,SAASlL,CAAQ,CAClC,CACA,iBAAkB,CACd,MAAO,GAAG,KAAK,YAAY,IAAI,MAAM,KAAK,OAAO,EAAE,YAAY,CAAC,EACpE,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,KAAM,KAAK,KACX,MAAO,KAAK,MACZ,IAAK,KAAK,IACV,KAAM,KAAK,KACX,OAAQ,KAAK,OACb,OAAQ,KAAK,MACjB,CACJ,CACJ,EACA2K,GAAOC,GAEH1L,EAAU,QAAUyL,GAExBC,GAAQ,KAAO,UAEf,IAAIQ,GACEC,GAAN,cAA8BT,EAAQ,CAClC,YAAYrL,EAAa,CAAC,EAAG,CACzB,IAAI5B,EACJ,MAAM4B,CAAU,GACf5B,EAAK,KAAK,eAAiB,MAAQA,IAAO,SAAe,KAAK,YAAc,GAC7E,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACA,SAASoN,EAAW,CAChB,MAAM,SAASA,CAAS,EACxB,KAAK,YAAcA,EAAU,mBAAmB,CACpD,CACA,QAAS,CACL,OAAQ,IAAI,KAAK,KAAK,IAAI,KAAK,KAAM,KAAK,MAAQ,EAAG,KAAK,IAAK,KAAK,KAAM,KAAK,OAAQ,KAAK,OAAQ,KAAK,WAAW,CAAC,CACzH,CACA,WAAW1C,EAAa,CACpB,IAAIiD,EAAQ,GACRC,EAAa,GACbC,EAAiB,GACjBC,EAAe,EACfC,EACAC,EAAiB,EACjBC,EAAmB,EACvB,GAAIvD,EAAYA,EAAY,OAAS,CAAC,IAAM,IACxCkD,EAAalD,EAAY,UAAU,EAAGA,EAAY,OAAS,CAAC,EAC5DiD,EAAQ,OAEP,CACD,IAAMvN,EAAS,IAAI,OAAOsK,EAAYA,EAAY,OAAS,CAAC,CAAC,EAC7D,GAAI,MAAMtK,EAAO,QAAQ,CAAC,EACtB,MAAM,IAAI,MAAM,mCAAmC,EACvDwN,EAAalD,CACjB,CACA,GAAIiD,EAAO,CACP,GAAIC,EAAW,QAAQ,GAAG,IAAM,GAC5B,MAAM,IAAI,MAAM,mCAAmC,EACvD,GAAIA,EAAW,QAAQ,GAAG,IAAM,GAC5B,MAAM,IAAI,MAAM,mCAAmC,CAC3D,KACK,CACD,IAAIM,EAAa,EACbC,EAAqBP,EAAW,QAAQ,GAAG,EAC3CQ,EAAmB,GAKvB,GAJID,IAAuB,KACvBA,EAAqBP,EAAW,QAAQ,GAAG,EAC3CM,EAAa,IAEbC,IAAuB,GAAI,CAG3B,GAFAC,EAAmBR,EAAW,UAAUO,EAAqB,CAAC,EAC9DP,EAAaA,EAAW,UAAU,EAAGO,CAAkB,EAClDC,EAAiB,SAAW,GAAOA,EAAiB,SAAW,EAChE,MAAM,IAAI,MAAM,mCAAmC,EACvD,IAAIhO,EAAS,SAASgO,EAAiB,UAAU,EAAG,CAAC,EAAG,EAAE,EAC1D,GAAI,MAAMhO,EAAO,QAAQ,CAAC,EACtB,MAAM,IAAI,MAAM,mCAAmC,EAEvD,GADA4N,EAAiBE,EAAa9N,EAC1BgO,EAAiB,SAAW,EAAG,CAE/B,GADAhO,EAAS,SAASgO,EAAiB,UAAU,EAAG,CAAC,EAAG,EAAE,EAClD,MAAMhO,EAAO,QAAQ,CAAC,EACtB,MAAM,IAAI,MAAM,mCAAmC,EACvD6N,EAAmBC,EAAa9N,CACpC,CACJ,CACJ,CACA,IAAIiO,EAAwBT,EAAW,QAAQ,GAAG,EAGlD,GAFIS,IAA0B,KAC1BA,EAAwBT,EAAW,QAAQ,GAAG,GAC9CS,IAA0B,GAAI,CAC9B,IAAMC,EAAoB,IAAI,OAAO,IAAIV,EAAW,UAAUS,CAAqB,CAAC,EAAE,EACtF,GAAI,MAAMC,EAAkB,QAAQ,CAAC,EACjC,MAAM,IAAI,MAAM,mCAAmC,EACvDR,EAAeQ,EAAkB,QAAQ,EACzCT,EAAiBD,EAAW,UAAU,EAAGS,CAAqB,CAClE,MAEIR,EAAiBD,EACrB,OAAQ,GAAM,CACV,KAAMC,EAAe,SAAW,EAE5B,GADAE,EAAS,0BACLM,IAA0B,GAC1B,MAAM,IAAI,MAAM,mCAAmC,EACvD,MACJ,KAAMR,EAAe,SAAW,GAE5B,GADAE,EAAS,iCACLM,IAA0B,GAAI,CAC9B,IAAIE,EAAiB,GAAKT,EAC1B,KAAK,OAAS,KAAK,MAAMS,CAAc,EACvCA,EAAiB,IAAMA,EAAiB,KAAK,QAC7C,KAAK,OAAS,KAAK,MAAMA,CAAc,EACvCA,EAAiB,KAAQA,EAAiB,KAAK,QAC/C,KAAK,YAAc,KAAK,MAAMA,CAAc,CAChD,CACA,MACJ,KAAMV,EAAe,SAAW,GAE5B,GADAE,EAAS,wCACLM,IAA0B,GAAI,CAC9B,IAAIE,EAAiB,GAAKT,EAC1B,KAAK,OAAS,KAAK,MAAMS,CAAc,EACvCA,EAAiB,KAAQA,EAAiB,KAAK,QAC/C,KAAK,YAAc,KAAK,MAAMA,CAAc,CAChD,CACA,MACJ,KAAMV,EAAe,SAAW,GAE5B,GADAE,EAAS,+CACLM,IAA0B,GAAI,CAC9B,IAAME,EAAiB,IAAOT,EAC9B,KAAK,YAAc,KAAK,MAAMS,CAAc,CAChD,CACA,MACJ,QACI,MAAM,IAAI,MAAM,mCAAmC,CAC3D,CACA,IAAMlB,EAAcU,EAAO,KAAKF,CAAc,EAC9C,GAAIR,IAAgB,KAChB,MAAM,IAAI,MAAM,mCAAmC,EACvD,QAAS1B,EAAI,EAAGA,EAAI0B,EAAY,OAAQ1B,IACpC,OAAQA,EAAG,CACP,IAAK,GACD,KAAK,KAAO,SAAS0B,EAAY1B,CAAC,EAAG,EAAE,EACvC,MACJ,IAAK,GACD,KAAK,MAAQ,SAAS0B,EAAY1B,CAAC,EAAG,EAAE,EACxC,MACJ,IAAK,GACD,KAAK,IAAM,SAAS0B,EAAY1B,CAAC,EAAG,EAAE,EACtC,MACJ,IAAK,GACD,KAAK,KAAO,SAAS0B,EAAY1B,CAAC,EAAG,EAAE,EAAIqC,EAC3C,MACJ,IAAK,GACD,KAAK,OAAS,SAASX,EAAY1B,CAAC,EAAG,EAAE,EAAIsC,EAC7C,MACJ,IAAK,GACD,KAAK,OAAS,SAASZ,EAAY1B,CAAC,EAAG,EAAE,EACzC,MACJ,QACI,MAAM,IAAI,MAAM,mCAAmC,CAC3D,CAEJ,GAAIgC,IAAU,GAAO,CACjB,IAAMa,EAAW,IAAI,KAAK,KAAK,KAAM,KAAK,MAAO,KAAK,IAAK,KAAK,KAAM,KAAK,OAAQ,KAAK,OAAQ,KAAK,WAAW,EAChH,KAAK,KAAOA,EAAS,eAAe,EACpC,KAAK,MAAQA,EAAS,YAAY,EAClC,KAAK,IAAMA,EAAS,UAAU,EAC9B,KAAK,KAAOA,EAAS,YAAY,EACjC,KAAK,OAASA,EAAS,cAAc,EACrC,KAAK,OAASA,EAAS,cAAc,EACrC,KAAK,YAAcA,EAAS,mBAAmB,CACnD,CACJ,CACA,SAASnM,EAAW,MAAO,CACvB,GAAIA,IAAa,MAAO,CACpB,IAAMkL,EAAc,CAAC,EACrB,OAAAA,EAAY,KAAaC,EAAU,KAAK,KAAM,CAAC,CAAC,EAChDD,EAAY,KAAaC,EAAU,KAAK,MAAO,CAAC,CAAC,EACjDD,EAAY,KAAaC,EAAU,KAAK,IAAK,CAAC,CAAC,EAC/CD,EAAY,KAAaC,EAAU,KAAK,KAAM,CAAC,CAAC,EAChDD,EAAY,KAAaC,EAAU,KAAK,OAAQ,CAAC,CAAC,EAClDD,EAAY,KAAaC,EAAU,KAAK,OAAQ,CAAC,CAAC,EAC9C,KAAK,cAAgB,IACrBD,EAAY,KAAK,GAAG,EACpBA,EAAY,KAAaC,EAAU,KAAK,YAAa,CAAC,CAAC,GAE3DD,EAAY,KAAK,GAAG,EACbA,EAAY,KAAK,EAAE,CAC9B,CACA,OAAO,MAAM,SAASlL,CAAQ,CAClC,CACA,QAAS,CACL,MAAO,CACH,GAAG,MAAM,OAAO,EAChB,YAAa,KAAK,WACtB,CACJ,CACJ,EACAoL,GAAOC,GAEHnM,EAAU,gBAAkBkM,GAEhCC,GAAgB,KAAO,kBAEvB,IAAIe,GACEC,GAAN,cAAmB3D,EAAW,CAC1B,YAAYnJ,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACA6M,GAAOC,GAEHnN,EAAU,KAAOkN,GAErBC,GAAK,KAAO,OAEZ,IAAIC,GACEC,GAAN,cAAwB7D,EAAW,CAC/B,YAAYnJ,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACA+M,GAAOC,GAEHrN,EAAU,UAAYoN,GAE1BC,GAAU,KAAO,YAEjB,IAAIC,GACEC,GAAN,cAAuB/D,EAAW,CAC9B,YAAYnJ,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAiN,GAAOC,GAEHvN,EAAU,SAAWsN,GAEzBC,GAAS,KAAO,WAEhB,IAAIC,GACEC,GAAN,cAAuBjE,EAAW,CAC9B,YAAYnJ,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACAmN,GAAOC,GAEHzN,EAAU,SAAWwN,GAEzBC,GAAS,KAAO,WAEhB,IAAIhQ,GACEiQ,GAAN,cAAmBlE,EAAW,CAC1B,YAAYnJ,EAAa,CAAC,EAAG,CACzB,MAAMA,CAAU,EAChB,KAAK,QAAQ,SAAW,EACxB,KAAK,QAAQ,UAAY,EAC7B,CACJ,EACA5C,GAAKiQ,GAED1N,EAAU,KAAOvC,GAErBiQ,GAAK,KAAO,OAEZ,IAAMC,GAAN,KAAU,CACN,YAAY,CAAE,KAAAzN,EAAOjD,EAAc,SAAAkD,EAAW,EAAO,EAAI,CAAC,EAAG,CACzD,KAAK,KAAOD,EACZ,KAAK,SAAWC,CACpB,CACJ,EAEMyN,GAAN,cAAqBD,EAAI,CACrB,YAAY,CAAE,MAAA/P,EAAQ,CAAC,EAAG,GAAGyC,CAAW,EAAI,CAAC,EAAG,CAC5C,MAAMA,CAAU,EAChB,KAAK,MAAQzC,CACjB,CACJ,EAEMiQ,GAAN,cAAuBF,EAAI,CACvB,YAAY,CAAE,MAAA/P,EAAQ,IAAI+P,GAAO,MAAAG,EAAQ,GAAO,GAAGzN,CAAW,EAAI,CAAC,EAAG,CAClE,MAAMA,CAAU,EAChB,KAAK,MAAQzC,EACb,KAAK,MAAQkQ,CACjB,CACJ,EAsBA,SAASC,GAAcC,EAAMC,EAAWC,EAAa,CACjD,GAAIA,aAAuBC,GAAQ,CAC/B,QAASC,EAAI,EAAGA,EAAIF,EAAY,MAAM,OAAQE,IAE1C,GADeL,GAAcC,EAAMC,EAAWC,EAAY,MAAME,CAAC,CAAC,EACvD,SACP,MAAO,CACH,SAAU,GACV,OAAQJ,CACZ,EAGR,CACI,IAAMK,EAAU,CACZ,SAAU,GACV,OAAQ,CACJ,MAAO,8BACX,CACJ,EACA,OAAIH,EAAY,eAAeI,EAAI,IAC/BD,EAAQ,KAAOH,EAAY,MACxBG,CACX,CACJ,CACA,GAAIH,aAAuBK,GACvB,OAAIL,EAAY,eAAeI,EAAI,IAC/BN,EAAKE,EAAY,IAAI,EAAID,GACtB,CACH,SAAU,GACV,OAAQD,CACZ,EAEJ,GAAK,EAAAA,aAAgB,QACjB,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,mBAAoB,CACzC,EAEJ,GAAK,EAAAC,aAAqB,QACtB,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,kBAAmB,CACxC,EAEJ,GAAK,EAAAC,aAAuB,QACxB,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,oBAAqB,CAC1C,EAEJ,GAAK,EAAAM,MAAYN,GACb,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,oBAAqB,CAC1C,EAEJ,GAAK,EAAAO,MAAYP,EAAY,SACzB,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,oBAAqB,CAC1C,EAEJ,GAAK,EAAAQ,MAAUR,EAAY,SACvB,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,oBAAqB,CAC1C,EAEJ,IAAMS,EAAYT,EAAY,QAAQ,MAAM,EAAK,EACjD,GAAIS,EAAU,aAAe,EACzB,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,yCAA0C,CAC/D,EAGJ,GADsBT,EAAY,QAAQ,QAAQS,EAAW,EAAGA,EAAU,UAAU,IAC9D,GAClB,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,yCAA0C,CAC/D,EAEJ,GAAIT,EAAY,QAAQ,eAAeU,EAAS,IAAM,GAClD,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,oBAAqB,CAC1C,EAEJ,GAAIV,EAAY,QAAQ,WAAaD,EAAU,QAAQ,SACnD,MAAO,CACH,SAAU,GACV,OAAQD,CACZ,EAEJ,GAAIE,EAAY,QAAQ,eAAeW,EAAU,IAAM,GACnD,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,oBAAqB,CAC1C,EAEJ,GAAIX,EAAY,QAAQ,YAAcD,EAAU,QAAQ,UACpD,MAAO,CACH,SAAU,GACV,OAAQD,CACZ,EAEJ,GAAIE,EAAY,QAAQ,eAAeY,EAAc,IAAM,GACvD,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,oBAAqB,CAC1C,EAEJ,GAAIZ,EAAY,QAAQ,gBAAkBD,EAAU,QAAQ,cACxD,MAAO,CACH,SAAU,GACV,OAAQD,CACZ,EAEJ,GAAI,EAAEe,MAAeb,EAAY,SAC7B,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,oBAAqB,CAC1C,EAEJ,GAAIA,EAAY,QAAQ,YAAcD,EAAU,QAAQ,UACpD,MAAO,CACH,SAAU,GACV,OAAQD,CACZ,EAEJ,GAAIE,EAAY,QAAQ,UAAW,CAC/B,GAAK,EAAAc,MAAkBd,EAAY,SAC/B,MAAO,CACH,SAAU,GACV,OAAQ,CAAE,MAAO,oBAAqB,CAC1C,EAEJ,IAAMe,EAAaf,EAAY,QAAQ,aACjCgB,EAAWjB,EAAU,QAAQ,aACnC,GAAIgB,EAAW,SAAWC,EAAS,OAC/B,MAAO,CACH,SAAU,GACV,OAAQlB,CACZ,EAEJ,QAASmB,EAAI,EAAGA,EAAIF,EAAW,OAAQE,IACnC,GAAIF,EAAWE,CAAC,IAAMD,EAAS,CAAC,EAC5B,MAAO,CACH,SAAU,GACV,OAAQlB,CACZ,CAGZ,CAMA,GALIE,EAAY,OACZA,EAAY,KAAOA,EAAY,KAAK,QAAQ,aAAckB,CAAY,EAClElB,EAAY,OACZF,EAAKE,EAAY,IAAI,EAAID,IAE7BC,aAAuBmB,EAAU,YAAa,CAC9C,IAAIC,EAAY,EACZC,EAAS,CACT,SAAU,GACV,OAAQ,CACJ,MAAO,eACX,CACJ,EACIC,EAAYtB,EAAY,WAAW,MAAM,OAM7C,GALIsB,EAAY,GACRtB,EAAY,WAAW,MAAM,CAAC,YAAauB,KAC3CD,EAAYvB,EAAU,WAAW,MAAM,QAG3CuB,IAAc,EACd,MAAO,CACH,SAAU,GACV,OAAQxB,CACZ,EAEJ,GAAKC,EAAU,WAAW,MAAM,SAAW,GACtCC,EAAY,WAAW,MAAM,SAAW,EAAI,CAC7C,IAAIwB,EAAY,GAChB,QAASP,EAAI,EAAGA,EAAIjB,EAAY,WAAW,MAAM,OAAQiB,IACrDO,EAAYA,IAAcxB,EAAY,WAAW,MAAMiB,CAAC,EAAE,UAAY,IAC1E,OAAIO,EACO,CACH,SAAU,GACV,OAAQ1B,CACZ,GAEAE,EAAY,OACZA,EAAY,KAAOA,EAAY,KAAK,QAAQ,aAAckB,CAAY,EAClElB,EAAY,MACZ,OAAOF,EAAKE,EAAY,IAAI,GAEpCF,EAAK,MAAQ,6BACN,CACH,SAAU,GACV,OAAQA,CACZ,EACJ,CACA,QAASmB,EAAI,EAAGA,EAAIK,EAAWL,IAC3B,GAAKA,EAAIG,GAAcrB,EAAU,WAAW,MAAM,QAC9C,GAAIC,EAAY,WAAW,MAAMiB,CAAC,EAAE,WAAa,GAAO,CACpD,IAAMd,EAAU,CACZ,SAAU,GACV,OAAQL,CACZ,EACA,OAAAA,EAAK,MAAQ,oDACTE,EAAY,OACZA,EAAY,KAAOA,EAAY,KAAK,QAAQ,aAAckB,CAAY,EAClElB,EAAY,OACZ,OAAOF,EAAKE,EAAY,IAAI,EAC5BG,EAAQ,KAAOH,EAAY,OAG5BG,CACX,UAGIH,EAAY,WAAW,MAAM,CAAC,YAAauB,GAAU,CAErD,GADAF,EAASxB,GAAcC,EAAMC,EAAU,WAAW,MAAMkB,CAAC,EAAGjB,EAAY,WAAW,MAAM,CAAC,EAAE,KAAK,EAC7FqB,EAAO,WAAa,GACpB,GAAIrB,EAAY,WAAW,MAAM,CAAC,EAAE,SAChCoB,QAEA,QAAIpB,EAAY,OACZA,EAAY,KAAOA,EAAY,KAAK,QAAQ,aAAckB,CAAY,EAClElB,EAAY,MACZ,OAAOF,EAAKE,EAAY,IAAI,GAE7BqB,EAGf,GAAKjB,MAAQJ,EAAY,WAAW,MAAM,CAAC,GAAOA,EAAY,WAAW,MAAM,CAAC,EAAE,KAAK,OAAS,EAAI,CAChG,IAAIyB,EAAY,CAAC,EACZC,MAAS1B,EAAY,WAAW,MAAM,CAAC,GAAOA,EAAY,WAAW,MAAM,CAAC,EAAE,MAC/EyB,EAAY1B,EAEZ0B,EAAY3B,EACZ,OAAO2B,EAAUzB,EAAY,WAAW,MAAM,CAAC,EAAE,IAAI,EAAM,MAC3DyB,EAAUzB,EAAY,WAAW,MAAM,CAAC,EAAE,IAAI,EAAI,CAAC,GACvDyB,EAAUzB,EAAY,WAAW,MAAM,CAAC,EAAE,IAAI,EAAE,KAAKD,EAAU,WAAW,MAAMkB,CAAC,CAAC,CACtF,CACJ,SAEII,EAASxB,GAAcC,EAAMC,EAAU,WAAW,MAAMkB,EAAIG,CAAS,EAAGpB,EAAY,WAAW,MAAMiB,CAAC,CAAC,EACnGI,EAAO,WAAa,GACpB,GAAIrB,EAAY,WAAW,MAAMiB,CAAC,EAAE,SAChCG,QAEA,QAAIpB,EAAY,OACZA,EAAY,KAAOA,EAAY,KAAK,QAAQ,aAAckB,CAAY,EAClElB,EAAY,MACZ,OAAOF,EAAKE,EAAY,IAAI,GAE7BqB,EAM3B,GAAIA,EAAO,WAAa,GAAO,CAC3B,IAAMlB,EAAU,CACZ,SAAU,GACV,OAAQL,CACZ,EACA,OAAIE,EAAY,OACZA,EAAY,KAAOA,EAAY,KAAK,QAAQ,aAAckB,CAAY,EAClElB,EAAY,OACZ,OAAOF,EAAKE,EAAY,IAAI,EAC5BG,EAAQ,KAAOH,EAAY,OAG5BG,CACX,CACA,MAAO,CACH,SAAU,GACV,OAAQL,CACZ,CACJ,CACA,GAAIE,EAAY,iBACXc,MAAkBf,EAAU,WAAa,CAC1C,IAAM4B,EAAOC,GAAa7B,EAAU,WAAW,YAAY,EAC3D,GAAI4B,EAAK,SAAW,GAAI,CACpB,IAAMxB,EAAU,CACZ,SAAU,GACV,OAAQwB,EAAK,MACjB,EACA,OAAI3B,EAAY,OACZA,EAAY,KAAOA,EAAY,KAAK,QAAQ,aAAckB,CAAY,EAClElB,EAAY,OACZ,OAAOF,EAAKE,EAAY,IAAI,EAC5BG,EAAQ,KAAOH,EAAY,OAG5BG,CACX,CACA,OAAON,GAAcC,EAAM6B,EAAK,OAAQ3B,EAAY,eAAe,CACvE,CACA,MAAO,CACH,SAAU,GACV,OAAQF,CACZ,CACJ,CErhGA,IAAM+B,GAAoB,IAAWC,GAAS,CAC5C,MAAO,CACL,IAAWA,GAAS,CAClB,KAAM,sBACN,MAAO,CACL,IAAWC,GAAiB,CAAE,KAAM,WAAY,CAAC,EACjD,IAAWC,GAAI,CAAE,KAAM,aAAc,SAAU,EAAK,CAAC,CACvD,CACF,CAAC,EACD,IAAWC,GAAU,CAAE,KAAM,KAAM,CAAC,CACtC,CACF,CAAC,EAMKC,GAAqB,IAAWJ,GAAS,CAC7C,MAAO,CACL,IAAWK,GAAQ,CAAE,KAAM,SAAU,CAAC,EACtC,IAAWL,GAAS,CAClB,KAAM,sBACN,MAAO,CACL,IAAWC,GAAiB,CAAE,KAAM,WAAY,CAAC,EACjD,IAAWC,GAAI,CAAE,KAAM,aAAc,SAAU,EAAK,CAAC,CACvD,CACF,CAAC,EACD,IAAWI,GAAY,CAAE,KAAM,KAAM,CAAC,EACtC,IAAWC,GAAY,CACrB,SAAU,GACV,QAAS,CACP,SAAU,EACV,UAAW,CACb,EACA,MAAO,CACL,IAAWC,GAAS,CAClB,KAAM,aACN,MAAO,IAAWR,GAAS,CACzB,MAAO,CACL,IAAWC,GAAiB,CAAC,CAAC,EAC9B,IAAWQ,GAAI,CAAE,MAAO,CAAC,IAAWD,GAAS,CAAE,MAAO,IAAWN,EAAM,CAAC,CAAC,CAAE,CAAC,CAC9E,CACF,CAAC,CACH,CAAC,CACH,CACF,CAAC,CACH,CACF,CAAC,EAEKQ,GAAU,SAAS,cAA2B,sCAAsC,EACpFC,GAAeD,GAAQ,cAAiC,QAAQ,EAChEE,GAAWF,GAAQ,cAAmC,UAAU,EAChEG,GAAkBH,GAAQ,cAAiC,mBAAmB,EAC9EI,GAAgBJ,GAAQ,cAAiC,kBAAkB,EAIjFE,GAAS,iBAAiB,QAAS,IAAM,WAAW,IAAM,CACxD,GAAM,CAAE,MAAAG,CAAM,EAAIH,GACZI,EAAWC,GAAcF,CAAK,EAChCG,EAAc,GACdC,EAAY,GACZC,EACAC,EACAC,EAAoB,UAClBC,EAAwB,CAAC,EAG/B,GAAI,CACF,OAAQP,EAAU,CAEhB,OAAoB,CAClB,IAAMQ,EAAM,KAAK,MAAMT,CAAK,EAG5B,GAAIS,GAAOA,EAAI,IAOb,OANAJ,EAAS,MACTC,EAAUG,EACVD,EAAU,KAAK,GAAGC,EAAI,OAAO,EACzBA,EAAI,IAAGL,EAAY,IAEnBK,EAAI,MAAQ,QAAON,EAAc,IAC7B,GAAM,CACZ,IAAK,YAAY,KAAKM,EAAI,GAAG,EAAGF,EAAY,UAAW,MACvD,IAAK,YAAY,KAAKE,EAAI,GAAG,EAAGF,EAAY,UAAW,MACvD,IAAK,YAAY,KAAKE,EAAI,GAAG,EAAGF,EAAY,UAAW,MACvD,IAAK,UAAU,KAAKE,EAAI,GAAG,EAAGF,EAAY,OAAQ,MAClD,IAAK,iBAAiB,KAAKE,EAAI,GAAG,EAAGF,EAAY,WAAY,MAC7D,IAAK,UAAU,KAAKE,EAAI,GAAG,EAAGF,EAAY,UAAW,MACrD,IAAK,UAAU,KAAKE,EAAI,GAAG,EAAGF,EAAY,oBAAqB,MAC/D,QAEME,EAAI,MAAQ,OAAMF,EAAY,QACtC,KACK,OAAM,IAAI,MAAM,yCAAyC,EAChE,KACF,CAKA,OACA,QAAS,CACP,GAAIN,IAAa,GAAc,CAE7B,IAAMS,EAAMV,EAAM,MAAM,6HAA6H,EACjJU,GAAOA,EAAI,OAAS,IAAGJ,EAAUK,EAAOD,EAAI,CAAC,IAAkB,EACrE,MAAOJ,EAAUK,EAAOX,EAAOC,CAAQ,EAIvC,IAAMW,EADaC,GAAQP,CAAsB,EAChC,OACbQ,EAqBJ,GAlBAA,EAAgBC,GACdH,EACAA,EACA5B,EACF,EACAqB,EAAS,QAGL,CAACS,GAAU,CAACA,EAAO,YACrBA,EAAgBC,GACdH,EACAA,EACAvB,EACF,EACAe,EAAY,GACZC,EAAS,SAGP,CAACS,GAAU,CAACA,EAAO,SAAU,CAC/B,QAAQ,IAAI,qGAAqG,EACjHT,EAAS,MACTF,EAAc,GACdI,EAAY,UACZ,KACF,CAEA,QAAQ,MAAM,SAAUO,CAAM,EAE9B,IAAME,EAAcF,EAAO,OAAO,UAAU,WAAW,SAAS,EAChE,OAAQE,EAAa,CACnB,IAAK,oBACH,QAAQ,MAAM,YAAa,QAAS,aAAcZ,CAAS,EAC3DG,EAAY,QACZ,MACF,IAAK,uBACH,QAAQ,MAAM,YAAa,MAAO,aAAcH,CAAS,EACzDG,EAAY,oBACZ,MACF,QACE,MAAM,IAAI,MAAM,wBAAwBS,CAAW,EAAE,CACzD,CAEIZ,EAAWI,EAAU,KAAK,UAAW,MAAM,EAC1CA,EAAU,KAAK,UAAW,QAAQ,CACzC,CACF,CACF,OAASS,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAC9B,QAAQ,MAAMZ,EAASC,EAASC,EAAWC,EAAWL,CAAW,EAGjEL,GAAgB,MAAQS,EACpBJ,EACFJ,GAAc,cAAe,MAAM,QAAU,QAE7CA,GAAc,cAAe,MAAM,QAAU,OAC7CA,GAAc,MAAQK,EAAY,UAAY,SAElD,EAAG,CAAC,CAAC,EAGLR,IAAc,iBAAiB,QAAS,SAAY,CAClD,GAAM,CAAE,MAAAI,CAAM,EAAIH,GACZI,EAAWC,GAAcF,CAAK,EAChCI,EAAY,GAEZC,EACAC,EACAC,EAEEY,EAAc,CAAC,CAACxB,GAAQ,cAAgC,oBAAoB,GAAG,QAC/Ea,EAAwB,CAAC,EAEzBY,EAAUzB,GAAQ,cAAgC,aAAa,GAAG,MAClE0B,EAAU,CAAC,CAAC1B,GAAQ,cAAgC,aAAa,GAAG,QAG1E,GAAI,CACF,GAAI,CAACyB,EAAS,MAAM,IAAI,MAAM,yBAAyB,EAEvD,OAAQnB,EAAU,CAEhB,OAAoB,CAClB,IAAMQ,EAAM,KAAK,MAAMT,CAAK,EAG5B,GAAIS,GAAOA,EAAI,IAKb,OAJAJ,EAAS,MACTC,EAAUG,EACVD,EAAU,KAAK,GAAGC,EAAI,OAAO,EAErB,GAAM,CACZ,IAAK,YAAY,KAAKA,EAAI,GAAG,EAAGF,EAAY,UAAkC,MAC9E,IAAK,YAAY,KAAKE,EAAI,GAAG,EAAGF,EAAY,UAAkC,MAC9E,IAAK,YAAY,KAAKE,EAAI,GAAG,EAAGF,EAAY,UAAkC,MAC9E,IAAK,UAAU,KAAKE,EAAI,GAAG,EACzBF,EAAY,CACV,KAAM,OACN,KAAM,OAAOE,EAAI,IAAI,MAAM,eAAe,EAAE,CAAC,CAAC,EAChD,EACA,MACF,KAAKA,EAAI,MAAQ,MAAO,CACtB,GAAM,CAAC,CAAEa,EAAOC,CAAQ,EAAId,EAAI,IAAI,MAAM,qBAAqB,EAE3De,EACJ,OAAQF,EAAO,CACb,IAAK,WAAYE,EAAO,WAAY,MACpC,IAAK,KAAMA,EAAO,oBAAqB,MACvC,IAAK,KAAMA,EAAO,UAAW,MAC7B,QAAS,MAAM,IAAI,MAAM,kBAAkBf,EAAI,GAAG,qBAAqB,CACzE,CAEA,IAAIgB,EACJ,OAAQF,EAAU,CAChB,KAAK,OAAW,IAAK,IAAKE,EAAO,QAAS,MAC1C,IAAK,MAAO,IAAK,MAAO,IAAK,MAAOA,EAAO,OAAOF,CAAQ,GAAI,MAC9D,QAAS,MAAM,IAAI,MAAM,kBAAkBd,EAAI,GAAG,qBAAqB,CACzE,CAEAF,EAAY,CAAE,KAAAiB,EAAM,KAAAC,CAAK,EACzB,KACF,CAEA,KAAKhB,EAAI,MAAQ,KAAMF,EAAY,CAAE,KAAM,QAAS,WAAYE,EAAI,GAAI,EAAwB,MAChG,QAAS,MAAM,IAAI,MAAM,yBAAyBA,EAAI,GAAG,IAAIA,EAAI,IAAM,oBAAoBA,EAAI,GAAG,IAAM,EAAE,GAAG,CAC/G,KACK,OAAM,IAAI,MAAM,yCAAyC,EAChE,KACF,CAKA,OACA,QAAS,CACP,GAAIR,IAAa,GAAc,CAE7B,IAAMS,EAAMV,EAAM,MAAM,6HAA6H,EACrJ,GAAIU,GAAOA,EAAI,OAAS,EAAGJ,EAAUK,EAAOD,EAAI,CAAC,IAAkB,MAC9D,OAAM,IAAI,MAAM,uBAAuB,CAC9C,MAAOJ,EAAUK,EAAOX,EAAOC,CAAQ,EAIvC,IAAMW,EADaC,GAAQP,CAAO,EACjB,OACbQ,EAqBJ,GAlBAA,EAAgBC,GACdH,EACAA,EACA5B,EACF,EACAqB,EAAS,QAGL,CAACS,GAAU,CAACA,EAAO,YACrBA,EAAgBC,GACdH,EACAA,EACAvB,EACF,EACAe,EAAY,GACZC,EAAS,SAGP,CAACS,GAAU,CAACA,EAAO,SAAU,CAC/B,QAAQ,IAAI,qGAAqG,EACjHT,EAAS,MACTE,EAAYT,GAAgB,MAC5BU,EAAU,KAAK,UAAW,SAAS,EACnC,KACF,CAEA,IAAMQ,EAAcF,EAAO,OAAO,UAAU,WAAW,SAAS,EAChE,OAAQE,EAAa,CAEnB,IAAK,oBAAqBT,EAAY,QAAS,MAC/C,IAAK,uBAAwBA,EAAY,oBAAqB,MAE9D,QACE,MAAM,IAAI,MAAM,yBAAyBS,CAAW,GAAG,CAC3D,CAEIZ,EAAWI,EAAU,KAAK,UAAW,MAAM,EAC1CA,EAAU,KAAK,UAAW,QAAQ,CACzC,CACF,CAGA,IAAIkB,EACArB,IAAW,MACbqB,EAAM,MAAM,OAAO,OAChB,UAAUrB,EAAQC,EAAuBC,EAAWY,EAAaX,CAAS,EAE7EkB,EAAM,MAAM,OAAO,OAChB,UAAUrB,EAAQC,EAAwBC,EAAWY,EAAaX,CAAS,EAGhFmB,GAAOP,EAASM,EAAKL,CAAO,CAC9B,OAASJ,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAChC,CAAC,EC9TD,IAAAW,GAAwB,SAMxB,IAAMC,GAAgB,SAAS,cAA8B,6CAA6C,EACpGC,GAAa,SAAS,cAAgC,yBAAyB,EAErFA,GAAW,iBAAiB,SAAU,IAAM,CAC1C,IAAMC,EAAQ,SAASD,GAAW,MAAO,EAAE,EAC3CD,GAAc,YAAc,gBAAW,GAAKE,GAAO,eAAe,CAAC,aACrE,CAAC,EAGD,IAAMC,GAAiB,CACrBC,EACAC,IACG,CAACC,EAAqBC,IAA6B,CAItD,GAFID,GAAOE,EAAYF,CAAK,EAExB,OAAOC,GAAW,UACpBE,EAAY,CAAC,CAAE,MAAO,6BAA8B,MAAO,OAAOF,CAAM,CAAE,CAAC,CAAC,MACvE,CACL,IAAMG,EAAkB,WAAQH,CAAM,EAChCI,EAAOD,EAAS,QAAQ,QAAS,EAAE,EACnCE,EAAOL,EAAO,UAAUG,EAAS,MAAM,EAE7CD,EAAY,CACV,CAAE,MAAO,gBAAiB,MAAOF,EAAQ,SAAU,eAAgB,EACnE,CAAE,MAAO,OAAQ,MAAOI,EAAM,SAAU,aAAc,EACtD,CAAE,MAAO,OAAQ,MAAOC,EAAM,SAAU,aAAc,CACxD,CAAC,CACH,CAEA,IAAMC,EAAMT,EACZS,EAAI,YAAcR,EAClBQ,EAAI,SAAW,EACjB,EAEMC,GAAkBV,GAA+BW,GAAgB,CACrEC,EAAKD,EAAM,GAAG,EACd,IAAMF,EAAMT,EACZS,EAAI,YAAc,GAAG,OAAOE,EAAM,GAAG,EAAE,UAAU,EAAG,CAAC,CAAC,GACxD,EAGME,GAAmB,SAAS,cAAiC,qBAAqB,EACxFA,IAAkB,iBAAiB,QAAS,IAAM,CAChDD,EAAK,CAAC,EACNC,GAAiB,SAAW,GAE5B,GAAI,CACF,IAAMC,EAAO,SAASjB,GAAW,MAAO,EAAE,GAAK,GACzCkB,EAAW,SAAS,cAAgC,8BAA8B,EAEjF,QACLA,EAAS,MACTD,EACAf,GAAec,GAAkBA,GAAiB,WAAW,EAC7DH,GAAeG,EAAgB,CACjC,CACF,OAASG,EAAG,CAAEZ,EAAYY,CAAC,CAAG,CAChC,CAAC,EAGD,IAAMC,GAAqB,SAAS,cAAiC,uBAAuB,EAC5FA,IAAoB,iBAAiB,QAAS,SAAY,CACxDL,EAAK,CAAC,EACNK,GAAmB,SAAW,GAE9B,IAAMF,EAAW,SAAS,cAAgC,gCAAgC,EACpFP,EAAO,SAAS,cAAgC,4BAA4B,EAElF,GAAI,CACK,WACLO,EAAS,MACTP,EAAK,MACLT,GAAekB,GAAoBA,GAAmB,WAAW,EACjEP,GAAeO,EAAkB,CACnC,CACF,OAASD,EAAG,CAAEZ,EAAYY,CAAC,CAAG,CAChC,CAAC,ECjFD,IAAME,GAAe,SAAS,cAA2B,cAAc,EACjEC,GAAYD,GAAa,cAAiC,aAAa,EACvEE,GAAcF,GAAa,cAAgC,yBAAyB,EACpFG,GAAkBH,GAAa,cAAgC,kBAAkB,EACjFI,GAAeJ,GAAa,cAAiC,uBAAuB,EACpFK,GAAYL,GAAa,cAAgC,YAAY,EACrEM,GAAgBN,GAAa,cAAgC,iBAAiB,EAC9EO,GAASP,GAAa,cAAiC,QAAQ,EAGrEE,IAAa,iBAAiB,SAAU,IAAM,CAC5C,IAAMM,EAAK,SAAS,cAAc,qCAAqC,EACnEA,IAAIA,EAAG,YAAc,GAAG,SAASN,GAAY,MAAO,EAAE,EAAI,CAAC,QACjE,CAAC,EAGDD,IAAW,iBAAiB,SAAU,IAAM,CAC1C,IAAMQ,EAAK,SAAS,cAAc,kCAAkC,EAChEA,IAAIA,EAAG,YAAc,OAAOR,GAAU,gBAAgB,CAAC,EAAE,QAAQ,EAAE,EACzE,CAAC,EAGDM,IAAQ,iBAAiB,QAAS,SAAY,CAC5CG,EAAK,CAAC,EACNH,GAAO,SAAW,GAElB,GAAI,CACF,IAAMI,EAAY,IAAI,YAAY,EAAG,OAAOL,GAAc,KAAK,EACzDM,EAAM,MAAM,OAAO,OAAO,UAAU,MAAOD,EAAU,CAAE,KAAM,QAAS,EAAG,GAAO,CAAC,YAAY,CAAC,EAEhGE,EACJ,GAAIR,GAAU,MAAO,CACnB,IAAMS,EAAQ,OAAOV,GAAa,gBAAgB,CAAC,EAAE,KAAK,EAC1DS,EAAOE,EAAOV,GAAU,MAAOS,CAAK,CACtC,MAAOD,EAAO,OAAO,gBAAgB,IAAI,WAAW,EAAE,CAAC,EAAE,OAEzD,IAAMG,EAAOf,GAAU,gBAAgB,CAAC,EAAE,QAAQ,IAC5CgB,EAAa,OAAOd,GAAgB,MAAM,OAASA,GAAgB,MAAQ,GAAM,EACjFe,EAAY,CAChB,KAAM,SACN,KAAAL,EACA,KAAAG,EACA,WAAAC,CACF,EAEME,EAAS,OAAOjB,GAAY,MAAM,OAASA,GAAY,MAAQ,EAAE,EAAI,EAC3E,GAAIiB,EAAS,EAAG,MAAM,IAAI,MAAM,8BAA8B,EAC9D,IAAMC,EAAa,MAAM,OAAO,OAAO,WAAWF,EAAWN,EAAKO,CAAM,EAKlEE,EAASC,GAAmBA,EAAO,QAAQ,KAAM,EAAE,EACnDC,EAAUF,EAAMG,EAAOX,IAAqB,CAAC,EAC7CY,EAAUJ,EAAMG,EAAOJ,IAA2B,CAAC,EACnDM,EAAa,oBAAoBV,EAAM,YAAY,CAAC,MAAMC,CAAU,UAAUE,CAAM,IAAII,CAAO,IAAIE,CAAO,GAEhHE,EAAY,CAAC,CACX,MAAO,6DAA8D,MAAOD,EAAY,SAAU,eACpG,EAAG,CACD,MAAO,OAAQ,MAAON,EAAY,mBAAkC,SAAU,aAChF,EAAG,CACD,MAAO,OAAQ,MAAOP,EAAM,mBAAkC,SAAU,aAC1E,CAAC,CAAC,CACJ,OAASe,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAE9BrB,GAAO,SAAW,EACpB,CAAC,ECrED,IAAAuB,EAEO,SAiCP,IAAMC,GAAN,cAA4B,aAAY,CAC/B,oBAAoBC,EAAWC,EAAiC,CACrE,OAAO,KAAK,KAAM,IAAI,YAAY,EAAG,OAAO,GAAGD,CAAC,IAAIC,CAAC,EAAE,EAAE,MAAM,CACjE,CACF,EAGMC,GAAiB,CAAC,CAAE,OAAAC,EAAQ,WAAAC,EAAY,cAAAC,CAAc,IAAmB,CAC7E,IAAMC,EAAQ,gBAAc,WAAWF,CAAU,EAC3CG,EAAO,gBAAc,EAAEF,CAAa,EACpCG,EAAS,IAAI,gBAAcF,EAAOC,CAAI,EAE5C,OAAOJ,EAAS,IAAIJ,GAAcS,CAAM,EAAI,IAAI,cAAYA,CAAM,CACpE,EAGMC,GAAW,MAAO,CAAE,SAAAC,EAAU,SAAAC,EAAU,SAAAC,CAAS,IAA0B,CAC/E,GAAM,CAAE,EAAGC,EAAM,EAAGC,CAAS,EAAI,QAAM,yBACrCJ,EACAC,EACAC,CACF,EACA,MAAO,CAAE,KAAAC,EAAM,SAAAC,CAAS,CAC1B,EAGMC,GAAc,MAAOC,GAAoC,CAC7D,GAAM,CACJ,SAAAN,EACA,SAAAC,EAAU,SAAAC,EACV,KAAAC,EAAM,gBAAAI,CACR,EAAID,EASEE,EAAc,MALA,MAFL,IAAI,mBAAiBR,CAAQ,EAEX,MAAMC,EAAUC,CAAQ,GAKnB,MAAMC,EAAMI,CAAe,EAG3D,CAAE,EAAAE,EAAG,GAAAC,CAAG,EAAIF,EAClB,MAAO,CAAE,EAAAC,EAAG,GAAAC,CAAG,CACjB,EAGMC,GAAe,MAAOL,GAAqC,CAC/D,GAAM,CACJ,SAAAN,EACA,SAAAC,EAAU,SAAAC,EACV,KAAAC,EAAM,SAAAC,CACR,EAAIE,EAEEM,EAAS,IAAI,mBAAiBZ,CAAQ,EACtCa,EAAS,IAAI,mBAAiBb,CAAQ,EAEtCc,EAAc,MAAMF,EAAO,MAAMX,EAAUC,CAAQ,EAGnDa,EAAc,MAAMF,EAAO,MAAMZ,EAAUE,EAAMC,CAAQ,EAGzDI,EAAc,MAAMM,EAAY,MAAMX,EAAMY,EAAY,CAAC,EAGzDC,EAAc,MAAMD,EAAY,MAAMP,EAAY,EAAGA,EAAY,EAAE,EAGzE,MAAMA,EAAY,MAAMQ,CAAW,EAEnC,GAAM,CAAE,EAAAC,CAAE,EAAIF,EACR,CAAE,EAAAN,EAAG,GAAAC,CAAG,EAAIF,EAElB,MAAO,CACL,EAAAS,EAAG,EAAAR,EAAG,GAAAC,EAAI,GAFDM,CAGX,CACF,EAEME,GAAkB,SAAS,cAA2B,eAAe,EACrEC,GAAiBD,GAAgB,cAAiC,QAAQ,EAC1EE,GAAsB,SAAS,cAA2B,mBAAmB,EAC7EC,GAAqBD,GAAoB,cAAiC,QAAQ,EAClFE,GAAuB,SAAS,cAA2B,qBAAqB,EAChFC,GAAsBD,GAAqB,cAAiC,QAAQ,EAE1FH,GAAe,iBAAiB,QAAS,SAAY,CACnD,IAAM1B,EAASyB,GAAgB,cAAgC,cAAc,EAAG,QAC1ExB,EAAa,OAAOwB,GAAgB,cAAiC,oBAAoB,EAAG,gBAAgB,CAAC,EAAE,KAAK,EACpHvB,EAAgB,OAAOuB,GAAgB,cAAiC,uBAAuB,EAAG,gBAAgB,CAAC,EAAE,QAAQ,GAAG,EAChIjB,EAAWiB,GAAgB,cAAgC,gBAAgB,GAAG,OAAS,GACvFhB,EAAWgB,GAAgB,cAAgC,wBAAwB,GAAG,OAAS,GAErG,GAAI,CACF,IAAMlB,EAAWR,GAAe,CAAE,OAAAC,EAAQ,WAAAC,EAAY,cAAAC,CAAc,CAAC,EAC/D,CAAE,KAAAQ,EAAM,SAAAC,CAAS,EAAI,MAAML,GAAS,CAAE,SAAAC,EAAU,SAAAC,EAAU,SAAAC,CAAS,CAAC,EAE1EsB,EAAY,CAAC,CACX,MAAO,mCAA+B,MAAOrB,EAAK,SAAS,EAAG,mBAAkC,SAAU,UAC5G,EAAG,CACD,MAAO,uCAAmC,MAAOC,EAAS,SAAS,EAAG,mBAAkC,SAAU,cACpH,EAAG,CACD,MAAO,QAAS,MAAO,gBAAc,WAAWV,CAAU,EAAE,EAAE,SAAS,EAAG,mBAAkC,SAAU,WACxH,CAAC,CAAC,CACJ,OAAS+B,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAChC,CAAC,EAEDJ,GAAmB,iBAAiB,QAAS,SAAY,CACvD,IAAM5B,EAAS2B,GAAoB,cAAgC,cAAc,EAAG,QAC9E1B,EAAa,OAAO0B,GAAoB,cAAiC,oBAAoB,EAAG,gBAAgB,CAAC,EAAE,KAAK,EACxHzB,EAAgB,OAAOyB,GAAoB,cAAiC,uBAAuB,EAAG,gBAAgB,CAAC,EAAE,QAAQ,GAAG,EACpInB,EAAWmB,GAAoB,cAAgC,gBAAgB,GAAG,OAAS,GAC3FlB,EAAWkB,GAAoB,cAAgC,wBAAwB,GAAG,OAAS,GAEzG,GAAI,CACF,IAAMjB,EAAO,OAAOiB,GAAoB,cAAmC,gBAAgB,GAAG,OAAS,EAAE,EACnGhB,EAAW,OAAOgB,GAAoB,cAAmC,oBAAoB,GAAG,OAAS,EAAE,EAC3GpB,EAAWR,GAAe,CAAE,OAAAC,EAAQ,WAAAC,EAAY,cAAAC,CAAc,CAAC,EAC/DgC,EAAoB,CAAC,EAErB,CACJ,EAAAV,EAAG,EAAAR,EAAG,GAAAC,EAAI,GAAAkB,CACZ,EAAI,MAAMjB,GAAa,CACrB,SAAAX,EAAU,SAAAC,EAAU,SAAAC,EAAU,KAAAC,EAAM,SAAAC,CACtC,CAAC,EAEDuB,EAAQ,KAAK,CACX,MAAO,sBAAuB,MAAOlB,EAAE,SAAS,EAAG,mBAAkC,SAAU,uBACjG,CAAC,EACDkB,EAAQ,KAAK,CACX,MAAO,kBAAmB,MAAOjB,EAAG,SAAS,EAAG,mBAAkC,SAAU,kBAC9F,CAAC,EACDiB,EAAQ,KAAK,CACX,MAAO,sBAAuB,MAAOV,EAAE,SAAS,EAAG,mBAAkC,SAAU,uBACjG,CAAC,EACDU,EAAQ,KAAK,CACX,MAAO,kBAAmB,MAAOC,EAAG,SAAS,EAAG,mBAAkC,SAAU,kBAC9F,CAAC,EAEDJ,EAAYG,CAAO,CACrB,OAASF,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAChC,CAAC,EAEDF,GAAoB,iBAAiB,QAAS,SAAY,CACxD,IAAM9B,EAAS6B,GAAqB,cAAgC,cAAc,EAAG,QAC/E5B,EAAa,OAAO4B,GAAqB,cAAiC,oBAAoB,EAAG,gBAAgB,CAAC,EAAE,KAAK,EACzH3B,EAAgB,OAAO2B,GAAqB,cAAiC,uBAAuB,EAAG,gBAAgB,CAAC,EAAE,QAAQ,GAAG,EACrIrB,EAAWqB,GAAqB,cAAgC,gBAAgB,GAAG,OAAS,GAC5FpB,EAAWoB,GAAqB,cAAgC,wBAAwB,GAAG,OAAS,GACpGO,EAAYP,GAAqB,cAAmC,sBAAsB,GAAG,OAAS,GAE5G,GAAI,CACF,IAAMnB,EAAO,OAAOmB,GAAqB,cAAmC,gBAAgB,GAAG,OAAS,EAAE,EACpGtB,EAAWR,GAAe,CAAE,OAAAC,EAAQ,WAAAC,EAAY,cAAAC,CAAc,CAAC,EAC/DgC,EAAoB,CAAC,EAIrBpB,EAAkB,OAAOsB,CAAS,EAClC,CAAE,EAAApB,EAAG,GAAAC,CAAG,EAAI,MAAML,GAAY,CAClC,SAAAL,EAAU,SAAAC,EAAU,SAAAC,EAAU,KAAAC,EAAM,gBAAAI,CACtC,CAAC,EAEDoB,EAAQ,KAAK,CACX,MAAO,sBAAuB,MAAOlB,EAAE,SAAS,EAAG,mBAAkC,SAAU,uBACjG,CAAC,EACDkB,EAAQ,KAAK,CACX,MAAO,kBAAmB,MAAOjB,EAAG,SAAS,EAAG,mBAAkC,SAAU,kBAC9F,CAAC,EAEDc,EAAYG,CAAO,CACrB,OAASF,EAAG,CAAEC,EAAYD,CAAC,CAAG,CAChC,CAAC,EC5MD,IAAMK,GAAY,SAAS,cAAiC,mCAAmC,EACzFC,GAAY,SAAS,cAAiC,uBAAuB,EAE7EC,GAAa,IAAM,CACvB,IAAMC,EAAKF,GAAU,gBAAgB,CAAC,EAAE,MAClCG,EAAOJ,GAAU,gBAAgB,CAAC,EAAE,QAAQ,IAC5CK,EAAS,SAAS,cAAc,eAAeF,CAAE,IAAIC,CAAI,EAAE,EAEhD,SAAS,iBAAiB,oCAAoC,EACtE,QAASE,GAAYA,EAAQ,UAAU,OAAO,QAAQ,CAAC,EAChED,GAAQ,UAAU,IAAI,QAAQ,CAChC,EAEME,GAAc,IAAM,CACxB,IAAMC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAYD,EAAK,cAAc,kBAAkB,EACjDE,EAASF,EAAK,cAAc,cAAc,EAC1CG,EAAgBH,EAAK,cAAc,qBAAqB,EAGxDI,EAAWZ,GAAU,gBAAgB,CAAC,EAAE,QAC9CS,EAAU,YAAcG,EAAS,IAAM,GACvCF,EAAO,YAAcE,EAAS,QAAU,GACxCD,EAAc,YAAcC,EAAS,MAAQ,GAG7CX,GAAU,YAAc,GACxBW,EAAS,YAAY,MAAM,GAAG,EAAE,QAAQ,CAACT,EAAI,IAAM,CACjD,IAAMU,EAAS,SAAS,cAAc,QAAQ,EAC1C,IAAM,IAAGA,EAAO,SAAW,IAC/BA,EAAO,MAAQV,EACfU,EAAO,YAAc,GAAGV,EAAG,CAAC,EAAE,YAAY,CAAC,GAAGA,EAAG,UAAU,CAAC,EAAE,QAAQ,IAAK,GAAG,CAAC,GAC/EF,GAAU,YAAYY,CAAM,CAC9B,CAAC,EAEDC,GAAY,EACZZ,GAAW,CACb,EAEAF,GAAU,iBAAiB,SAAUO,EAAW,EAChDN,GAAU,iBAAiB,SAAUC,EAAU,EChD/C,IAAMa,GAAUC,GAAiB,CAC/BA,EAAM,eAAe,EACfA,EAAM,OAA2B,cAAc,GAAGA,EAAM,yBAAyB,CACzF,EAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,SAAS,iBAAiB,MAAM,GAAG,QAASC,GAASA,EAAK,iBAAiB,SAAUF,EAAM,CAAC,CAC9F,CAAC,EAOD,IAAMG,GAAqB,CAACC,EAAmCC,IAA4B,IAAM,CAC/F,IAAMC,EAAWC,GAAcF,EAAM,KAAK,EAEtCC,GACFF,EAAe,WAAW,QAASI,GAAO,CACxC,IAAMC,EAASD,EACX,OAAOC,EAAO,KAAK,IAAMH,IAAUG,EAAO,SAAW,GAC3D,CAAC,CAEL,EAGMC,GAAgB,SAAS,iBAAoC,aAAa,EAChFA,GAAc,QAASC,GAAY,CACjC,IAAMN,EAAQM,EAAQ,cAAc,OAAO,EACrCC,EAASD,EAAQ,cAAc,QAAQ,EAC7CN,EAAM,iBAAiB,QAAS,IAAM,WAAWF,GAAmBS,EAAQP,CAAK,EAAG,CAAC,CAAC,CACxF,CAAC,EC3BD,IAAMQ,GAAU,SAAS,iBAA8B,iBAAiB,EAKlEC,GAAyBC,GAAkC,IAAM,CACrE,IAAMC,EAAiBD,EAAS,cAAe,cAAc,kBAAkB,GAAKA,EAAS,cAAe,cAAe,cAAc,kBAAkB,EACrJE,EAAWC,GAAcH,EAAS,KAAK,EAEzCE,GACFD,GAAgB,WAAW,QAASG,GAAO,CACzC,IAAMC,EAASD,EACX,OAAOC,EAAO,KAAK,IAAMH,IAAUG,EAAO,SAAW,GAC3D,CAAC,CAEL,EAEAP,GAAQ,QAASQ,GAAW,CACRA,EAAO,iBAAsC,UAAU,EAI/D,QAASN,GAAa,CAC9BA,EAAS,iBAAiB,QAAS,IAAM,WAAWD,GAAsBC,CAAQ,EAAG,CAAC,CAAC,EAGvFA,EAAS,iBAAiB,QAAS,IAAM,CACvC,IAAMO,EAAiBP,EAAS,cAAe,cAAc,kBAAkB,GAAKA,EAAS,cAAe,cAAe,cAAc,kBAAkB,EAE3J,GAAIO,EAAgB,CAClB,IAAMC,EAAQR,EAAS,MAAM,OACzBQ,IAAU,EAAGD,EAAe,YAAc,cACzCA,EAAe,YAAc,GAAGC,CAAK,aAC5C,CACF,CAAC,CACH,CAAC,CACH,CAAC,EAMD,IAAMC,GAAkBC,GAAiB,CACvCA,EAAM,gBAAgB,EACtBA,EAAM,eAAe,CACvB,EAEMC,GAAa,CAACC,EAAsBC,IAAiB,IAAM,CAC3DA,EAAKD,EAAQ,UAAU,IAAI,UAAU,EACpCA,EAAQ,UAAU,OAAO,UAAU,CAC1C,EAEAd,GAAQ,QAASQ,GAAW,CACRA,EAAO,iBAAsC,mBAAmB,EAExE,QAASN,GAAa,CAE9BA,GAAU,iBAAiB,YAAaS,EAAc,EACtDT,GAAU,iBAAiB,YAAaW,GAAWX,EAAU,EAAI,CAAC,EAClEA,GAAU,iBAAiB,WAAYS,EAAc,EACrDT,GAAU,iBAAiB,WAAYW,GAAWX,EAAU,EAAI,CAAC,EACjEA,GAAU,iBAAiB,YAAaW,GAAWX,EAAU,EAAK,CAAC,EACnEA,GAAU,iBAAiB,UAAWW,GAAWX,EAAU,EAAK,CAAC,EACjEA,GAAU,iBAAiB,OAAQS,EAAc,EACjDT,GAAU,iBAAiB,OAAQW,GAAWX,EAAU,EAAK,CAAC,CAChE,CAAC,CACH,CAAC,EAMD,IAAMc,GAAgBJ,GAAqB,CACzC,IAAM,EAAIA,EACK,EAAE,QACL,WAAa,YAAc,EAAE,eACvC,EAAE,eAAe,EACjB,EAAE,aAAa,cAAgB,OAC/B,EAAE,aAAa,WAAa,OAEhC,EAEA,OAAO,iBAAiB,WAAYI,EAAY,EAChD,OAAO,iBAAiB,YAAaA,EAAY,EACjD,OAAO,iBAAiB,OAAQA,EAAY,ECxF5C,IAAMC,GAAe,SAAS,iBAAiB,OAAO,EAEtDA,GAAa,QAASC,GAAgB,CACpC,IAAMC,EAAO,MAAM,KAAKD,EAAY,QAAQ,EACtCE,EAASF,EAAY,cACrBG,EAAWD,EAAO,iBAAiB,mBAAmB,EAE5DD,EAAK,QAASG,GAAQ,CAChBA,EAAI,UAAU,SAAS,OAAO,GAElCA,EAAI,iBAAiB,QAAS,IAAM,CAClCH,EAAK,QAASI,GAAMA,EAAE,UAAU,OAAO,QAAQ,CAAC,EAChDF,GAAU,QAASG,GAAMA,EAAE,UAAU,OAAO,QAAQ,CAAC,EAErDF,EAAI,UAAU,IAAI,QAAQ,EAC1BF,EAAO,cAAc,cAAcE,EAAI,QAAQ,MAAM,IAAI,GAAG,UAAU,IAAI,QAAQ,EAElFG,GAAY,CACd,CAAC,CACH,CAAC,CACH,CAAC",
  "names": ["require_bcrypt", "__commonJSMin", "exports", "module", "global", "factory", "__require", "bcrypt", "randomFallback", "random", "len", "a", "randomAvailable", "rounds", "seed_length", "GENSALT_DEFAULT_LOG2_ROUNDS", "salt", "base64_encode", "BCRYPT_SALT_LEN", "callback", "_async", "nextTick", "err", "resolve", "reject", "res", "s", "_hash", "progressCallback", "safeStringCompare", "known", "unknown", "right", "wrong", "i", "k", "hash", "comp", "stringToBytes", "str", "out", "utfx", "b", "BASE64_CODE", "BASE64_INDEX", "stringFromCharCode", "off", "rs", "c1", "c2", "base64_decode", "slen", "olen", "c3", "c4", "o", "code", "src", "dst", "cp", "c", "d", "fail", "l", "n", "BLOWFISH_NUM_ROUNDS", "MAX_EXECUTION_TIME", "P_ORIG", "S_ORIG", "C_ORIG", "_encipher", "lr", "P", "S", "r", "_streamtoword", "data", "offp", "word", "_key", "key", "offset", "plen", "sw", "_ekskey", "_crypt", "cdata", "clen", "j", "next", "start", "ret", "minor", "r1", "r2", "real_salt", "passwordb", "saltb", "finish", "bytes", "require_build", "__commonJSMin", "exports", "ARRAY_BUFFER_NAME", "BufferSourceConverter", "_BufferSourceConverter", "data", "type", "a", "b", "aView", "bView", "i", "args", "buffers", "size", "buffer", "res", "offset", "view", "STRING_TYPE", "HEX_REGEX", "BASE64_REGEX", "BASE64URL_REGEX", "Utf8Converter", "text", "s", "uintArray", "buf", "encodedString", "Utf16Converter", "littleEndian", "arrayBuffer", "dataView", "code", "Convert", "_Convert", "enc", "str", "binary", "base64", "formatted", "base64url", "encoding", "stringLength", "resultView", "result", "len", "byte", "hexString", "c", "padCount", "assign", "target", "sources", "obj", "prop", "combine", "totalByteLength", "item", "prev", "cur", "currentPos", "arr", "item2", "isEqual", "bytes1", "bytes2", "b1", "b2", "webcrypto", "digestFunctionToHashFunction", "algorithm", "data", "exports", "nodeCrypto", "nodeCreateHashToHashFunction", "e", "crossEnvCrypto_1", "SRPParameters", "_SRPParameters", "primeGroup", "H", "exports", "crossEnvCrypto_1", "ZERO", "ONE", "TWO", "bigIntToArrayBuffer", "n", "hex", "arrayBuffer", "u8", "offset", "i", "exports", "arrayBufferToBigInt", "stringToArrayBuffer", "str", "padStartArrayBuffer", "targetLength", "tmp", "hash", "parameters", "arrays", "length", "p", "c", "target", "hashPadded", "targetLen", "arraysPadded", "generateRandomString", "characterCount", "generateRandomBigInt", "numBytes", "generateRandom", "createVerifier", "routines", "I", "s", "P", "x", "createVerifierAndSalt", "sBytes", "hashBitCount", "__awaiter", "modPow", "pow", "mod", "result", "utils_1", "SRPRoutines", "parameters", "as", "targetLength", "numBytes", "HBits", "saltBytes", "I", "s", "P", "identityHash", "_", "x", "numBits", "bi", "a", "value", "A", "B", "_I", "_s", "S", "M1", "k", "u", "N", "exp", "tmp", "exports", "SRPClientSession", "routines", "userId", "userPassword", "IH", "SRPClientSessionStep1", "exports", "_SRPClientSessionStep1", "I", "salt", "B", "x", "a", "A", "k", "u", "S", "M1", "SRPClientSessionStep2", "state", "_SRPClientSessionStep2", "M2", "utils_1", "SRPServerSession", "routines", "identifier", "salt", "verifier", "b", "k", "B", "computeServerPublicValue", "SRPServerSessionStep1", "exports", "_SRPServerSessionStep1", "A", "u", "computeServerSessionKey", "M1", "S", "state", "parameters", "v", "N", "parameters_1", "exports", "routines_1", "session_client_1", "session_server_1", "utils_1", "warning", "supportWarnings", "BIGINT_SUPPORTED", "IDB_SUPPORTED", "SECURE_RANDOM_SUPPORTED", "SUBTLE_CRYPTO_SUPPORTED", "content", "item", "p", "loader", "load", "pct", "loader_default", "errorElement", "content", "handleError", "error", "err", "loader_default", "clearError", "bcrypt", "ENCODING", "encode", "rawData", "radix", "array", "str", "byte", "padding", "decode", "encodedData", "arr", "int", "bytes", "data", "i", "separator", "length", "guessEncoding", "CHEVRON_SVG", "CODE_SVG", "COPY_SVG", "DISK_SVG", "DONE_SVG", "DOUBLE_CHEVRON_SVG", "DOWNLOAD_BINARY_SVG", "DOWNLOAD_SVG", "KEY_SVG", "KEYS_SVG", "PRIVATE_EXPORT_SVG", "PUBLIC_EXPORT_SVG", "RULER_SVG", "TEXT_SVG", "TRASH_SVG", "resultElement", "downloadEvent", "data", "filename", "extension", "array", "ext", "guessEncoding", "blob", "uri", "suffix", "buildResultElement", "label", "value", "encoding", "bitLength", "rawData", "container", "h2", "content", "stats", "statsItems", "TEXT_SVG", "RULER_SVG", "canChangeEncoding", "actionItems", "DOWNLOAD_SVG", "ENCODING", "COPY_SVG", "DOWNLOAD_BINARY_SVG", "formLabel", "fieldLabel", "CODE_SVG", "select", "radix", "newValue", "encode", "result", "e", "handleError", "labelContent", "option", "chevron", "CHEVRON_SVG", "icon", "tooltip", "statValue", "stat", "span", "actions", "tooltipAfter", "callback", "a", "event", "DONE_SVG", "showResults", "results", "DOUBLE_CHEVRON_SVG", "clearError", "defaultEncoding", "byteLength", "decode", "loader_default", "hideResults", "menuItems", "sections", "item", "i", "hideResults", "digestSection", "digestSelect", "textarea", "details", "button", "digestMessage", "message", "algorithm", "encoding", "data", "decode", "loader_default", "text", "digest", "value", "comparedDigest", "showResults", "encode", "e", "handleError", "menu", "blockSize", "method", "specification", "selected", "hideResults", "digestFiles", "files", "checksums", "results", "sums", "line", "checksum", "filename", "file", "label", "extension", "readFiles", "list", "totalSize", "size", "currentSizes", "digests", "i", "reader", "event", "p", "c", "checksumExistsError", "upload", "randomElement", "menuItems", "sections", "item", "i", "hideResults", "prngGenerateButton", "loader_default", "prngByteLength", "prngOutput", "showResults", "bytes", "array", "blob", "uri", "a", "e", "handleError", "removeModal", "background", "event", "showModal", "iconSvg", "title", "prompt", "confirmationText", "callback", "modal", "container", "icon", "content", "titleElement", "p", "actions", "cancel", "confirm", "modal_default", "DATABASE_NAME", "KEY_STORE_NAME", "db", "openDatabase", "resolve", "reject", "request", "DATABASE_NAME", "KEY_STORE_NAME", "event", "storeKey", "keyName", "key", "deleteKey", "getKeys", "encryptionSection", "opArea", "tabs", "li", "updateLowerArea", "op", "alg", "textarea", "signature", "button", "placeholder", "elem", "updateOpArea", "keyName", "cryptoKey", "operation", "isSymmetric", "friendlyName", "key", "usages", "whichKey", "tab", "usage", "keyNameElement", "KEY_SVG", "span", "getKey", "operationArea_default", "keys", "updateKeyList", "hideResults", "list", "array", "li", "k", "v", "keyStructure", "operationArea_default", "container", "icon", "meta", "name", "disk", "DISK_SVG", "isSymmetric", "attributes", "type", "alg", "usages", "KEY_SVG", "KEYS_SVG", "actions", "exportPublic", "PUBLIC_EXPORT_SVG", "event", "key", "filename", "results", "spki", "exportKey", "encode", "showResults", "e", "handleError", "exportPrivate", "PRIVATE_EXPORT_SVG", "pkcs8", "trash", "TRASH_SVG", "modal_default", "removeKey", "showKeys", "addKey", "save", "storeKey", "loader_default", "getKey", "deleteKey", "format", "openDatabase", "getKeys", "encryptionSection", "opArea", "textarea", "encrypt", "operation", "data", "filename", "labelSuffix", "results", "suffix", "cryptoKey", "getKey", "isSymmetric", "filenamePrefix", "signatureTextarea", "signatureEncoding", "signature", "decode", "key", "algorithm", "saltLength", "hashAlgorithm", "verification", "counterValue", "counterRadix", "counter", "radix", "cbcIv", "cbcIvRadix", "iv", "gcmIv", "gcmIvRadix", "authenticatedDataTextArea", "tagLength", "additionalData", "ciphertext", "byteLength", "keySizeInBits", "sig", "plaintext", "button", "loader_default", "encoding", "showResults", "error", "handleError", "encryptFiles", "files", "list", "totalSize", "size", "file", "currentSizes", "i", "reader", "event", "p", "c", "label", "upload", "generateElement", "purposeElement", "updateStats", "algorithmSelect", "currentAglorithm", "type", "method", "spec", "confidentiality", "integrity", "section", "target", "alg", "intToArray", "num", "n", "bytes", "button", "loader_default", "name", "params", "keyUsage", "modulusLength", "exponent", "hash", "curve", "length", "extractable", "key", "persist", "addKey", "e", "handleError", "event", "pvtsutils", "utilFromBase", "inputBuffer", "inputBase", "result", "i", "utilToBase", "value", "base", "reserved", "internalReserved", "internalValue", "biggest", "retBuf", "retView", "j", "basis", "utilConcatView", "views", "outputLength", "prevLength", "view", "retBuf", "retView", "utilDecodeTC", "buf", "condition1", "condition2", "bigIntBuffer", "bigIntView", "i", "bigInt", "utilFromBase", "smallIntBuffer", "smallIntView", "j", "utilEncodeTC", "value", "modValue", "smallInt", "utilToBase", "tempBuf", "tempView", "k", "isEqualBuffer", "inputBuffer1", "inputBuffer2", "view1", "view2", "padNumber", "inputNumber", "fullLength", "str", "dif", "padding", "log2", "assertBigInt", "concat", "buffers", "outputLength", "prevLength", "i", "buffer", "retView", "checkBufferParams", "baseBlock", "inputBuffer", "inputOffset", "inputLength", "ViewWriter", "buf", "powers2", "digitsString", "NAME", "VALUE_HEX_VIEW", "IS_HEX_ONLY", "ID_BLOCK", "TAG_CLASS", "TAG_NUMBER", "IS_CONSTRUCTED", "FROM_BER", "TO_BER", "LOCAL", "EMPTY_STRING", "EMPTY_BUFFER", "EMPTY_VIEW", "END_OF_CONTENT_NAME", "OCTET_STRING_NAME", "BIT_STRING_NAME", "HexBlock", "BaseClass", "_a", "args", "params", "value", "view", "endLength", "sizeOnly", "LocalBaseBlock", "blockLength", "error", "warnings", "valueBeforeDecode", "ValueBlock", "writer", "LocalIdentificationBlock", "idBlock", "_b", "_c", "_d", "firstOctet", "number", "encodedBuf", "utilToBase", "encodedView", "size", "curView", "inputView", "intBuffer", "tagNumberMask", "count", "intTagNumberBuffer", "tagNumberBufferMaxLength", "tempBufferView", "utilFromBase", "LocalLengthBlock", "lenBlock", "lenOffset", "lengthBufferView", "retBuf", "typeStore", "BaseBlock", "name", "optional", "primitiveSchema", "parameters", "valueBlockType", "resultOffset", "_writer", "prepareIndefiniteForm", "idBlockBuf", "valueBlockBuf", "lenBlockBuf", "object", "encoding", "other", "thisRaw", "otherRaw", "isEqualBuffer", "BaseStringBlock", "stringValueBlockType", "LocalPrimitiveValueBlock", "isHexOnly", "_a$w", "Primitive", "localChangeType", "inputObject", "newType", "newObject", "localFromBER", "incomingOffset", "returnObject", "newASN1Type", "fromBER", "result", "checkLen", "indefiniteLength", "length", "LocalConstructedValueBlock", "isIndefiniteForm", "currentOffset", "_a$v", "Constructed", "values", "o", "blockName", "LocalEndOfContentValueBlock", "_a$u", "EndOfContent", "_a$t", "Null", "LocalBooleanValueBlock", "octet", "utilDecodeTC", "_a$s", "Boolean", "LocalOctetStringValueBlock", "isConstructed", "currentBlockName", "_a$r", "OctetString", "_OctetString", "asn", "array", "content", "LocalBitStringValueBlock", "unusedBits", "valueBlock", "_a$q", "BitString", "bits", "valueHex", "byte", "bitsStr", "_a$p", "viewAdd", "first", "second", "c", "firstView", "secondView", "firstViewCopy", "firstViewCopyLength", "secondViewCopy", "secondViewCopyLength", "max", "counter", "utilConcatView", "power2", "n", "p", "digits", "newValue", "viewSub", "b", "LocalIntegerValueBlock", "v", "utilEncodeTC", "expectedLength", "offset", "updatedView", "firstBit", "bitNumber", "currentByte", "asn1View", "flag", "byteNumber", "_a$o", "Integer", "_Integer", "bigIntValue", "hex", "secondInt", "integer", "_a$n", "Enumerated", "LocalSidValueBlock", "valueDec", "isFirstSid", "tempView", "bytes", "len", "sidValue", "LocalObjectIdentifierValueBlock", "sidBlock", "retBuffers", "valueBuf", "string", "pos1", "pos2", "sid", "plus", "parsedSID", "sidStr", "_a$m", "ObjectIdentifier", "LocalRelativeSidValueBlock", "LocalRelativeObjectIdentifierValueBlock", "_a$l", "RelativeObjectIdentifier", "_a$k", "Sequence", "_a$j", "Set", "LocalStringValueBlock", "LocalSimpleStringValueBlock", "LocalSimpleStringBlock", "inputString", "strLen", "LocalUtf8StringValueBlock", "ex", "_a$i", "Utf8String", "LocalBmpStringValueBlock", "_a$h", "BmpString", "LocalUniversalStringValueBlock", "copyBuffer", "valueView", "strLength", "valueHexView", "codeBuf", "codeView", "dif", "j", "_a$g", "UniversalString", "_a$f", "NumericString", "_a$e", "PrintableString", "_a$d", "TeletexString", "_a$c", "VideotexString", "_a$b", "IA5String", "_a$a", "GraphicString", "_a$9", "VisibleString", "_a$8", "GeneralString", "_a$7", "CharacterString", "_a$6", "UTCTime", "valueDate", "str", "inputDate", "parserArray", "year", "outputArray", "padNumber", "_a$5", "GeneralizedTime", "isUTC", "timeString", "dateTimeString", "fractionPart", "parser", "hourDifference", "minuteDifference", "multiplier", "differencePosition", "differenceString", "fractionPointPosition", "fractionPartCheck", "fractionResult", "tempDate", "_a$4", "DATE", "_a$3", "TimeOfDay", "_a$2", "DateTime", "_a$1", "Duration", "TIME", "Any", "Choice", "Repeated", "local", "compareSchema", "root", "inputData", "inputSchema", "Choice", "j", "_result", "NAME", "Any", "ID_BLOCK", "FROM_BER", "TO_BER", "encodedId", "TAG_CLASS", "TAG_NUMBER", "IS_CONSTRUCTED", "IS_HEX_ONLY", "VALUE_HEX_VIEW", "schemaView", "asn1View", "i", "EMPTY_STRING", "typeStore", "admission", "result", "maxLength", "Repeated", "_optional", "arrayRoot", "LOCAL", "asn1", "localFromBER", "PUBLIC_KEY_SCHEMA", "Sequence", "ObjectIdentifier", "Any", "BitString", "PRIVATE_KEY_SCHEMA", "Integer", "OctetString", "Constructed", "Repeated", "Set", "section", "importButton", "textarea", "algorithmSelect", "keyTypeSelect", "value", "encoding", "guessEncoding", "isSymmetric", "isPrivate", "format", "keyData", "algorithm", "keyUsages", "jwk", "der", "decode", "root", "fromBER", "schema", "compareSchema", "algorithmId", "e", "handleError", "extractable", "keyName", "saveKey", "algId", "hashBits", "name", "hash", "key", "addKey", "bcrypt", "bcryptControl", "bcryptCost", "value", "bcryptComplete", "button", "text", "error", "result", "handleError", "showResults", "sansHash", "salt", "hash", "btn", "bcryptProgress", "num", "loader_default", "bcryptHashButton", "cost", "password", "e", "bcryptVerifyButton", "hashSettings", "prfSelect", "lengthInput", "iterationsInput", "saltEncoding", "saltInput", "passwordInput", "button", "ol", "bs", "loader_default", "password", "key", "salt", "radix", "decode", "hash", "iterations", "algorithm", "length", "derivation", "toB64", "base64", "b64Salt", "encode", "b64Hash", "hashString", "showResults", "e", "handleError", "import_tssrp6a", "SRP6aRoutines", "I", "P", "getSRPRoutines", "strict", "primeGroup", "hashAlgorithm", "group", "hash", "params", "register", "routines", "username", "password", "salt", "verifier", "proveClient", "settings", "serverPublicKey", "clientStep2", "A", "M1", "authenticate", "client", "server", "clientStep1", "serverStep1", "serverStep2", "B", "registerSection", "registerButton", "authenticateSection", "authenticateButton", "proveIdentitySection", "proveIdentityButton", "showResults", "e", "handleError", "results", "M2", "publicKey", "algorithm", "operation", "updateView", "op", "hash", "target", "setting", "updateStats", "menu", "blockSize", "method", "specification", "selected", "option", "hideResults", "submit", "event", "form", "checkInputEncoding", "encodingSelect", "input", "encoding", "guessEncoding", "op", "option", "multiElements", "element", "select", "opAreas", "checkTextareaEncoding", "textarea", "encodingSelect", "encoding", "guessEncoding", "op", "option", "opArea", "characterCount", "count", "preventDefault", "event", "classState", "element", "add", "disallowDrop", "tabsElements", "tabsElement", "tabs", "parent", "sections", "tab", "t", "s", "hideResults"]
}
